
PublishCompass.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  00001a80  00001b14  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a80  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800128  00800128  00001b3c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00001bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000721  00000000  00000000  00001c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000030a  00000000  00000000  000023b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000477  00000000  00000000  000026c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000294  00000000  00000000  00002b3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000329  00000000  00000000  00002dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000535  00000000  00000000  000030f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  0000362e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cc 00 	jmp	0x198	; 0x198 <__ctors_end>
       4:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
       8:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
       c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      10:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      14:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      18:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      1c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      20:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      24:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      28:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      2c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      30:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      34:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      38:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      3c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      40:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      44:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      48:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      4c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      50:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      54:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      58:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      5c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      60:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      64:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 00       	.word	0x003f	; ????

00000096 <__trampolines_end>:
      96:	6e 61       	ori	r22, 0x1E	; 30
      98:	6e 00       	.word	0x006e	; ????

0000009a <__c.2177>:
      9a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      aa:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      ba:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      ca:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      da:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      ea:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      fa:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     10a:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     11a:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     12a:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     13a:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     14a:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     15a:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     16a:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     17a:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     18a:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000198 <__ctors_end>:
     198:	11 24       	eor	r1, r1
     19a:	1f be       	out	0x3f, r1	; 63
     19c:	cf ef       	ldi	r28, 0xFF	; 255
     19e:	d8 e0       	ldi	r29, 0x08	; 8
     1a0:	de bf       	out	0x3e, r29	; 62
     1a2:	cd bf       	out	0x3d, r28	; 61

000001a4 <__do_copy_data>:
     1a4:	11 e0       	ldi	r17, 0x01	; 1
     1a6:	a0 e0       	ldi	r26, 0x00	; 0
     1a8:	b1 e0       	ldi	r27, 0x01	; 1
     1aa:	e0 e8       	ldi	r30, 0x80	; 128
     1ac:	fa e1       	ldi	r31, 0x1A	; 26
     1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <__do_copy_data+0x10>
     1b0:	05 90       	lpm	r0, Z+
     1b2:	0d 92       	st	X+, r0
     1b4:	a8 32       	cpi	r26, 0x28	; 40
     1b6:	b1 07       	cpc	r27, r17
     1b8:	d9 f7       	brne	.-10     	; 0x1b0 <__do_copy_data+0xc>

000001ba <__do_clear_bss>:
     1ba:	21 e0       	ldi	r18, 0x01	; 1
     1bc:	a8 e2       	ldi	r26, 0x28	; 40
     1be:	b1 e0       	ldi	r27, 0x01	; 1
     1c0:	01 c0       	rjmp	.+2      	; 0x1c4 <.do_clear_bss_start>

000001c2 <.do_clear_bss_loop>:
     1c2:	1d 92       	st	X+, r1

000001c4 <.do_clear_bss_start>:
     1c4:	ae 32       	cpi	r26, 0x2E	; 46
     1c6:	b2 07       	cpc	r27, r18
     1c8:	e1 f7       	brne	.-8      	; 0x1c2 <.do_clear_bss_loop>
     1ca:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <main>
     1ce:	0c 94 3e 0d 	jmp	0x1a7c	; 0x1a7c <_exit>

000001d2 <__bad_interrupt>:
     1d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d6 <i2c_init>:

/*************************************************************************
 Initialization of the I2C bus interface. Need to be called only once
*************************************************************************/
void i2c_init(void)
{
     1d6:	cf 93       	push	r28
     1d8:	df 93       	push	r29
     1da:	cd b7       	in	r28, 0x3d	; 61
     1dc:	de b7       	in	r29, 0x3e	; 62
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
     1de:	89 eb       	ldi	r24, 0xB9	; 185
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	fc 01       	movw	r30, r24
     1e4:	10 82       	st	Z, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     1e6:	88 eb       	ldi	r24, 0xB8	; 184
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	22 e0       	ldi	r18, 0x02	; 2
     1ec:	fc 01       	movw	r30, r24
     1ee:	20 83       	st	Z, r18

}/* i2c_init */
     1f0:	df 91       	pop	r29
     1f2:	cf 91       	pop	r28
     1f4:	08 95       	ret

000001f6 <i2c_start>:
/*************************************************************************	
  Issues a start condition and sends address and transfer direction.
  return 0 = device accessible, 1= failed to access device
*************************************************************************/
unsigned char i2c_start(unsigned char address)
{
     1f6:	cf 93       	push	r28
     1f8:	df 93       	push	r29
     1fa:	00 d0       	rcall	.+0      	; 0x1fc <i2c_start+0x6>
     1fc:	cd b7       	in	r28, 0x3d	; 61
     1fe:	de b7       	in	r29, 0x3e	; 62
     200:	8a 83       	std	Y+2, r24	; 0x02
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     202:	8c eb       	ldi	r24, 0xBC	; 188
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	24 ea       	ldi	r18, 0xA4	; 164
     208:	fc 01       	movw	r30, r24
     20a:	20 83       	st	Z, r18

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     20c:	00 00       	nop
     20e:	8c eb       	ldi	r24, 0xBC	; 188
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	fc 01       	movw	r30, r24
     214:	80 81       	ld	r24, Z
     216:	88 23       	and	r24, r24
     218:	d4 f7       	brge	.-12     	; 0x20e <i2c_start+0x18>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     21a:	89 eb       	ldi	r24, 0xB9	; 185
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	fc 01       	movw	r30, r24
     220:	80 81       	ld	r24, Z
     222:	88 7f       	andi	r24, 0xF8	; 248
     224:	89 83       	std	Y+1, r24	; 0x01
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     226:	89 81       	ldd	r24, Y+1	; 0x01
     228:	88 30       	cpi	r24, 0x08	; 8
     22a:	29 f0       	breq	.+10     	; 0x236 <i2c_start+0x40>
     22c:	89 81       	ldd	r24, Y+1	; 0x01
     22e:	80 31       	cpi	r24, 0x10	; 16
     230:	11 f0       	breq	.+4      	; 0x236 <i2c_start+0x40>
     232:	81 e0       	ldi	r24, 0x01	; 1
     234:	20 c0       	rjmp	.+64     	; 0x276 <i2c_start+0x80>

	// send device address
	TWDR = address;
     236:	8b eb       	ldi	r24, 0xBB	; 187
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	2a 81       	ldd	r18, Y+2	; 0x02
     23c:	fc 01       	movw	r30, r24
     23e:	20 83       	st	Z, r18
	TWCR = (1<<TWINT) | (1<<TWEN);
     240:	8c eb       	ldi	r24, 0xBC	; 188
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	24 e8       	ldi	r18, 0x84	; 132
     246:	fc 01       	movw	r30, r24
     248:	20 83       	st	Z, r18

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     24a:	00 00       	nop
     24c:	8c eb       	ldi	r24, 0xBC	; 188
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	fc 01       	movw	r30, r24
     252:	80 81       	ld	r24, Z
     254:	88 23       	and	r24, r24
     256:	d4 f7       	brge	.-12     	; 0x24c <i2c_start+0x56>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     258:	89 eb       	ldi	r24, 0xB9	; 185
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	fc 01       	movw	r30, r24
     25e:	80 81       	ld	r24, Z
     260:	88 7f       	andi	r24, 0xF8	; 248
     262:	89 83       	std	Y+1, r24	; 0x01
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     264:	89 81       	ldd	r24, Y+1	; 0x01
     266:	88 31       	cpi	r24, 0x18	; 24
     268:	29 f0       	breq	.+10     	; 0x274 <i2c_start+0x7e>
     26a:	89 81       	ldd	r24, Y+1	; 0x01
     26c:	80 34       	cpi	r24, 0x40	; 64
     26e:	11 f0       	breq	.+4      	; 0x274 <i2c_start+0x7e>
     270:	81 e0       	ldi	r24, 0x01	; 1
     272:	01 c0       	rjmp	.+2      	; 0x276 <i2c_start+0x80>

	return 0;
     274:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     276:	0f 90       	pop	r0
     278:	0f 90       	pop	r0
     27a:	df 91       	pop	r29
     27c:	cf 91       	pop	r28
     27e:	08 95       	ret

00000280 <i2c_start_wait>:
 If device is busy, use ack polling to wait until device is ready
 
 Input:   address and transfer direction of I2C device
*************************************************************************/
void i2c_start_wait(unsigned char address)
{
     280:	cf 93       	push	r28
     282:	df 93       	push	r29
     284:	00 d0       	rcall	.+0      	; 0x286 <i2c_start_wait+0x6>
     286:	cd b7       	in	r28, 0x3d	; 61
     288:	de b7       	in	r29, 0x3e	; 62
     28a:	8a 83       	std	Y+2, r24	; 0x02


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     28c:	8c eb       	ldi	r24, 0xBC	; 188
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	24 ea       	ldi	r18, 0xA4	; 164
     292:	fc 01       	movw	r30, r24
     294:	20 83       	st	Z, r18
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     296:	00 00       	nop
     298:	8c eb       	ldi	r24, 0xBC	; 188
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	fc 01       	movw	r30, r24
     29e:	80 81       	ld	r24, Z
     2a0:	88 23       	and	r24, r24
     2a2:	d4 f7       	brge	.-12     	; 0x298 <i2c_start_wait+0x18>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     2a4:	89 eb       	ldi	r24, 0xB9	; 185
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	fc 01       	movw	r30, r24
     2aa:	80 81       	ld	r24, Z
     2ac:	88 7f       	andi	r24, 0xF8	; 248
     2ae:	89 83       	std	Y+1, r24	; 0x01
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
     2b0:	89 81       	ldd	r24, Y+1	; 0x01
     2b2:	88 30       	cpi	r24, 0x08	; 8
     2b4:	21 f0       	breq	.+8      	; 0x2be <i2c_start_wait+0x3e>
     2b6:	89 81       	ldd	r24, Y+1	; 0x01
     2b8:	80 31       	cpi	r24, 0x10	; 16
     2ba:	09 f0       	breq	.+2      	; 0x2be <i2c_start_wait+0x3e>
     2bc:	2f c0       	rjmp	.+94     	; 0x31c <i2c_start_wait+0x9c>
    
    	// send device address
    	TWDR = address;
     2be:	8b eb       	ldi	r24, 0xBB	; 187
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	2a 81       	ldd	r18, Y+2	; 0x02
     2c4:	fc 01       	movw	r30, r24
     2c6:	20 83       	st	Z, r18
    	TWCR = (1<<TWINT) | (1<<TWEN);
     2c8:	8c eb       	ldi	r24, 0xBC	; 188
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	24 e8       	ldi	r18, 0x84	; 132
     2ce:	fc 01       	movw	r30, r24
     2d0:	20 83       	st	Z, r18
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     2d2:	00 00       	nop
     2d4:	8c eb       	ldi	r24, 0xBC	; 188
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	fc 01       	movw	r30, r24
     2da:	80 81       	ld	r24, Z
     2dc:	88 23       	and	r24, r24
     2de:	d4 f7       	brge	.-12     	; 0x2d4 <i2c_start_wait+0x54>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     2e0:	89 eb       	ldi	r24, 0xB9	; 185
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	fc 01       	movw	r30, r24
     2e6:	80 81       	ld	r24, Z
     2e8:	88 7f       	andi	r24, 0xF8	; 248
     2ea:	89 83       	std	Y+1, r24	; 0x01
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
     2ec:	89 81       	ldd	r24, Y+1	; 0x01
     2ee:	80 32       	cpi	r24, 0x20	; 32
     2f0:	19 f0       	breq	.+6      	; 0x2f8 <i2c_start_wait+0x78>
     2f2:	89 81       	ldd	r24, Y+1	; 0x01
     2f4:	88 35       	cpi	r24, 0x58	; 88
     2f6:	89 f4       	brne	.+34     	; 0x31a <i2c_start_wait+0x9a>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     2f8:	8c eb       	ldi	r24, 0xBC	; 188
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	24 e9       	ldi	r18, 0x94	; 148
     2fe:	fc 01       	movw	r30, r24
     300:	20 83       	st	Z, r18
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
     302:	00 00       	nop
     304:	8c eb       	ldi	r24, 0xBC	; 188
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	fc 01       	movw	r30, r24
     30a:	80 81       	ld	r24, Z
     30c:	88 2f       	mov	r24, r24
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	80 71       	andi	r24, 0x10	; 16
     312:	99 27       	eor	r25, r25
     314:	89 2b       	or	r24, r25
     316:	b1 f7       	brne	.-20     	; 0x304 <i2c_start_wait+0x84>
	        
    	    continue;
     318:	01 c0       	rjmp	.+2      	; 0x31c <i2c_start_wait+0x9c>
    	}
    	//if( twst != TW_MT_SLA_ACK) return 1;
    	break;
     31a:	01 c0       	rjmp	.+2      	; 0x31e <i2c_start_wait+0x9e>
     }
     31c:	b7 cf       	rjmp	.-146    	; 0x28c <i2c_start_wait+0xc>

}/* i2c_start_wait */
     31e:	0f 90       	pop	r0
     320:	0f 90       	pop	r0
     322:	df 91       	pop	r29
     324:	cf 91       	pop	r28
     326:	08 95       	ret

00000328 <i2c_stop>:

/*************************************************************************
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
     328:	cf 93       	push	r28
     32a:	df 93       	push	r29
     32c:	cd b7       	in	r28, 0x3d	; 61
     32e:	de b7       	in	r29, 0x3e	; 62
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     330:	8c eb       	ldi	r24, 0xBC	; 188
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	24 e9       	ldi	r18, 0x94	; 148
     336:	fc 01       	movw	r30, r24
     338:	20 83       	st	Z, r18
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     33a:	00 00       	nop
     33c:	8c eb       	ldi	r24, 0xBC	; 188
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	fc 01       	movw	r30, r24
     342:	80 81       	ld	r24, Z
     344:	88 2f       	mov	r24, r24
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	80 71       	andi	r24, 0x10	; 16
     34a:	99 27       	eor	r25, r25
     34c:	89 2b       	or	r24, r25
     34e:	b1 f7       	brne	.-20     	; 0x33c <i2c_stop+0x14>

}/* i2c_stop */
     350:	df 91       	pop	r29
     352:	cf 91       	pop	r28
     354:	08 95       	ret

00000356 <i2c_write>:
  Input:    byte to be transfered
  Return:   0 write successful 
            1 write failed
*************************************************************************/
unsigned char i2c_write( unsigned char data )
{	
     356:	cf 93       	push	r28
     358:	df 93       	push	r29
     35a:	00 d0       	rcall	.+0      	; 0x35c <i2c_write+0x6>
     35c:	cd b7       	in	r28, 0x3d	; 61
     35e:	de b7       	in	r29, 0x3e	; 62
     360:	8a 83       	std	Y+2, r24	; 0x02
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     362:	8b eb       	ldi	r24, 0xBB	; 187
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	2a 81       	ldd	r18, Y+2	; 0x02
     368:	fc 01       	movw	r30, r24
     36a:	20 83       	st	Z, r18
	TWCR = (1<<TWINT) | (1<<TWEN);
     36c:	8c eb       	ldi	r24, 0xBC	; 188
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	24 e8       	ldi	r18, 0x84	; 132
     372:	fc 01       	movw	r30, r24
     374:	20 83       	st	Z, r18

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     376:	00 00       	nop
     378:	8c eb       	ldi	r24, 0xBC	; 188
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	fc 01       	movw	r30, r24
     37e:	80 81       	ld	r24, Z
     380:	88 23       	and	r24, r24
     382:	d4 f7       	brge	.-12     	; 0x378 <i2c_write+0x22>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     384:	89 eb       	ldi	r24, 0xB9	; 185
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	fc 01       	movw	r30, r24
     38a:	80 81       	ld	r24, Z
     38c:	88 7f       	andi	r24, 0xF8	; 248
     38e:	89 83       	std	Y+1, r24	; 0x01
	if( twst != TW_MT_DATA_ACK) return 1;
     390:	89 81       	ldd	r24, Y+1	; 0x01
     392:	88 32       	cpi	r24, 0x28	; 40
     394:	11 f0       	breq	.+4      	; 0x39a <i2c_write+0x44>
     396:	81 e0       	ldi	r24, 0x01	; 1
     398:	01 c0       	rjmp	.+2      	; 0x39c <i2c_write+0x46>
	return 0;
     39a:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_write */
     39c:	0f 90       	pop	r0
     39e:	0f 90       	pop	r0
     3a0:	df 91       	pop	r29
     3a2:	cf 91       	pop	r28
     3a4:	08 95       	ret

000003a6 <i2c_readAck>:
 Read one byte from the I2C device, request more data from device 
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	cd b7       	in	r28, 0x3d	; 61
     3ac:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     3ae:	8c eb       	ldi	r24, 0xBC	; 188
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	24 ec       	ldi	r18, 0xC4	; 196
     3b4:	fc 01       	movw	r30, r24
     3b6:	20 83       	st	Z, r18
	while(!(TWCR & (1<<TWINT)));    
     3b8:	00 00       	nop
     3ba:	8c eb       	ldi	r24, 0xBC	; 188
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	fc 01       	movw	r30, r24
     3c0:	80 81       	ld	r24, Z
     3c2:	88 23       	and	r24, r24
     3c4:	d4 f7       	brge	.-12     	; 0x3ba <i2c_readAck+0x14>

    return TWDR;
     3c6:	8b eb       	ldi	r24, 0xBB	; 187
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	fc 01       	movw	r30, r24
     3cc:	80 81       	ld	r24, Z

}/* i2c_readAck */
     3ce:	df 91       	pop	r29
     3d0:	cf 91       	pop	r28
     3d2:	08 95       	ret

000003d4 <i2c_readNak>:
 Read one byte from the I2C device, read is followed by a stop condition 
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
     3d4:	cf 93       	push	r28
     3d6:	df 93       	push	r29
     3d8:	cd b7       	in	r28, 0x3d	; 61
     3da:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1<<TWINT) | (1<<TWEN);
     3dc:	8c eb       	ldi	r24, 0xBC	; 188
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	24 e8       	ldi	r18, 0x84	; 132
     3e2:	fc 01       	movw	r30, r24
     3e4:	20 83       	st	Z, r18
	while(!(TWCR & (1<<TWINT)));
     3e6:	00 00       	nop
     3e8:	8c eb       	ldi	r24, 0xBC	; 188
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	fc 01       	movw	r30, r24
     3ee:	80 81       	ld	r24, Z
     3f0:	88 23       	and	r24, r24
     3f2:	d4 f7       	brge	.-12     	; 0x3e8 <i2c_readNak+0x14>
	
    return TWDR;
     3f4:	8b eb       	ldi	r24, 0xBB	; 187
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	fc 01       	movw	r30, r24
     3fa:	80 81       	ld	r24, Z

}/* i2c_readNak */
     3fc:	df 91       	pop	r29
     3fe:	cf 91       	pop	r28
     400:	08 95       	ret

00000402 <HMC5883L_init>:
#define		X_LSB_REG		0x03
#define		Y_LSB_REG		0x07
#define		Z_LSB_REG		0x05

void HMC5883L_init()
{
     402:	cf 93       	push	r28
     404:	df 93       	push	r29
     406:	cd b7       	in	r28, 0x3d	; 61
     408:	de b7       	in	r29, 0x3e	; 62
     40a:	2e 97       	sbiw	r28, 0x0e	; 14
     40c:	0f b6       	in	r0, 0x3f	; 63
     40e:	f8 94       	cli
     410:	de bf       	out	0x3e, r29	; 62
     412:	0f be       	out	0x3f, r0	; 63
     414:	cd bf       	out	0x3d, r28	; 61
	// Write 0x70 to HMC5883L register  A
	//	"	 0x20 to	"		"		B
	//	"	 0x00 to	"		"		Mode
	i2c_start(HMC5883L_ADDR+I2C_WRITE);
     416:	8c e3       	ldi	r24, 0x3C	; 60
     418:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <i2c_start>
	i2c_write(CONF_A_REG);
     41c:	80 e0       	ldi	r24, 0x00	; 0
     41e:	0e 94 ab 01 	call	0x356	; 0x356 <i2c_write>
	i2c_write(0x70);	// avg 8 samples, 15Hz, Normal measurement
     422:	80 e7       	ldi	r24, 0x70	; 112
     424:	0e 94 ab 01 	call	0x356	; 0x356 <i2c_write>
	i2c_write(0x20);
     428:	80 e2       	ldi	r24, 0x20	; 32
     42a:	0e 94 ab 01 	call	0x356	; 0x356 <i2c_write>
	i2c_write(0x00);
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	0e 94 ab 01 	call	0x356	; 0x356 <i2c_write>
	i2c_stop();			// Release the bus. 
     434:	0e 94 94 01 	call	0x328	; 0x328 <i2c_stop>
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	90 e0       	ldi	r25, 0x00	; 0
     43c:	a0 e8       	ldi	r26, 0x80	; 128
     43e:	bf e3       	ldi	r27, 0x3F	; 63
     440:	89 83       	std	Y+1, r24	; 0x01
     442:	9a 83       	std	Y+2, r25	; 0x02
     444:	ab 83       	std	Y+3, r26	; 0x03
     446:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     448:	20 e0       	ldi	r18, 0x00	; 0
     44a:	30 e0       	ldi	r19, 0x00	; 0
     44c:	4a ef       	ldi	r20, 0xFA	; 250
     44e:	54 e4       	ldi	r21, 0x44	; 68
     450:	69 81       	ldd	r22, Y+1	; 0x01
     452:	7a 81       	ldd	r23, Y+2	; 0x02
     454:	8b 81       	ldd	r24, Y+3	; 0x03
     456:	9c 81       	ldd	r25, Y+4	; 0x04
     458:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <__mulsf3>
     45c:	dc 01       	movw	r26, r24
     45e:	cb 01       	movw	r24, r22
     460:	8d 83       	std	Y+5, r24	; 0x05
     462:	9e 83       	std	Y+6, r25	; 0x06
     464:	af 83       	std	Y+7, r26	; 0x07
     466:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     468:	20 e0       	ldi	r18, 0x00	; 0
     46a:	30 e0       	ldi	r19, 0x00	; 0
     46c:	40 e8       	ldi	r20, 0x80	; 128
     46e:	5f e3       	ldi	r21, 0x3F	; 63
     470:	6d 81       	ldd	r22, Y+5	; 0x05
     472:	7e 81       	ldd	r23, Y+6	; 0x06
     474:	8f 81       	ldd	r24, Y+7	; 0x07
     476:	98 85       	ldd	r25, Y+8	; 0x08
     478:	0e 94 50 05 	call	0xaa0	; 0xaa0 <__cmpsf2>
     47c:	88 23       	and	r24, r24
     47e:	2c f4       	brge	.+10     	; 0x48a <HMC5883L_init+0x88>
		__ticks = 1;
     480:	81 e0       	ldi	r24, 0x01	; 1
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	9a 87       	std	Y+10, r25	; 0x0a
     486:	89 87       	std	Y+9, r24	; 0x09
     488:	3f c0       	rjmp	.+126    	; 0x508 <HMC5883L_init+0x106>
	else if (__tmp > 65535)
     48a:	20 e0       	ldi	r18, 0x00	; 0
     48c:	3f ef       	ldi	r19, 0xFF	; 255
     48e:	4f e7       	ldi	r20, 0x7F	; 127
     490:	57 e4       	ldi	r21, 0x47	; 71
     492:	6d 81       	ldd	r22, Y+5	; 0x05
     494:	7e 81       	ldd	r23, Y+6	; 0x06
     496:	8f 81       	ldd	r24, Y+7	; 0x07
     498:	98 85       	ldd	r25, Y+8	; 0x08
     49a:	0e 94 d6 06 	call	0xdac	; 0xdac <__gesf2>
     49e:	18 16       	cp	r1, r24
     4a0:	4c f5       	brge	.+82     	; 0x4f4 <HMC5883L_init+0xf2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4a2:	20 e0       	ldi	r18, 0x00	; 0
     4a4:	30 e0       	ldi	r19, 0x00	; 0
     4a6:	40 e2       	ldi	r20, 0x20	; 32
     4a8:	51 e4       	ldi	r21, 0x41	; 65
     4aa:	69 81       	ldd	r22, Y+1	; 0x01
     4ac:	7a 81       	ldd	r23, Y+2	; 0x02
     4ae:	8b 81       	ldd	r24, Y+3	; 0x03
     4b0:	9c 81       	ldd	r25, Y+4	; 0x04
     4b2:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <__mulsf3>
     4b6:	dc 01       	movw	r26, r24
     4b8:	cb 01       	movw	r24, r22
     4ba:	bc 01       	movw	r22, r24
     4bc:	cd 01       	movw	r24, r26
     4be:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__fixunssfsi>
     4c2:	dc 01       	movw	r26, r24
     4c4:	cb 01       	movw	r24, r22
     4c6:	9a 87       	std	Y+10, r25	; 0x0a
     4c8:	89 87       	std	Y+9, r24	; 0x09
     4ca:	0f c0       	rjmp	.+30     	; 0x4ea <HMC5883L_init+0xe8>
     4cc:	88 ec       	ldi	r24, 0xC8	; 200
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	9c 87       	std	Y+12, r25	; 0x0c
     4d2:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     4d4:	8b 85       	ldd	r24, Y+11	; 0x0b
     4d6:	9c 85       	ldd	r25, Y+12	; 0x0c
     4d8:	01 97       	sbiw	r24, 0x01	; 1
     4da:	f1 f7       	brne	.-4      	; 0x4d8 <HMC5883L_init+0xd6>
     4dc:	9c 87       	std	Y+12, r25	; 0x0c
     4de:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4e0:	89 85       	ldd	r24, Y+9	; 0x09
     4e2:	9a 85       	ldd	r25, Y+10	; 0x0a
     4e4:	01 97       	sbiw	r24, 0x01	; 1
     4e6:	9a 87       	std	Y+10, r25	; 0x0a
     4e8:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4ea:	89 85       	ldd	r24, Y+9	; 0x09
     4ec:	9a 85       	ldd	r25, Y+10	; 0x0a
     4ee:	89 2b       	or	r24, r25
     4f0:	69 f7       	brne	.-38     	; 0x4cc <HMC5883L_init+0xca>
     4f2:	14 c0       	rjmp	.+40     	; 0x51c <HMC5883L_init+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4f4:	6d 81       	ldd	r22, Y+5	; 0x05
     4f6:	7e 81       	ldd	r23, Y+6	; 0x06
     4f8:	8f 81       	ldd	r24, Y+7	; 0x07
     4fa:	98 85       	ldd	r25, Y+8	; 0x08
     4fc:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__fixunssfsi>
     500:	dc 01       	movw	r26, r24
     502:	cb 01       	movw	r24, r22
     504:	9a 87       	std	Y+10, r25	; 0x0a
     506:	89 87       	std	Y+9, r24	; 0x09
     508:	89 85       	ldd	r24, Y+9	; 0x09
     50a:	9a 85       	ldd	r25, Y+10	; 0x0a
     50c:	9e 87       	std	Y+14, r25	; 0x0e
     50e:	8d 87       	std	Y+13, r24	; 0x0d
     510:	8d 85       	ldd	r24, Y+13	; 0x0d
     512:	9e 85       	ldd	r25, Y+14	; 0x0e
     514:	01 97       	sbiw	r24, 0x01	; 1
     516:	f1 f7       	brne	.-4      	; 0x514 <HMC5883L_init+0x112>
     518:	9e 87       	std	Y+14, r25	; 0x0e
     51a:	8d 87       	std	Y+13, r24	; 0x0d
// 	// Write 0x00 to HMC5883L Mode register
// 	i2c_start_wait(WRITE_ADDRESS);
// 	i2c_write(CONF_M_REG);
// 	i2c_write(0x00);	// slow I2C, continuous measurement mode
// 	i2c_stop();			// release bus
}
     51c:	2e 96       	adiw	r28, 0x0e	; 14
     51e:	0f b6       	in	r0, 0x3f	; 63
     520:	f8 94       	cli
     522:	de bf       	out	0x3e, r29	; 62
     524:	0f be       	out	0x3f, r0	; 63
     526:	cd bf       	out	0x3d, r28	; 61
     528:	df 91       	pop	r29
     52a:	cf 91       	pop	r28
     52c:	08 95       	ret

0000052e <readCompass>:

void readCompass(int16_t *value) 
{
     52e:	0f 93       	push	r16
     530:	1f 93       	push	r17
     532:	cf 93       	push	r28
     534:	df 93       	push	r29
     536:	00 d0       	rcall	.+0      	; 0x538 <readCompass+0xa>
     538:	00 d0       	rcall	.+0      	; 0x53a <readCompass+0xc>
     53a:	cd b7       	in	r28, 0x3d	; 61
     53c:	de b7       	in	r29, 0x3e	; 62
     53e:	9c 83       	std	Y+4, r25	; 0x04
     540:	8b 83       	std	Y+3, r24	; 0x03
	int16_t temp;
	//i2c_start_wait(WRITE_ADDRESS);
	i2c_start(WRITE_ADDRESS);
     542:	8c e3       	ldi	r24, 0x3C	; 60
     544:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <i2c_start>
	i2c_write(0x03);
     548:	83 e0       	ldi	r24, 0x03	; 3
     54a:	0e 94 ab 01 	call	0x356	; 0x356 <i2c_write>
	i2c_start_wait(READ_ADDRESS);
     54e:	8d e3       	ldi	r24, 0x3D	; 61
     550:	0e 94 40 01 	call	0x280	; 0x280 <i2c_start_wait>
	// Read x axis
	temp = i2c_readAck();
     554:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <i2c_readAck>
     558:	88 2f       	mov	r24, r24
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	9a 83       	std	Y+2, r25	; 0x02
     55e:	89 83       	std	Y+1, r24	; 0x01
	temp = (temp << 8) | i2c_readAck();
     560:	89 81       	ldd	r24, Y+1	; 0x01
     562:	9a 81       	ldd	r25, Y+2	; 0x02
     564:	18 2f       	mov	r17, r24
     566:	00 27       	eor	r16, r16
     568:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <i2c_readAck>
     56c:	88 2f       	mov	r24, r24
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	80 2b       	or	r24, r16
     572:	91 2b       	or	r25, r17
     574:	9a 83       	std	Y+2, r25	; 0x02
     576:	89 83       	std	Y+1, r24	; 0x01
	value[0] = temp;
     578:	8b 81       	ldd	r24, Y+3	; 0x03
     57a:	9c 81       	ldd	r25, Y+4	; 0x04
     57c:	29 81       	ldd	r18, Y+1	; 0x01
     57e:	3a 81       	ldd	r19, Y+2	; 0x02
     580:	fc 01       	movw	r30, r24
     582:	31 83       	std	Z+1, r19	; 0x01
     584:	20 83       	st	Z, r18
	
	// Read z
	temp = i2c_readAck();
     586:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <i2c_readAck>
     58a:	88 2f       	mov	r24, r24
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	9a 83       	std	Y+2, r25	; 0x02
     590:	89 83       	std	Y+1, r24	; 0x01
	temp = (temp << 8) | i2c_readAck();
     592:	89 81       	ldd	r24, Y+1	; 0x01
     594:	9a 81       	ldd	r25, Y+2	; 0x02
     596:	18 2f       	mov	r17, r24
     598:	00 27       	eor	r16, r16
     59a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <i2c_readAck>
     59e:	88 2f       	mov	r24, r24
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	80 2b       	or	r24, r16
     5a4:	91 2b       	or	r25, r17
     5a6:	9a 83       	std	Y+2, r25	; 0x02
     5a8:	89 83       	std	Y+1, r24	; 0x01
	value[2] = temp;
     5aa:	8b 81       	ldd	r24, Y+3	; 0x03
     5ac:	9c 81       	ldd	r25, Y+4	; 0x04
     5ae:	04 96       	adiw	r24, 0x04	; 4
     5b0:	29 81       	ldd	r18, Y+1	; 0x01
     5b2:	3a 81       	ldd	r19, Y+2	; 0x02
     5b4:	fc 01       	movw	r30, r24
     5b6:	31 83       	std	Z+1, r19	; 0x01
     5b8:	20 83       	st	Z, r18
	
	// Read y axis
	temp = i2c_readAck();
     5ba:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <i2c_readAck>
     5be:	88 2f       	mov	r24, r24
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	9a 83       	std	Y+2, r25	; 0x02
     5c4:	89 83       	std	Y+1, r24	; 0x01
	temp = (temp << 8) | i2c_readNak();
     5c6:	89 81       	ldd	r24, Y+1	; 0x01
     5c8:	9a 81       	ldd	r25, Y+2	; 0x02
     5ca:	18 2f       	mov	r17, r24
     5cc:	00 27       	eor	r16, r16
     5ce:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <i2c_readNak>
     5d2:	88 2f       	mov	r24, r24
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	80 2b       	or	r24, r16
     5d8:	91 2b       	or	r25, r17
     5da:	9a 83       	std	Y+2, r25	; 0x02
     5dc:	89 83       	std	Y+1, r24	; 0x01
	value[1] = temp;
     5de:	8b 81       	ldd	r24, Y+3	; 0x03
     5e0:	9c 81       	ldd	r25, Y+4	; 0x04
     5e2:	02 96       	adiw	r24, 0x02	; 2
     5e4:	29 81       	ldd	r18, Y+1	; 0x01
     5e6:	3a 81       	ldd	r19, Y+2	; 0x02
     5e8:	fc 01       	movw	r30, r24
     5ea:	31 83       	std	Z+1, r19	; 0x01
     5ec:	20 83       	st	Z, r18

	i2c_stop();
     5ee:	0e 94 94 01 	call	0x328	; 0x328 <i2c_stop>
     5f2:	0f 90       	pop	r0
     5f4:	0f 90       	pop	r0
     5f6:	0f 90       	pop	r0
     5f8:	0f 90       	pop	r0
     5fa:	df 91       	pop	r29
     5fc:	cf 91       	pop	r28
     5fe:	1f 91       	pop	r17
     600:	0f 91       	pop	r16
     602:	08 95       	ret

00000604 <USART0_sendChar>:
/*
 * Procedure to send a single character over USART0. If character is linefeed, reset 
 * line. 
 * Assumes ASCII code. 
 */ 
{
     604:	cf 93       	push	r28
     606:	df 93       	push	r29
     608:	00 d0       	rcall	.+0      	; 0x60a <USART0_sendChar+0x6>
     60a:	1f 92       	push	r1
     60c:	cd b7       	in	r28, 0x3d	; 61
     60e:	de b7       	in	r29, 0x3e	; 62
     610:	89 83       	std	Y+1, r24	; 0x01
     612:	7b 83       	std	Y+3, r23	; 0x03
     614:	6a 83       	std	Y+2, r22	; 0x02
	if(data == '\n')
     616:	89 81       	ldd	r24, Y+1	; 0x01
     618:	8a 30       	cpi	r24, 0x0A	; 10
     61a:	81 f4       	brne	.+32     	; 0x63c <USART0_sendChar+0x38>
	{
		while(! (UCSR0A & (1<<UDRE0)) );
     61c:	00 00       	nop
     61e:	80 ec       	ldi	r24, 0xC0	; 192
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	fc 01       	movw	r30, r24
     624:	80 81       	ld	r24, Z
     626:	88 2f       	mov	r24, r24
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	80 72       	andi	r24, 0x20	; 32
     62c:	99 27       	eor	r25, r25
     62e:	89 2b       	or	r24, r25
     630:	b1 f3       	breq	.-20     	; 0x61e <USART0_sendChar+0x1a>
		UDR0 = '\r';
     632:	86 ec       	ldi	r24, 0xC6	; 198
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	2d e0       	ldi	r18, 0x0D	; 13
     638:	fc 01       	movw	r30, r24
     63a:	20 83       	st	Z, r18
	}
	while(! (UCSR0A & (1<<UDRE0)) );
     63c:	00 00       	nop
     63e:	80 ec       	ldi	r24, 0xC0	; 192
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	fc 01       	movw	r30, r24
     644:	80 81       	ld	r24, Z
     646:	88 2f       	mov	r24, r24
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	80 72       	andi	r24, 0x20	; 32
     64c:	99 27       	eor	r25, r25
     64e:	89 2b       	or	r24, r25
     650:	b1 f3       	breq	.-20     	; 0x63e <USART0_sendChar+0x3a>
	UDR0 = data;
     652:	86 ec       	ldi	r24, 0xC6	; 198
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	29 81       	ldd	r18, Y+1	; 0x01
     658:	fc 01       	movw	r30, r24
     65a:	20 83       	st	Z, r18
	return 0;
     65c:	80 e0       	ldi	r24, 0x00	; 0
     65e:	90 e0       	ldi	r25, 0x00	; 0
}
     660:	0f 90       	pop	r0
     662:	0f 90       	pop	r0
     664:	0f 90       	pop	r0
     666:	df 91       	pop	r29
     668:	cf 91       	pop	r28
     66a:	08 95       	ret

0000066c <USART0_init>:
void USART0_init (void)
/*
 * Procedure to initialize USART0 asynchronous with enabled RX/TX, 8 bit data,
 * no parity, and 1 stop bit. 
*/
{
     66c:	cf 93       	push	r28
     66e:	df 93       	push	r29
     670:	cd b7       	in	r28, 0x3d	; 61
     672:	de b7       	in	r29, 0x3e	; 62
	UCSR0B = (1<<TXEN0)  | (1<<RXEN0);	// enable transmit/receive
     674:	81 ec       	ldi	r24, 0xC1	; 193
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	28 e1       	ldi	r18, 0x18	; 24
     67a:	fc 01       	movw	r30, r24
     67c:	20 83       	st	Z, r18
	UCSR0C = (1<<UCSZ01) | (1<<UCSZ00);	// asynchronous, 8N1
     67e:	82 ec       	ldi	r24, 0xC2	; 194
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	26 e0       	ldi	r18, 0x06	; 6
     684:	fc 01       	movw	r30, r24
     686:	20 83       	st	Z, r18
	UBRR0 = ASYNCH_NORM_PRESCALER;		// To set 9600 baud rate with 8MHz clock
     688:	84 ec       	ldi	r24, 0xC4	; 196
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	23 e3       	ldi	r18, 0x33	; 51
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	fc 01       	movw	r30, r24
     692:	31 83       	std	Z+1, r19	; 0x01
     694:	20 83       	st	Z, r18
}
     696:	df 91       	pop	r29
     698:	cf 91       	pop	r28
     69a:	08 95       	ret

0000069c <USART0_ReceiveChar>:

int USART0_ReceiveChar(FILE *stream)
{
     69c:	cf 93       	push	r28
     69e:	df 93       	push	r29
     6a0:	00 d0       	rcall	.+0      	; 0x6a2 <USART0_ReceiveChar+0x6>
     6a2:	1f 92       	push	r1
     6a4:	cd b7       	in	r28, 0x3d	; 61
     6a6:	de b7       	in	r29, 0x3e	; 62
     6a8:	9b 83       	std	Y+3, r25	; 0x03
     6aa:	8a 83       	std	Y+2, r24	; 0x02
	uint8_t u8Data;
	// Wait for byte to be received
	while(!(UCSR0A&(1<<RXC0))){};
     6ac:	00 00       	nop
     6ae:	80 ec       	ldi	r24, 0xC0	; 192
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	fc 01       	movw	r30, r24
     6b4:	80 81       	ld	r24, Z
     6b6:	88 23       	and	r24, r24
     6b8:	d4 f7       	brge	.-12     	; 0x6ae <USART0_ReceiveChar+0x12>
	u8Data=UDR0;
     6ba:	86 ec       	ldi	r24, 0xC6	; 198
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	fc 01       	movw	r30, r24
     6c0:	80 81       	ld	r24, Z
     6c2:	89 83       	std	Y+1, r24	; 0x01
	//echo input data
	//USART0SendByte(u8Data,stream);
	// Return received data
	return u8Data;
     6c4:	89 81       	ldd	r24, Y+1	; 0x01
     6c6:	88 2f       	mov	r24, r24
     6c8:	90 e0       	ldi	r25, 0x00	; 0
}
     6ca:	0f 90       	pop	r0
     6cc:	0f 90       	pop	r0
     6ce:	0f 90       	pop	r0
     6d0:	df 91       	pop	r29
     6d2:	cf 91       	pop	r28
     6d4:	08 95       	ret

000006d6 <main>:

//set stream pointer
FILE usart0_str = FDEV_SETUP_STREAM(USART0_sendChar, USART0_ReceiveChar, _FDEV_SETUP_RW);

int main(void)
{
     6d6:	cf 92       	push	r12
     6d8:	df 92       	push	r13
     6da:	ef 92       	push	r14
     6dc:	ff 92       	push	r15
     6de:	cf 93       	push	r28
     6e0:	df 93       	push	r29
     6e2:	cd b7       	in	r28, 0x3d	; 61
     6e4:	de b7       	in	r29, 0x3e	; 62
     6e6:	a6 97       	sbiw	r28, 0x26	; 38
     6e8:	0f b6       	in	r0, 0x3f	; 63
     6ea:	f8 94       	cli
     6ec:	de bf       	out	0x3e, r29	; 62
     6ee:	0f be       	out	0x3f, r0	; 63
     6f0:	cd bf       	out	0x3d, r28	; 61
	int16_t values[3];
	double  direction;
// 	char buffer[100];
// 	uint32_t magnitude;
	
	stdin = stdout = &usart0_str;
     6f2:	80 e0       	ldi	r24, 0x00	; 0
     6f4:	91 e0       	ldi	r25, 0x01	; 1
     6f6:	90 93 2b 01 	sts	0x012B, r25
     6fa:	80 93 2a 01 	sts	0x012A, r24
     6fe:	80 91 2a 01 	lds	r24, 0x012A
     702:	90 91 2b 01 	lds	r25, 0x012B
     706:	90 93 29 01 	sts	0x0129, r25
     70a:	80 93 28 01 	sts	0x0128, r24
	
	USART0_init();
     70e:	0e 94 36 03 	call	0x66c	; 0x66c <USART0_init>
	i2c_init();
     712:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <i2c_init>
	HMC5883L_init();
     716:	0e 94 01 02 	call	0x402	; 0x402 <HMC5883L_init>

	printf("Hello world!\n");
     71a:	8e e0       	ldi	r24, 0x0E	; 14
     71c:	91 e0       	ldi	r25, 0x01	; 1
     71e:	0e 94 b0 0c 	call	0x1960	; 0x1960 <puts>
     722:	80 e0       	ldi	r24, 0x00	; 0
     724:	90 e8       	ldi	r25, 0x80	; 128
     726:	ab e3       	ldi	r26, 0x3B	; 59
     728:	b5 e4       	ldi	r27, 0x45	; 69
     72a:	8d 83       	std	Y+5, r24	; 0x05
     72c:	9e 83       	std	Y+6, r25	; 0x06
     72e:	af 83       	std	Y+7, r26	; 0x07
     730:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     732:	20 e0       	ldi	r18, 0x00	; 0
     734:	30 e0       	ldi	r19, 0x00	; 0
     736:	4a ef       	ldi	r20, 0xFA	; 250
     738:	54 e4       	ldi	r21, 0x44	; 68
     73a:	6d 81       	ldd	r22, Y+5	; 0x05
     73c:	7e 81       	ldd	r23, Y+6	; 0x06
     73e:	8f 81       	ldd	r24, Y+7	; 0x07
     740:	98 85       	ldd	r25, Y+8	; 0x08
     742:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <__mulsf3>
     746:	dc 01       	movw	r26, r24
     748:	cb 01       	movw	r24, r22
     74a:	89 87       	std	Y+9, r24	; 0x09
     74c:	9a 87       	std	Y+10, r25	; 0x0a
     74e:	ab 87       	std	Y+11, r26	; 0x0b
     750:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     752:	20 e0       	ldi	r18, 0x00	; 0
     754:	30 e0       	ldi	r19, 0x00	; 0
     756:	40 e8       	ldi	r20, 0x80	; 128
     758:	5f e3       	ldi	r21, 0x3F	; 63
     75a:	69 85       	ldd	r22, Y+9	; 0x09
     75c:	7a 85       	ldd	r23, Y+10	; 0x0a
     75e:	8b 85       	ldd	r24, Y+11	; 0x0b
     760:	9c 85       	ldd	r25, Y+12	; 0x0c
     762:	0e 94 50 05 	call	0xaa0	; 0xaa0 <__cmpsf2>
     766:	88 23       	and	r24, r24
     768:	2c f4       	brge	.+10     	; 0x774 <main+0x9e>
		__ticks = 1;
     76a:	81 e0       	ldi	r24, 0x01	; 1
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	9e 87       	std	Y+14, r25	; 0x0e
     770:	8d 87       	std	Y+13, r24	; 0x0d
     772:	3f c0       	rjmp	.+126    	; 0x7f2 <main+0x11c>
	else if (__tmp > 65535)
     774:	20 e0       	ldi	r18, 0x00	; 0
     776:	3f ef       	ldi	r19, 0xFF	; 255
     778:	4f e7       	ldi	r20, 0x7F	; 127
     77a:	57 e4       	ldi	r21, 0x47	; 71
     77c:	69 85       	ldd	r22, Y+9	; 0x09
     77e:	7a 85       	ldd	r23, Y+10	; 0x0a
     780:	8b 85       	ldd	r24, Y+11	; 0x0b
     782:	9c 85       	ldd	r25, Y+12	; 0x0c
     784:	0e 94 d6 06 	call	0xdac	; 0xdac <__gesf2>
     788:	18 16       	cp	r1, r24
     78a:	4c f5       	brge	.+82     	; 0x7de <main+0x108>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	40 e2       	ldi	r20, 0x20	; 32
     792:	51 e4       	ldi	r21, 0x41	; 65
     794:	6d 81       	ldd	r22, Y+5	; 0x05
     796:	7e 81       	ldd	r23, Y+6	; 0x06
     798:	8f 81       	ldd	r24, Y+7	; 0x07
     79a:	98 85       	ldd	r25, Y+8	; 0x08
     79c:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <__mulsf3>
     7a0:	dc 01       	movw	r26, r24
     7a2:	cb 01       	movw	r24, r22
     7a4:	bc 01       	movw	r22, r24
     7a6:	cd 01       	movw	r24, r26
     7a8:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__fixunssfsi>
     7ac:	dc 01       	movw	r26, r24
     7ae:	cb 01       	movw	r24, r22
     7b0:	9e 87       	std	Y+14, r25	; 0x0e
     7b2:	8d 87       	std	Y+13, r24	; 0x0d
     7b4:	0f c0       	rjmp	.+30     	; 0x7d4 <main+0xfe>
     7b6:	88 ec       	ldi	r24, 0xC8	; 200
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	98 8b       	std	Y+16, r25	; 0x10
     7bc:	8f 87       	std	Y+15, r24	; 0x0f
     7be:	8f 85       	ldd	r24, Y+15	; 0x0f
     7c0:	98 89       	ldd	r25, Y+16	; 0x10
     7c2:	01 97       	sbiw	r24, 0x01	; 1
     7c4:	f1 f7       	brne	.-4      	; 0x7c2 <main+0xec>
     7c6:	98 8b       	std	Y+16, r25	; 0x10
     7c8:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7ca:	8d 85       	ldd	r24, Y+13	; 0x0d
     7cc:	9e 85       	ldd	r25, Y+14	; 0x0e
     7ce:	01 97       	sbiw	r24, 0x01	; 1
     7d0:	9e 87       	std	Y+14, r25	; 0x0e
     7d2:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7d4:	8d 85       	ldd	r24, Y+13	; 0x0d
     7d6:	9e 85       	ldd	r25, Y+14	; 0x0e
     7d8:	89 2b       	or	r24, r25
     7da:	69 f7       	brne	.-38     	; 0x7b6 <main+0xe0>
     7dc:	14 c0       	rjmp	.+40     	; 0x806 <main+0x130>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7de:	69 85       	ldd	r22, Y+9	; 0x09
     7e0:	7a 85       	ldd	r23, Y+10	; 0x0a
     7e2:	8b 85       	ldd	r24, Y+11	; 0x0b
     7e4:	9c 85       	ldd	r25, Y+12	; 0x0c
     7e6:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__fixunssfsi>
     7ea:	dc 01       	movw	r26, r24
     7ec:	cb 01       	movw	r24, r22
     7ee:	9e 87       	std	Y+14, r25	; 0x0e
     7f0:	8d 87       	std	Y+13, r24	; 0x0d
     7f2:	8d 85       	ldd	r24, Y+13	; 0x0d
     7f4:	9e 85       	ldd	r25, Y+14	; 0x0e
     7f6:	9a 8b       	std	Y+18, r25	; 0x12
     7f8:	89 8b       	std	Y+17, r24	; 0x11
     7fa:	89 89       	ldd	r24, Y+17	; 0x11
     7fc:	9a 89       	ldd	r25, Y+18	; 0x12
     7fe:	01 97       	sbiw	r24, 0x01	; 1
     800:	f1 f7       	brne	.-4      	; 0x7fe <main+0x128>
     802:	9a 8b       	std	Y+18, r25	; 0x12
     804:	89 8b       	std	Y+17, r24	; 0x11
// 		printf("%s\r\n", buffer);
// 	}
	_delay_ms(3000);
    while (1)
    {
		readCompass(values);
     806:	ce 01       	movw	r24, r28
     808:	81 96       	adiw	r24, 0x21	; 33
     80a:	0e 94 97 02 	call	0x52e	; 0x52e <readCompass>
		//magnitude = (uint32_t)sqrt(values[0]*values[0] + values[1]*values[1] + values[2]*values[2]);
		// Get direction on the xz-plane
		direction = atan2(values[2], values[0]) * 180 / M_PI;
     80e:	89 a1       	ldd	r24, Y+33	; 0x21
     810:	9a a1       	ldd	r25, Y+34	; 0x22
     812:	09 2e       	mov	r0, r25
     814:	00 0c       	add	r0, r0
     816:	aa 0b       	sbc	r26, r26
     818:	bb 0b       	sbc	r27, r27
     81a:	bc 01       	movw	r22, r24
     81c:	cd 01       	movw	r24, r26
     81e:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__floatsisf>
     822:	6b 01       	movw	r12, r22
     824:	7c 01       	movw	r14, r24
     826:	8d a1       	ldd	r24, Y+37	; 0x25
     828:	9e a1       	ldd	r25, Y+38	; 0x26
     82a:	09 2e       	mov	r0, r25
     82c:	00 0c       	add	r0, r0
     82e:	aa 0b       	sbc	r26, r26
     830:	bb 0b       	sbc	r27, r27
     832:	bc 01       	movw	r22, r24
     834:	cd 01       	movw	r24, r26
     836:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__floatsisf>
     83a:	dc 01       	movw	r26, r24
     83c:	cb 01       	movw	r24, r22
     83e:	a7 01       	movw	r20, r14
     840:	96 01       	movw	r18, r12
     842:	bc 01       	movw	r22, r24
     844:	cd 01       	movw	r24, r26
     846:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <atan2>
     84a:	dc 01       	movw	r26, r24
     84c:	cb 01       	movw	r24, r22
     84e:	20 e0       	ldi	r18, 0x00	; 0
     850:	30 e0       	ldi	r19, 0x00	; 0
     852:	44 e3       	ldi	r20, 0x34	; 52
     854:	53 e4       	ldi	r21, 0x43	; 67
     856:	bc 01       	movw	r22, r24
     858:	cd 01       	movw	r24, r26
     85a:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <__mulsf3>
     85e:	dc 01       	movw	r26, r24
     860:	cb 01       	movw	r24, r22
     862:	2b ed       	ldi	r18, 0xDB	; 219
     864:	3f e0       	ldi	r19, 0x0F	; 15
     866:	49 e4       	ldi	r20, 0x49	; 73
     868:	50 e4       	ldi	r21, 0x40	; 64
     86a:	bc 01       	movw	r22, r24
     86c:	cd 01       	movw	r24, r26
     86e:	0e 94 55 05 	call	0xaaa	; 0xaaa <__divsf3>
     872:	dc 01       	movw	r26, r24
     874:	cb 01       	movw	r24, r22
     876:	89 83       	std	Y+1, r24	; 0x01
     878:	9a 83       	std	Y+2, r25	; 0x02
     87a:	ab 83       	std	Y+3, r26	; 0x03
     87c:	bc 83       	std	Y+4, r27	; 0x04
		printf("%d\t%d\t%d\t%d\n", values[0], values[1], values[2], (int)direction);
     87e:	69 81       	ldd	r22, Y+1	; 0x01
     880:	7a 81       	ldd	r23, Y+2	; 0x02
     882:	8b 81       	ldd	r24, Y+3	; 0x03
     884:	9c 81       	ldd	r25, Y+4	; 0x04
     886:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__fixsfsi>
     88a:	dc 01       	movw	r26, r24
     88c:	cb 01       	movw	r24, r22
     88e:	bc 01       	movw	r22, r24
     890:	4d a1       	ldd	r20, Y+37	; 0x25
     892:	5e a1       	ldd	r21, Y+38	; 0x26
     894:	2b a1       	ldd	r18, Y+35	; 0x23
     896:	3c a1       	ldd	r19, Y+36	; 0x24
     898:	89 a1       	ldd	r24, Y+33	; 0x21
     89a:	9a a1       	ldd	r25, Y+34	; 0x22
     89c:	e7 2f       	mov	r30, r23
     89e:	ef 93       	push	r30
     8a0:	6f 93       	push	r22
     8a2:	65 2f       	mov	r22, r21
     8a4:	6f 93       	push	r22
     8a6:	4f 93       	push	r20
     8a8:	43 2f       	mov	r20, r19
     8aa:	4f 93       	push	r20
     8ac:	2f 93       	push	r18
     8ae:	29 2f       	mov	r18, r25
     8b0:	2f 93       	push	r18
     8b2:	8f 93       	push	r24
     8b4:	8b e1       	ldi	r24, 0x1B	; 27
     8b6:	91 e0       	ldi	r25, 0x01	; 1
     8b8:	89 2f       	mov	r24, r25
     8ba:	8f 93       	push	r24
     8bc:	8b e1       	ldi	r24, 0x1B	; 27
     8be:	91 e0       	ldi	r25, 0x01	; 1
     8c0:	8f 93       	push	r24
     8c2:	0e 94 9a 0c 	call	0x1934	; 0x1934 <printf>
     8c6:	8d b7       	in	r24, 0x3d	; 61
     8c8:	9e b7       	in	r25, 0x3e	; 62
     8ca:	0a 96       	adiw	r24, 0x0a	; 10
     8cc:	0f b6       	in	r0, 0x3f	; 63
     8ce:	f8 94       	cli
     8d0:	de bf       	out	0x3e, r29	; 62
     8d2:	0f be       	out	0x3f, r0	; 63
     8d4:	cd bf       	out	0x3d, r28	; 61
     8d6:	80 e0       	ldi	r24, 0x00	; 0
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	a1 e6       	ldi	r26, 0x61	; 97
     8dc:	b4 e4       	ldi	r27, 0x44	; 68
     8de:	8b 8b       	std	Y+19, r24	; 0x13
     8e0:	9c 8b       	std	Y+20, r25	; 0x14
     8e2:	ad 8b       	std	Y+21, r26	; 0x15
     8e4:	be 8b       	std	Y+22, r27	; 0x16

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     8e6:	20 e0       	ldi	r18, 0x00	; 0
     8e8:	30 e0       	ldi	r19, 0x00	; 0
     8ea:	4a ef       	ldi	r20, 0xFA	; 250
     8ec:	54 e4       	ldi	r21, 0x44	; 68
     8ee:	6b 89       	ldd	r22, Y+19	; 0x13
     8f0:	7c 89       	ldd	r23, Y+20	; 0x14
     8f2:	8d 89       	ldd	r24, Y+21	; 0x15
     8f4:	9e 89       	ldd	r25, Y+22	; 0x16
     8f6:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <__mulsf3>
     8fa:	dc 01       	movw	r26, r24
     8fc:	cb 01       	movw	r24, r22
     8fe:	8f 8b       	std	Y+23, r24	; 0x17
     900:	98 8f       	std	Y+24, r25	; 0x18
     902:	a9 8f       	std	Y+25, r26	; 0x19
     904:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     906:	20 e0       	ldi	r18, 0x00	; 0
     908:	30 e0       	ldi	r19, 0x00	; 0
     90a:	40 e8       	ldi	r20, 0x80	; 128
     90c:	5f e3       	ldi	r21, 0x3F	; 63
     90e:	6f 89       	ldd	r22, Y+23	; 0x17
     910:	78 8d       	ldd	r23, Y+24	; 0x18
     912:	89 8d       	ldd	r24, Y+25	; 0x19
     914:	9a 8d       	ldd	r25, Y+26	; 0x1a
     916:	0e 94 50 05 	call	0xaa0	; 0xaa0 <__cmpsf2>
     91a:	88 23       	and	r24, r24
     91c:	2c f4       	brge	.+10     	; 0x928 <__stack+0x29>
		__ticks = 1;
     91e:	81 e0       	ldi	r24, 0x01	; 1
     920:	90 e0       	ldi	r25, 0x00	; 0
     922:	9c 8f       	std	Y+28, r25	; 0x1c
     924:	8b 8f       	std	Y+27, r24	; 0x1b
     926:	3f c0       	rjmp	.+126    	; 0x9a6 <__stack+0xa7>
	else if (__tmp > 65535)
     928:	20 e0       	ldi	r18, 0x00	; 0
     92a:	3f ef       	ldi	r19, 0xFF	; 255
     92c:	4f e7       	ldi	r20, 0x7F	; 127
     92e:	57 e4       	ldi	r21, 0x47	; 71
     930:	6f 89       	ldd	r22, Y+23	; 0x17
     932:	78 8d       	ldd	r23, Y+24	; 0x18
     934:	89 8d       	ldd	r24, Y+25	; 0x19
     936:	9a 8d       	ldd	r25, Y+26	; 0x1a
     938:	0e 94 d6 06 	call	0xdac	; 0xdac <__gesf2>
     93c:	18 16       	cp	r1, r24
     93e:	4c f5       	brge	.+82     	; 0x992 <__stack+0x93>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     940:	20 e0       	ldi	r18, 0x00	; 0
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e2       	ldi	r20, 0x20	; 32
     946:	51 e4       	ldi	r21, 0x41	; 65
     948:	6b 89       	ldd	r22, Y+19	; 0x13
     94a:	7c 89       	ldd	r23, Y+20	; 0x14
     94c:	8d 89       	ldd	r24, Y+21	; 0x15
     94e:	9e 89       	ldd	r25, Y+22	; 0x16
     950:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <__mulsf3>
     954:	dc 01       	movw	r26, r24
     956:	cb 01       	movw	r24, r22
     958:	bc 01       	movw	r22, r24
     95a:	cd 01       	movw	r24, r26
     95c:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__fixunssfsi>
     960:	dc 01       	movw	r26, r24
     962:	cb 01       	movw	r24, r22
     964:	9c 8f       	std	Y+28, r25	; 0x1c
     966:	8b 8f       	std	Y+27, r24	; 0x1b
     968:	0f c0       	rjmp	.+30     	; 0x988 <__stack+0x89>
     96a:	88 ec       	ldi	r24, 0xC8	; 200
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	9e 8f       	std	Y+30, r25	; 0x1e
     970:	8d 8f       	std	Y+29, r24	; 0x1d
     972:	8d 8d       	ldd	r24, Y+29	; 0x1d
     974:	9e 8d       	ldd	r25, Y+30	; 0x1e
     976:	01 97       	sbiw	r24, 0x01	; 1
     978:	f1 f7       	brne	.-4      	; 0x976 <__stack+0x77>
     97a:	9e 8f       	std	Y+30, r25	; 0x1e
     97c:	8d 8f       	std	Y+29, r24	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     97e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     980:	9c 8d       	ldd	r25, Y+28	; 0x1c
     982:	01 97       	sbiw	r24, 0x01	; 1
     984:	9c 8f       	std	Y+28, r25	; 0x1c
     986:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     988:	8b 8d       	ldd	r24, Y+27	; 0x1b
     98a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     98c:	89 2b       	or	r24, r25
     98e:	69 f7       	brne	.-38     	; 0x96a <__stack+0x6b>
     990:	14 c0       	rjmp	.+40     	; 0x9ba <__stack+0xbb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     992:	6f 89       	ldd	r22, Y+23	; 0x17
     994:	78 8d       	ldd	r23, Y+24	; 0x18
     996:	89 8d       	ldd	r24, Y+25	; 0x19
     998:	9a 8d       	ldd	r25, Y+26	; 0x1a
     99a:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__fixunssfsi>
     99e:	dc 01       	movw	r26, r24
     9a0:	cb 01       	movw	r24, r22
     9a2:	9c 8f       	std	Y+28, r25	; 0x1c
     9a4:	8b 8f       	std	Y+27, r24	; 0x1b
     9a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     9a8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     9aa:	98 a3       	std	Y+32, r25	; 0x20
     9ac:	8f 8f       	std	Y+31, r24	; 0x1f
     9ae:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9b0:	98 a1       	ldd	r25, Y+32	; 0x20
     9b2:	01 97       	sbiw	r24, 0x01	; 1
     9b4:	f1 f7       	brne	.-4      	; 0x9b2 <__stack+0xb3>
     9b6:	98 a3       	std	Y+32, r25	; 0x20
     9b8:	8f 8f       	std	Y+31, r24	; 0x1f
		_delay_ms(900);
    }
     9ba:	25 cf       	rjmp	.-438    	; 0x806 <main+0x130>
     9bc:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__fp_pscA>
     9c0:	60 f0       	brcs	.+24     	; 0x9da <__stack+0xdb>
     9c2:	80 e8       	ldi	r24, 0x80	; 128
     9c4:	91 e0       	ldi	r25, 0x01	; 1
     9c6:	09 f4       	brne	.+2      	; 0x9ca <__stack+0xcb>
     9c8:	9e ef       	ldi	r25, 0xFE	; 254
     9ca:	0e 94 95 06 	call	0xd2a	; 0xd2a <__fp_pscB>
     9ce:	28 f0       	brcs	.+10     	; 0x9da <__stack+0xdb>
     9d0:	40 e8       	ldi	r20, 0x80	; 128
     9d2:	51 e0       	ldi	r21, 0x01	; 1
     9d4:	71 f4       	brne	.+28     	; 0x9f2 <atan2+0x10>
     9d6:	5e ef       	ldi	r21, 0xFE	; 254
     9d8:	0c c0       	rjmp	.+24     	; 0x9f2 <atan2+0x10>
     9da:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_nan>
     9de:	0c 94 cf 06 	jmp	0xd9e	; 0xd9e <__fp_zero>

000009e2 <atan2>:
     9e2:	e9 2f       	mov	r30, r25
     9e4:	e0 78       	andi	r30, 0x80	; 128
     9e6:	0e 94 ad 06 	call	0xd5a	; 0xd5a <__fp_split3>
     9ea:	40 f3       	brcs	.-48     	; 0x9bc <__stack+0xbd>
     9ec:	09 2e       	mov	r0, r25
     9ee:	05 2a       	or	r0, r21
     9f0:	b1 f3       	breq	.-20     	; 0x9de <__stack+0xdf>
     9f2:	26 17       	cp	r18, r22
     9f4:	37 07       	cpc	r19, r23
     9f6:	48 07       	cpc	r20, r24
     9f8:	59 07       	cpc	r21, r25
     9fa:	38 f0       	brcs	.+14     	; 0xa0a <atan2+0x28>
     9fc:	0e 2e       	mov	r0, r30
     9fe:	07 f8       	bld	r0, 7
     a00:	e0 25       	eor	r30, r0
     a02:	69 f0       	breq	.+26     	; 0xa1e <atan2+0x3c>
     a04:	e0 25       	eor	r30, r0
     a06:	e0 64       	ori	r30, 0x40	; 64
     a08:	0a c0       	rjmp	.+20     	; 0xa1e <atan2+0x3c>
     a0a:	ef 63       	ori	r30, 0x3F	; 63
     a0c:	07 f8       	bld	r0, 7
     a0e:	00 94       	com	r0
     a10:	07 fa       	bst	r0, 7
     a12:	db 01       	movw	r26, r22
     a14:	b9 01       	movw	r22, r18
     a16:	9d 01       	movw	r18, r26
     a18:	dc 01       	movw	r26, r24
     a1a:	ca 01       	movw	r24, r20
     a1c:	ad 01       	movw	r20, r26
     a1e:	ef 93       	push	r30
     a20:	0e 94 6c 05 	call	0xad8	; 0xad8 <__divsf3_pse>
     a24:	0e 94 9c 06 	call	0xd38	; 0xd38 <__fp_round>
     a28:	0e 94 21 05 	call	0xa42	; 0xa42 <atan>
     a2c:	5f 91       	pop	r21
     a2e:	55 23       	and	r21, r21
     a30:	39 f0       	breq	.+14     	; 0xa40 <atan2+0x5e>
     a32:	2b ed       	ldi	r18, 0xDB	; 219
     a34:	3f e0       	ldi	r19, 0x0F	; 15
     a36:	49 e4       	ldi	r20, 0x49	; 73
     a38:	50 fd       	sbrc	r21, 0
     a3a:	49 ec       	ldi	r20, 0xC9	; 201
     a3c:	0c 94 55 07 	jmp	0xeaa	; 0xeaa <__addsf3>
     a40:	08 95       	ret

00000a42 <atan>:
     a42:	df 93       	push	r29
     a44:	dd 27       	eor	r29, r29
     a46:	b9 2f       	mov	r27, r25
     a48:	bf 77       	andi	r27, 0x7F	; 127
     a4a:	40 e8       	ldi	r20, 0x80	; 128
     a4c:	5f e3       	ldi	r21, 0x3F	; 63
     a4e:	16 16       	cp	r1, r22
     a50:	17 06       	cpc	r1, r23
     a52:	48 07       	cpc	r20, r24
     a54:	5b 07       	cpc	r21, r27
     a56:	18 f4       	brcc	.+6      	; 0xa5e <atan+0x1c>
     a58:	d9 2f       	mov	r29, r25
     a5a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <inverse>
     a5e:	9f 93       	push	r25
     a60:	8f 93       	push	r24
     a62:	7f 93       	push	r23
     a64:	6f 93       	push	r22
     a66:	0e 94 50 07 	call	0xea0	; 0xea0 <square>
     a6a:	e8 e6       	ldi	r30, 0x68	; 104
     a6c:	f0 e0       	ldi	r31, 0x00	; 0
     a6e:	0e 94 67 06 	call	0xcce	; 0xcce <__fp_powser>
     a72:	0e 94 9c 06 	call	0xd38	; 0xd38 <__fp_round>
     a76:	2f 91       	pop	r18
     a78:	3f 91       	pop	r19
     a7a:	4f 91       	pop	r20
     a7c:	5f 91       	pop	r21
     a7e:	0e 94 f6 06 	call	0xdec	; 0xdec <__mulsf3x>
     a82:	dd 23       	and	r29, r29
     a84:	51 f0       	breq	.+20     	; 0xa9a <atan+0x58>
     a86:	90 58       	subi	r25, 0x80	; 128
     a88:	a2 ea       	ldi	r26, 0xA2	; 162
     a8a:	2a ed       	ldi	r18, 0xDA	; 218
     a8c:	3f e0       	ldi	r19, 0x0F	; 15
     a8e:	49 ec       	ldi	r20, 0xC9	; 201
     a90:	5f e3       	ldi	r21, 0x3F	; 63
     a92:	d0 78       	andi	r29, 0x80	; 128
     a94:	5d 27       	eor	r21, r29
     a96:	0e 94 6c 07 	call	0xed8	; 0xed8 <__addsf3x>
     a9a:	df 91       	pop	r29
     a9c:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__fp_round>

00000aa0 <__cmpsf2>:
     aa0:	0e 94 3a 06 	call	0xc74	; 0xc74 <__fp_cmp>
     aa4:	08 f4       	brcc	.+2      	; 0xaa8 <__cmpsf2+0x8>
     aa6:	81 e0       	ldi	r24, 0x01	; 1
     aa8:	08 95       	ret

00000aaa <__divsf3>:
     aaa:	0e 94 69 05 	call	0xad2	; 0xad2 <__divsf3x>
     aae:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__fp_round>
     ab2:	0e 94 95 06 	call	0xd2a	; 0xd2a <__fp_pscB>
     ab6:	58 f0       	brcs	.+22     	; 0xace <__divsf3+0x24>
     ab8:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__fp_pscA>
     abc:	40 f0       	brcs	.+16     	; 0xace <__divsf3+0x24>
     abe:	29 f4       	brne	.+10     	; 0xaca <__divsf3+0x20>
     ac0:	5f 3f       	cpi	r21, 0xFF	; 255
     ac2:	29 f0       	breq	.+10     	; 0xace <__divsf3+0x24>
     ac4:	0c 94 5e 06 	jmp	0xcbc	; 0xcbc <__fp_inf>
     ac8:	51 11       	cpse	r21, r1
     aca:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__fp_szero>
     ace:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_nan>

00000ad2 <__divsf3x>:
     ad2:	0e 94 ad 06 	call	0xd5a	; 0xd5a <__fp_split3>
     ad6:	68 f3       	brcs	.-38     	; 0xab2 <__divsf3+0x8>

00000ad8 <__divsf3_pse>:
     ad8:	99 23       	and	r25, r25
     ada:	b1 f3       	breq	.-20     	; 0xac8 <__divsf3+0x1e>
     adc:	55 23       	and	r21, r21
     ade:	91 f3       	breq	.-28     	; 0xac4 <__divsf3+0x1a>
     ae0:	95 1b       	sub	r25, r21
     ae2:	55 0b       	sbc	r21, r21
     ae4:	bb 27       	eor	r27, r27
     ae6:	aa 27       	eor	r26, r26
     ae8:	62 17       	cp	r22, r18
     aea:	73 07       	cpc	r23, r19
     aec:	84 07       	cpc	r24, r20
     aee:	38 f0       	brcs	.+14     	; 0xafe <__divsf3_pse+0x26>
     af0:	9f 5f       	subi	r25, 0xFF	; 255
     af2:	5f 4f       	sbci	r21, 0xFF	; 255
     af4:	22 0f       	add	r18, r18
     af6:	33 1f       	adc	r19, r19
     af8:	44 1f       	adc	r20, r20
     afa:	aa 1f       	adc	r26, r26
     afc:	a9 f3       	breq	.-22     	; 0xae8 <__divsf3_pse+0x10>
     afe:	35 d0       	rcall	.+106    	; 0xb6a <__divsf3_pse+0x92>
     b00:	0e 2e       	mov	r0, r30
     b02:	3a f0       	brmi	.+14     	; 0xb12 <__divsf3_pse+0x3a>
     b04:	e0 e8       	ldi	r30, 0x80	; 128
     b06:	32 d0       	rcall	.+100    	; 0xb6c <__divsf3_pse+0x94>
     b08:	91 50       	subi	r25, 0x01	; 1
     b0a:	50 40       	sbci	r21, 0x00	; 0
     b0c:	e6 95       	lsr	r30
     b0e:	00 1c       	adc	r0, r0
     b10:	ca f7       	brpl	.-14     	; 0xb04 <__divsf3_pse+0x2c>
     b12:	2b d0       	rcall	.+86     	; 0xb6a <__divsf3_pse+0x92>
     b14:	fe 2f       	mov	r31, r30
     b16:	29 d0       	rcall	.+82     	; 0xb6a <__divsf3_pse+0x92>
     b18:	66 0f       	add	r22, r22
     b1a:	77 1f       	adc	r23, r23
     b1c:	88 1f       	adc	r24, r24
     b1e:	bb 1f       	adc	r27, r27
     b20:	26 17       	cp	r18, r22
     b22:	37 07       	cpc	r19, r23
     b24:	48 07       	cpc	r20, r24
     b26:	ab 07       	cpc	r26, r27
     b28:	b0 e8       	ldi	r27, 0x80	; 128
     b2a:	09 f0       	breq	.+2      	; 0xb2e <__divsf3_pse+0x56>
     b2c:	bb 0b       	sbc	r27, r27
     b2e:	80 2d       	mov	r24, r0
     b30:	bf 01       	movw	r22, r30
     b32:	ff 27       	eor	r31, r31
     b34:	93 58       	subi	r25, 0x83	; 131
     b36:	5f 4f       	sbci	r21, 0xFF	; 255
     b38:	3a f0       	brmi	.+14     	; 0xb48 <__divsf3_pse+0x70>
     b3a:	9e 3f       	cpi	r25, 0xFE	; 254
     b3c:	51 05       	cpc	r21, r1
     b3e:	78 f0       	brcs	.+30     	; 0xb5e <__divsf3_pse+0x86>
     b40:	0c 94 5e 06 	jmp	0xcbc	; 0xcbc <__fp_inf>
     b44:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__fp_szero>
     b48:	5f 3f       	cpi	r21, 0xFF	; 255
     b4a:	e4 f3       	brlt	.-8      	; 0xb44 <__divsf3_pse+0x6c>
     b4c:	98 3e       	cpi	r25, 0xE8	; 232
     b4e:	d4 f3       	brlt	.-12     	; 0xb44 <__divsf3_pse+0x6c>
     b50:	86 95       	lsr	r24
     b52:	77 95       	ror	r23
     b54:	67 95       	ror	r22
     b56:	b7 95       	ror	r27
     b58:	f7 95       	ror	r31
     b5a:	9f 5f       	subi	r25, 0xFF	; 255
     b5c:	c9 f7       	brne	.-14     	; 0xb50 <__divsf3_pse+0x78>
     b5e:	88 0f       	add	r24, r24
     b60:	91 1d       	adc	r25, r1
     b62:	96 95       	lsr	r25
     b64:	87 95       	ror	r24
     b66:	97 f9       	bld	r25, 7
     b68:	08 95       	ret
     b6a:	e1 e0       	ldi	r30, 0x01	; 1
     b6c:	66 0f       	add	r22, r22
     b6e:	77 1f       	adc	r23, r23
     b70:	88 1f       	adc	r24, r24
     b72:	bb 1f       	adc	r27, r27
     b74:	62 17       	cp	r22, r18
     b76:	73 07       	cpc	r23, r19
     b78:	84 07       	cpc	r24, r20
     b7a:	ba 07       	cpc	r27, r26
     b7c:	20 f0       	brcs	.+8      	; 0xb86 <__divsf3_pse+0xae>
     b7e:	62 1b       	sub	r22, r18
     b80:	73 0b       	sbc	r23, r19
     b82:	84 0b       	sbc	r24, r20
     b84:	ba 0b       	sbc	r27, r26
     b86:	ee 1f       	adc	r30, r30
     b88:	88 f7       	brcc	.-30     	; 0xb6c <__divsf3_pse+0x94>
     b8a:	e0 95       	com	r30
     b8c:	08 95       	ret

00000b8e <__fixsfsi>:
     b8e:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__fixunssfsi>
     b92:	68 94       	set
     b94:	b1 11       	cpse	r27, r1
     b96:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__fp_szero>
     b9a:	08 95       	ret

00000b9c <__fixunssfsi>:
     b9c:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fp_splitA>
     ba0:	88 f0       	brcs	.+34     	; 0xbc4 <__fixunssfsi+0x28>
     ba2:	9f 57       	subi	r25, 0x7F	; 127
     ba4:	98 f0       	brcs	.+38     	; 0xbcc <__fixunssfsi+0x30>
     ba6:	b9 2f       	mov	r27, r25
     ba8:	99 27       	eor	r25, r25
     baa:	b7 51       	subi	r27, 0x17	; 23
     bac:	b0 f0       	brcs	.+44     	; 0xbda <__fixunssfsi+0x3e>
     bae:	e1 f0       	breq	.+56     	; 0xbe8 <__fixunssfsi+0x4c>
     bb0:	66 0f       	add	r22, r22
     bb2:	77 1f       	adc	r23, r23
     bb4:	88 1f       	adc	r24, r24
     bb6:	99 1f       	adc	r25, r25
     bb8:	1a f0       	brmi	.+6      	; 0xbc0 <__fixunssfsi+0x24>
     bba:	ba 95       	dec	r27
     bbc:	c9 f7       	brne	.-14     	; 0xbb0 <__fixunssfsi+0x14>
     bbe:	14 c0       	rjmp	.+40     	; 0xbe8 <__fixunssfsi+0x4c>
     bc0:	b1 30       	cpi	r27, 0x01	; 1
     bc2:	91 f0       	breq	.+36     	; 0xbe8 <__fixunssfsi+0x4c>
     bc4:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__fp_zero>
     bc8:	b1 e0       	ldi	r27, 0x01	; 1
     bca:	08 95       	ret
     bcc:	0c 94 cf 06 	jmp	0xd9e	; 0xd9e <__fp_zero>
     bd0:	67 2f       	mov	r22, r23
     bd2:	78 2f       	mov	r23, r24
     bd4:	88 27       	eor	r24, r24
     bd6:	b8 5f       	subi	r27, 0xF8	; 248
     bd8:	39 f0       	breq	.+14     	; 0xbe8 <__fixunssfsi+0x4c>
     bda:	b9 3f       	cpi	r27, 0xF9	; 249
     bdc:	cc f3       	brlt	.-14     	; 0xbd0 <__fixunssfsi+0x34>
     bde:	86 95       	lsr	r24
     be0:	77 95       	ror	r23
     be2:	67 95       	ror	r22
     be4:	b3 95       	inc	r27
     be6:	d9 f7       	brne	.-10     	; 0xbde <__fixunssfsi+0x42>
     be8:	3e f4       	brtc	.+14     	; 0xbf8 <__fixunssfsi+0x5c>
     bea:	90 95       	com	r25
     bec:	80 95       	com	r24
     bee:	70 95       	com	r23
     bf0:	61 95       	neg	r22
     bf2:	7f 4f       	sbci	r23, 0xFF	; 255
     bf4:	8f 4f       	sbci	r24, 0xFF	; 255
     bf6:	9f 4f       	sbci	r25, 0xFF	; 255
     bf8:	08 95       	ret

00000bfa <__floatunsisf>:
     bfa:	e8 94       	clt
     bfc:	09 c0       	rjmp	.+18     	; 0xc10 <__floatsisf+0x12>

00000bfe <__floatsisf>:
     bfe:	97 fb       	bst	r25, 7
     c00:	3e f4       	brtc	.+14     	; 0xc10 <__floatsisf+0x12>
     c02:	90 95       	com	r25
     c04:	80 95       	com	r24
     c06:	70 95       	com	r23
     c08:	61 95       	neg	r22
     c0a:	7f 4f       	sbci	r23, 0xFF	; 255
     c0c:	8f 4f       	sbci	r24, 0xFF	; 255
     c0e:	9f 4f       	sbci	r25, 0xFF	; 255
     c10:	99 23       	and	r25, r25
     c12:	a9 f0       	breq	.+42     	; 0xc3e <__floatsisf+0x40>
     c14:	f9 2f       	mov	r31, r25
     c16:	96 e9       	ldi	r25, 0x96	; 150
     c18:	bb 27       	eor	r27, r27
     c1a:	93 95       	inc	r25
     c1c:	f6 95       	lsr	r31
     c1e:	87 95       	ror	r24
     c20:	77 95       	ror	r23
     c22:	67 95       	ror	r22
     c24:	b7 95       	ror	r27
     c26:	f1 11       	cpse	r31, r1
     c28:	f8 cf       	rjmp	.-16     	; 0xc1a <__floatsisf+0x1c>
     c2a:	fa f4       	brpl	.+62     	; 0xc6a <__floatsisf+0x6c>
     c2c:	bb 0f       	add	r27, r27
     c2e:	11 f4       	brne	.+4      	; 0xc34 <__floatsisf+0x36>
     c30:	60 ff       	sbrs	r22, 0
     c32:	1b c0       	rjmp	.+54     	; 0xc6a <__floatsisf+0x6c>
     c34:	6f 5f       	subi	r22, 0xFF	; 255
     c36:	7f 4f       	sbci	r23, 0xFF	; 255
     c38:	8f 4f       	sbci	r24, 0xFF	; 255
     c3a:	9f 4f       	sbci	r25, 0xFF	; 255
     c3c:	16 c0       	rjmp	.+44     	; 0xc6a <__floatsisf+0x6c>
     c3e:	88 23       	and	r24, r24
     c40:	11 f0       	breq	.+4      	; 0xc46 <__floatsisf+0x48>
     c42:	96 e9       	ldi	r25, 0x96	; 150
     c44:	11 c0       	rjmp	.+34     	; 0xc68 <__floatsisf+0x6a>
     c46:	77 23       	and	r23, r23
     c48:	21 f0       	breq	.+8      	; 0xc52 <__floatsisf+0x54>
     c4a:	9e e8       	ldi	r25, 0x8E	; 142
     c4c:	87 2f       	mov	r24, r23
     c4e:	76 2f       	mov	r23, r22
     c50:	05 c0       	rjmp	.+10     	; 0xc5c <__floatsisf+0x5e>
     c52:	66 23       	and	r22, r22
     c54:	71 f0       	breq	.+28     	; 0xc72 <__floatsisf+0x74>
     c56:	96 e8       	ldi	r25, 0x86	; 134
     c58:	86 2f       	mov	r24, r22
     c5a:	70 e0       	ldi	r23, 0x00	; 0
     c5c:	60 e0       	ldi	r22, 0x00	; 0
     c5e:	2a f0       	brmi	.+10     	; 0xc6a <__floatsisf+0x6c>
     c60:	9a 95       	dec	r25
     c62:	66 0f       	add	r22, r22
     c64:	77 1f       	adc	r23, r23
     c66:	88 1f       	adc	r24, r24
     c68:	da f7       	brpl	.-10     	; 0xc60 <__floatsisf+0x62>
     c6a:	88 0f       	add	r24, r24
     c6c:	96 95       	lsr	r25
     c6e:	87 95       	ror	r24
     c70:	97 f9       	bld	r25, 7
     c72:	08 95       	ret

00000c74 <__fp_cmp>:
     c74:	99 0f       	add	r25, r25
     c76:	00 08       	sbc	r0, r0
     c78:	55 0f       	add	r21, r21
     c7a:	aa 0b       	sbc	r26, r26
     c7c:	e0 e8       	ldi	r30, 0x80	; 128
     c7e:	fe ef       	ldi	r31, 0xFE	; 254
     c80:	16 16       	cp	r1, r22
     c82:	17 06       	cpc	r1, r23
     c84:	e8 07       	cpc	r30, r24
     c86:	f9 07       	cpc	r31, r25
     c88:	c0 f0       	brcs	.+48     	; 0xcba <__fp_cmp+0x46>
     c8a:	12 16       	cp	r1, r18
     c8c:	13 06       	cpc	r1, r19
     c8e:	e4 07       	cpc	r30, r20
     c90:	f5 07       	cpc	r31, r21
     c92:	98 f0       	brcs	.+38     	; 0xcba <__fp_cmp+0x46>
     c94:	62 1b       	sub	r22, r18
     c96:	73 0b       	sbc	r23, r19
     c98:	84 0b       	sbc	r24, r20
     c9a:	95 0b       	sbc	r25, r21
     c9c:	39 f4       	brne	.+14     	; 0xcac <__fp_cmp+0x38>
     c9e:	0a 26       	eor	r0, r26
     ca0:	61 f0       	breq	.+24     	; 0xcba <__fp_cmp+0x46>
     ca2:	23 2b       	or	r18, r19
     ca4:	24 2b       	or	r18, r20
     ca6:	25 2b       	or	r18, r21
     ca8:	21 f4       	brne	.+8      	; 0xcb2 <__fp_cmp+0x3e>
     caa:	08 95       	ret
     cac:	0a 26       	eor	r0, r26
     cae:	09 f4       	brne	.+2      	; 0xcb2 <__fp_cmp+0x3e>
     cb0:	a1 40       	sbci	r26, 0x01	; 1
     cb2:	a6 95       	lsr	r26
     cb4:	8f ef       	ldi	r24, 0xFF	; 255
     cb6:	81 1d       	adc	r24, r1
     cb8:	81 1d       	adc	r24, r1
     cba:	08 95       	ret

00000cbc <__fp_inf>:
     cbc:	97 f9       	bld	r25, 7
     cbe:	9f 67       	ori	r25, 0x7F	; 127
     cc0:	80 e8       	ldi	r24, 0x80	; 128
     cc2:	70 e0       	ldi	r23, 0x00	; 0
     cc4:	60 e0       	ldi	r22, 0x00	; 0
     cc6:	08 95       	ret

00000cc8 <__fp_nan>:
     cc8:	9f ef       	ldi	r25, 0xFF	; 255
     cca:	80 ec       	ldi	r24, 0xC0	; 192
     ccc:	08 95       	ret

00000cce <__fp_powser>:
     cce:	df 93       	push	r29
     cd0:	cf 93       	push	r28
     cd2:	1f 93       	push	r17
     cd4:	0f 93       	push	r16
     cd6:	ff 92       	push	r15
     cd8:	ef 92       	push	r14
     cda:	df 92       	push	r13
     cdc:	7b 01       	movw	r14, r22
     cde:	8c 01       	movw	r16, r24
     ce0:	68 94       	set
     ce2:	06 c0       	rjmp	.+12     	; 0xcf0 <__fp_powser+0x22>
     ce4:	da 2e       	mov	r13, r26
     ce6:	ef 01       	movw	r28, r30
     ce8:	0e 94 f6 06 	call	0xdec	; 0xdec <__mulsf3x>
     cec:	fe 01       	movw	r30, r28
     cee:	e8 94       	clt
     cf0:	a5 91       	lpm	r26, Z+
     cf2:	25 91       	lpm	r18, Z+
     cf4:	35 91       	lpm	r19, Z+
     cf6:	45 91       	lpm	r20, Z+
     cf8:	55 91       	lpm	r21, Z+
     cfa:	a6 f3       	brts	.-24     	; 0xce4 <__fp_powser+0x16>
     cfc:	ef 01       	movw	r28, r30
     cfe:	0e 94 6c 07 	call	0xed8	; 0xed8 <__addsf3x>
     d02:	fe 01       	movw	r30, r28
     d04:	97 01       	movw	r18, r14
     d06:	a8 01       	movw	r20, r16
     d08:	da 94       	dec	r13
     d0a:	69 f7       	brne	.-38     	; 0xce6 <__fp_powser+0x18>
     d0c:	df 90       	pop	r13
     d0e:	ef 90       	pop	r14
     d10:	ff 90       	pop	r15
     d12:	0f 91       	pop	r16
     d14:	1f 91       	pop	r17
     d16:	cf 91       	pop	r28
     d18:	df 91       	pop	r29
     d1a:	08 95       	ret

00000d1c <__fp_pscA>:
     d1c:	00 24       	eor	r0, r0
     d1e:	0a 94       	dec	r0
     d20:	16 16       	cp	r1, r22
     d22:	17 06       	cpc	r1, r23
     d24:	18 06       	cpc	r1, r24
     d26:	09 06       	cpc	r0, r25
     d28:	08 95       	ret

00000d2a <__fp_pscB>:
     d2a:	00 24       	eor	r0, r0
     d2c:	0a 94       	dec	r0
     d2e:	12 16       	cp	r1, r18
     d30:	13 06       	cpc	r1, r19
     d32:	14 06       	cpc	r1, r20
     d34:	05 06       	cpc	r0, r21
     d36:	08 95       	ret

00000d38 <__fp_round>:
     d38:	09 2e       	mov	r0, r25
     d3a:	03 94       	inc	r0
     d3c:	00 0c       	add	r0, r0
     d3e:	11 f4       	brne	.+4      	; 0xd44 <__fp_round+0xc>
     d40:	88 23       	and	r24, r24
     d42:	52 f0       	brmi	.+20     	; 0xd58 <__fp_round+0x20>
     d44:	bb 0f       	add	r27, r27
     d46:	40 f4       	brcc	.+16     	; 0xd58 <__fp_round+0x20>
     d48:	bf 2b       	or	r27, r31
     d4a:	11 f4       	brne	.+4      	; 0xd50 <__fp_round+0x18>
     d4c:	60 ff       	sbrs	r22, 0
     d4e:	04 c0       	rjmp	.+8      	; 0xd58 <__fp_round+0x20>
     d50:	6f 5f       	subi	r22, 0xFF	; 255
     d52:	7f 4f       	sbci	r23, 0xFF	; 255
     d54:	8f 4f       	sbci	r24, 0xFF	; 255
     d56:	9f 4f       	sbci	r25, 0xFF	; 255
     d58:	08 95       	ret

00000d5a <__fp_split3>:
     d5a:	57 fd       	sbrc	r21, 7
     d5c:	90 58       	subi	r25, 0x80	; 128
     d5e:	44 0f       	add	r20, r20
     d60:	55 1f       	adc	r21, r21
     d62:	59 f0       	breq	.+22     	; 0xd7a <__fp_splitA+0x10>
     d64:	5f 3f       	cpi	r21, 0xFF	; 255
     d66:	71 f0       	breq	.+28     	; 0xd84 <__fp_splitA+0x1a>
     d68:	47 95       	ror	r20

00000d6a <__fp_splitA>:
     d6a:	88 0f       	add	r24, r24
     d6c:	97 fb       	bst	r25, 7
     d6e:	99 1f       	adc	r25, r25
     d70:	61 f0       	breq	.+24     	; 0xd8a <__fp_splitA+0x20>
     d72:	9f 3f       	cpi	r25, 0xFF	; 255
     d74:	79 f0       	breq	.+30     	; 0xd94 <__fp_splitA+0x2a>
     d76:	87 95       	ror	r24
     d78:	08 95       	ret
     d7a:	12 16       	cp	r1, r18
     d7c:	13 06       	cpc	r1, r19
     d7e:	14 06       	cpc	r1, r20
     d80:	55 1f       	adc	r21, r21
     d82:	f2 cf       	rjmp	.-28     	; 0xd68 <__fp_split3+0xe>
     d84:	46 95       	lsr	r20
     d86:	f1 df       	rcall	.-30     	; 0xd6a <__fp_splitA>
     d88:	08 c0       	rjmp	.+16     	; 0xd9a <__fp_splitA+0x30>
     d8a:	16 16       	cp	r1, r22
     d8c:	17 06       	cpc	r1, r23
     d8e:	18 06       	cpc	r1, r24
     d90:	99 1f       	adc	r25, r25
     d92:	f1 cf       	rjmp	.-30     	; 0xd76 <__fp_splitA+0xc>
     d94:	86 95       	lsr	r24
     d96:	71 05       	cpc	r23, r1
     d98:	61 05       	cpc	r22, r1
     d9a:	08 94       	sec
     d9c:	08 95       	ret

00000d9e <__fp_zero>:
     d9e:	e8 94       	clt

00000da0 <__fp_szero>:
     da0:	bb 27       	eor	r27, r27
     da2:	66 27       	eor	r22, r22
     da4:	77 27       	eor	r23, r23
     da6:	cb 01       	movw	r24, r22
     da8:	97 f9       	bld	r25, 7
     daa:	08 95       	ret

00000dac <__gesf2>:
     dac:	0e 94 3a 06 	call	0xc74	; 0xc74 <__fp_cmp>
     db0:	08 f4       	brcc	.+2      	; 0xdb4 <__gesf2+0x8>
     db2:	8f ef       	ldi	r24, 0xFF	; 255
     db4:	08 95       	ret

00000db6 <inverse>:
     db6:	9b 01       	movw	r18, r22
     db8:	ac 01       	movw	r20, r24
     dba:	60 e0       	ldi	r22, 0x00	; 0
     dbc:	70 e0       	ldi	r23, 0x00	; 0
     dbe:	80 e8       	ldi	r24, 0x80	; 128
     dc0:	9f e3       	ldi	r25, 0x3F	; 63
     dc2:	0c 94 55 05 	jmp	0xaaa	; 0xaaa <__divsf3>

00000dc6 <__mulsf3>:
     dc6:	0e 94 f6 06 	call	0xdec	; 0xdec <__mulsf3x>
     dca:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__fp_round>
     dce:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__fp_pscA>
     dd2:	38 f0       	brcs	.+14     	; 0xde2 <__mulsf3+0x1c>
     dd4:	0e 94 95 06 	call	0xd2a	; 0xd2a <__fp_pscB>
     dd8:	20 f0       	brcs	.+8      	; 0xde2 <__mulsf3+0x1c>
     dda:	95 23       	and	r25, r21
     ddc:	11 f0       	breq	.+4      	; 0xde2 <__mulsf3+0x1c>
     dde:	0c 94 5e 06 	jmp	0xcbc	; 0xcbc <__fp_inf>
     de2:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_nan>
     de6:	11 24       	eor	r1, r1
     de8:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__fp_szero>

00000dec <__mulsf3x>:
     dec:	0e 94 ad 06 	call	0xd5a	; 0xd5a <__fp_split3>
     df0:	70 f3       	brcs	.-36     	; 0xdce <__mulsf3+0x8>

00000df2 <__mulsf3_pse>:
     df2:	95 9f       	mul	r25, r21
     df4:	c1 f3       	breq	.-16     	; 0xde6 <__mulsf3+0x20>
     df6:	95 0f       	add	r25, r21
     df8:	50 e0       	ldi	r21, 0x00	; 0
     dfa:	55 1f       	adc	r21, r21
     dfc:	62 9f       	mul	r22, r18
     dfe:	f0 01       	movw	r30, r0
     e00:	72 9f       	mul	r23, r18
     e02:	bb 27       	eor	r27, r27
     e04:	f0 0d       	add	r31, r0
     e06:	b1 1d       	adc	r27, r1
     e08:	63 9f       	mul	r22, r19
     e0a:	aa 27       	eor	r26, r26
     e0c:	f0 0d       	add	r31, r0
     e0e:	b1 1d       	adc	r27, r1
     e10:	aa 1f       	adc	r26, r26
     e12:	64 9f       	mul	r22, r20
     e14:	66 27       	eor	r22, r22
     e16:	b0 0d       	add	r27, r0
     e18:	a1 1d       	adc	r26, r1
     e1a:	66 1f       	adc	r22, r22
     e1c:	82 9f       	mul	r24, r18
     e1e:	22 27       	eor	r18, r18
     e20:	b0 0d       	add	r27, r0
     e22:	a1 1d       	adc	r26, r1
     e24:	62 1f       	adc	r22, r18
     e26:	73 9f       	mul	r23, r19
     e28:	b0 0d       	add	r27, r0
     e2a:	a1 1d       	adc	r26, r1
     e2c:	62 1f       	adc	r22, r18
     e2e:	83 9f       	mul	r24, r19
     e30:	a0 0d       	add	r26, r0
     e32:	61 1d       	adc	r22, r1
     e34:	22 1f       	adc	r18, r18
     e36:	74 9f       	mul	r23, r20
     e38:	33 27       	eor	r19, r19
     e3a:	a0 0d       	add	r26, r0
     e3c:	61 1d       	adc	r22, r1
     e3e:	23 1f       	adc	r18, r19
     e40:	84 9f       	mul	r24, r20
     e42:	60 0d       	add	r22, r0
     e44:	21 1d       	adc	r18, r1
     e46:	82 2f       	mov	r24, r18
     e48:	76 2f       	mov	r23, r22
     e4a:	6a 2f       	mov	r22, r26
     e4c:	11 24       	eor	r1, r1
     e4e:	9f 57       	subi	r25, 0x7F	; 127
     e50:	50 40       	sbci	r21, 0x00	; 0
     e52:	9a f0       	brmi	.+38     	; 0xe7a <__mulsf3_pse+0x88>
     e54:	f1 f0       	breq	.+60     	; 0xe92 <__mulsf3_pse+0xa0>
     e56:	88 23       	and	r24, r24
     e58:	4a f0       	brmi	.+18     	; 0xe6c <__mulsf3_pse+0x7a>
     e5a:	ee 0f       	add	r30, r30
     e5c:	ff 1f       	adc	r31, r31
     e5e:	bb 1f       	adc	r27, r27
     e60:	66 1f       	adc	r22, r22
     e62:	77 1f       	adc	r23, r23
     e64:	88 1f       	adc	r24, r24
     e66:	91 50       	subi	r25, 0x01	; 1
     e68:	50 40       	sbci	r21, 0x00	; 0
     e6a:	a9 f7       	brne	.-22     	; 0xe56 <__mulsf3_pse+0x64>
     e6c:	9e 3f       	cpi	r25, 0xFE	; 254
     e6e:	51 05       	cpc	r21, r1
     e70:	80 f0       	brcs	.+32     	; 0xe92 <__mulsf3_pse+0xa0>
     e72:	0c 94 5e 06 	jmp	0xcbc	; 0xcbc <__fp_inf>
     e76:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__fp_szero>
     e7a:	5f 3f       	cpi	r21, 0xFF	; 255
     e7c:	e4 f3       	brlt	.-8      	; 0xe76 <__mulsf3_pse+0x84>
     e7e:	98 3e       	cpi	r25, 0xE8	; 232
     e80:	d4 f3       	brlt	.-12     	; 0xe76 <__mulsf3_pse+0x84>
     e82:	86 95       	lsr	r24
     e84:	77 95       	ror	r23
     e86:	67 95       	ror	r22
     e88:	b7 95       	ror	r27
     e8a:	f7 95       	ror	r31
     e8c:	e7 95       	ror	r30
     e8e:	9f 5f       	subi	r25, 0xFF	; 255
     e90:	c1 f7       	brne	.-16     	; 0xe82 <__mulsf3_pse+0x90>
     e92:	fe 2b       	or	r31, r30
     e94:	88 0f       	add	r24, r24
     e96:	91 1d       	adc	r25, r1
     e98:	96 95       	lsr	r25
     e9a:	87 95       	ror	r24
     e9c:	97 f9       	bld	r25, 7
     e9e:	08 95       	ret

00000ea0 <square>:
     ea0:	9b 01       	movw	r18, r22
     ea2:	ac 01       	movw	r20, r24
     ea4:	0c 94 e3 06 	jmp	0xdc6	; 0xdc6 <__mulsf3>

00000ea8 <__subsf3>:
     ea8:	50 58       	subi	r21, 0x80	; 128

00000eaa <__addsf3>:
     eaa:	bb 27       	eor	r27, r27
     eac:	aa 27       	eor	r26, r26
     eae:	0e 94 6c 07 	call	0xed8	; 0xed8 <__addsf3x>
     eb2:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__fp_round>
     eb6:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__fp_pscA>
     eba:	38 f0       	brcs	.+14     	; 0xeca <__addsf3+0x20>
     ebc:	0e 94 95 06 	call	0xd2a	; 0xd2a <__fp_pscB>
     ec0:	20 f0       	brcs	.+8      	; 0xeca <__addsf3+0x20>
     ec2:	39 f4       	brne	.+14     	; 0xed2 <__addsf3+0x28>
     ec4:	9f 3f       	cpi	r25, 0xFF	; 255
     ec6:	19 f4       	brne	.+6      	; 0xece <__addsf3+0x24>
     ec8:	26 f4       	brtc	.+8      	; 0xed2 <__addsf3+0x28>
     eca:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_nan>
     ece:	0e f4       	brtc	.+2      	; 0xed2 <__addsf3+0x28>
     ed0:	e0 95       	com	r30
     ed2:	e7 fb       	bst	r30, 7
     ed4:	0c 94 5e 06 	jmp	0xcbc	; 0xcbc <__fp_inf>

00000ed8 <__addsf3x>:
     ed8:	e9 2f       	mov	r30, r25
     eda:	0e 94 ad 06 	call	0xd5a	; 0xd5a <__fp_split3>
     ede:	58 f3       	brcs	.-42     	; 0xeb6 <__addsf3+0xc>
     ee0:	ba 17       	cp	r27, r26
     ee2:	62 07       	cpc	r22, r18
     ee4:	73 07       	cpc	r23, r19
     ee6:	84 07       	cpc	r24, r20
     ee8:	95 07       	cpc	r25, r21
     eea:	20 f0       	brcs	.+8      	; 0xef4 <__addsf3x+0x1c>
     eec:	79 f4       	brne	.+30     	; 0xf0c <__addsf3x+0x34>
     eee:	a6 f5       	brtc	.+104    	; 0xf58 <__addsf3x+0x80>
     ef0:	0c 94 cf 06 	jmp	0xd9e	; 0xd9e <__fp_zero>
     ef4:	0e f4       	brtc	.+2      	; 0xef8 <__addsf3x+0x20>
     ef6:	e0 95       	com	r30
     ef8:	0b 2e       	mov	r0, r27
     efa:	ba 2f       	mov	r27, r26
     efc:	a0 2d       	mov	r26, r0
     efe:	0b 01       	movw	r0, r22
     f00:	b9 01       	movw	r22, r18
     f02:	90 01       	movw	r18, r0
     f04:	0c 01       	movw	r0, r24
     f06:	ca 01       	movw	r24, r20
     f08:	a0 01       	movw	r20, r0
     f0a:	11 24       	eor	r1, r1
     f0c:	ff 27       	eor	r31, r31
     f0e:	59 1b       	sub	r21, r25
     f10:	99 f0       	breq	.+38     	; 0xf38 <__addsf3x+0x60>
     f12:	59 3f       	cpi	r21, 0xF9	; 249
     f14:	50 f4       	brcc	.+20     	; 0xf2a <__addsf3x+0x52>
     f16:	50 3e       	cpi	r21, 0xE0	; 224
     f18:	68 f1       	brcs	.+90     	; 0xf74 <__addsf3x+0x9c>
     f1a:	1a 16       	cp	r1, r26
     f1c:	f0 40       	sbci	r31, 0x00	; 0
     f1e:	a2 2f       	mov	r26, r18
     f20:	23 2f       	mov	r18, r19
     f22:	34 2f       	mov	r19, r20
     f24:	44 27       	eor	r20, r20
     f26:	58 5f       	subi	r21, 0xF8	; 248
     f28:	f3 cf       	rjmp	.-26     	; 0xf10 <__addsf3x+0x38>
     f2a:	46 95       	lsr	r20
     f2c:	37 95       	ror	r19
     f2e:	27 95       	ror	r18
     f30:	a7 95       	ror	r26
     f32:	f0 40       	sbci	r31, 0x00	; 0
     f34:	53 95       	inc	r21
     f36:	c9 f7       	brne	.-14     	; 0xf2a <__addsf3x+0x52>
     f38:	7e f4       	brtc	.+30     	; 0xf58 <__addsf3x+0x80>
     f3a:	1f 16       	cp	r1, r31
     f3c:	ba 0b       	sbc	r27, r26
     f3e:	62 0b       	sbc	r22, r18
     f40:	73 0b       	sbc	r23, r19
     f42:	84 0b       	sbc	r24, r20
     f44:	ba f0       	brmi	.+46     	; 0xf74 <__addsf3x+0x9c>
     f46:	91 50       	subi	r25, 0x01	; 1
     f48:	a1 f0       	breq	.+40     	; 0xf72 <__addsf3x+0x9a>
     f4a:	ff 0f       	add	r31, r31
     f4c:	bb 1f       	adc	r27, r27
     f4e:	66 1f       	adc	r22, r22
     f50:	77 1f       	adc	r23, r23
     f52:	88 1f       	adc	r24, r24
     f54:	c2 f7       	brpl	.-16     	; 0xf46 <__addsf3x+0x6e>
     f56:	0e c0       	rjmp	.+28     	; 0xf74 <__addsf3x+0x9c>
     f58:	ba 0f       	add	r27, r26
     f5a:	62 1f       	adc	r22, r18
     f5c:	73 1f       	adc	r23, r19
     f5e:	84 1f       	adc	r24, r20
     f60:	48 f4       	brcc	.+18     	; 0xf74 <__addsf3x+0x9c>
     f62:	87 95       	ror	r24
     f64:	77 95       	ror	r23
     f66:	67 95       	ror	r22
     f68:	b7 95       	ror	r27
     f6a:	f7 95       	ror	r31
     f6c:	9e 3f       	cpi	r25, 0xFE	; 254
     f6e:	08 f0       	brcs	.+2      	; 0xf72 <__addsf3x+0x9a>
     f70:	b0 cf       	rjmp	.-160    	; 0xed2 <__addsf3+0x28>
     f72:	93 95       	inc	r25
     f74:	88 0f       	add	r24, r24
     f76:	08 f0       	brcs	.+2      	; 0xf7a <__addsf3x+0xa2>
     f78:	99 27       	eor	r25, r25
     f7a:	ee 0f       	add	r30, r30
     f7c:	97 95       	ror	r25
     f7e:	87 95       	ror	r24
     f80:	08 95       	ret

00000f82 <vfprintf>:
     f82:	a3 e1       	ldi	r26, 0x13	; 19
     f84:	b0 e0       	ldi	r27, 0x00	; 0
     f86:	e7 ec       	ldi	r30, 0xC7	; 199
     f88:	f7 e0       	ldi	r31, 0x07	; 7
     f8a:	0c 94 3d 0b 	jmp	0x167a	; 0x167a <__prologue_saves__>
     f8e:	6c 01       	movw	r12, r24
     f90:	4b 01       	movw	r8, r22
     f92:	2a 01       	movw	r4, r20
     f94:	fc 01       	movw	r30, r24
     f96:	17 82       	std	Z+7, r1	; 0x07
     f98:	16 82       	std	Z+6, r1	; 0x06
     f9a:	83 81       	ldd	r24, Z+3	; 0x03
     f9c:	81 ff       	sbrs	r24, 1
     f9e:	43 c3       	rjmp	.+1670   	; 0x1626 <vfprintf+0x6a4>
     fa0:	ae 01       	movw	r20, r28
     fa2:	4f 5f       	subi	r20, 0xFF	; 255
     fa4:	5f 4f       	sbci	r21, 0xFF	; 255
     fa6:	3a 01       	movw	r6, r20
     fa8:	f6 01       	movw	r30, r12
     faa:	93 81       	ldd	r25, Z+3	; 0x03
     fac:	f4 01       	movw	r30, r8
     fae:	93 fd       	sbrc	r25, 3
     fb0:	85 91       	lpm	r24, Z+
     fb2:	93 ff       	sbrs	r25, 3
     fb4:	81 91       	ld	r24, Z+
     fb6:	4f 01       	movw	r8, r30
     fb8:	88 23       	and	r24, r24
     fba:	09 f4       	brne	.+2      	; 0xfbe <vfprintf+0x3c>
     fbc:	30 c3       	rjmp	.+1632   	; 0x161e <vfprintf+0x69c>
     fbe:	85 32       	cpi	r24, 0x25	; 37
     fc0:	39 f4       	brne	.+14     	; 0xfd0 <vfprintf+0x4e>
     fc2:	93 fd       	sbrc	r25, 3
     fc4:	85 91       	lpm	r24, Z+
     fc6:	93 ff       	sbrs	r25, 3
     fc8:	81 91       	ld	r24, Z+
     fca:	4f 01       	movw	r8, r30
     fcc:	85 32       	cpi	r24, 0x25	; 37
     fce:	39 f4       	brne	.+14     	; 0xfde <vfprintf+0x5c>
     fd0:	b6 01       	movw	r22, r12
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
     fd8:	52 01       	movw	r10, r4
     fda:	25 01       	movw	r4, r10
     fdc:	e5 cf       	rjmp	.-54     	; 0xfa8 <vfprintf+0x26>
     fde:	10 e0       	ldi	r17, 0x00	; 0
     fe0:	f1 2c       	mov	r15, r1
     fe2:	20 e0       	ldi	r18, 0x00	; 0
     fe4:	20 32       	cpi	r18, 0x20	; 32
     fe6:	a0 f4       	brcc	.+40     	; 0x1010 <vfprintf+0x8e>
     fe8:	8b 32       	cpi	r24, 0x2B	; 43
     fea:	69 f0       	breq	.+26     	; 0x1006 <vfprintf+0x84>
     fec:	30 f4       	brcc	.+12     	; 0xffa <vfprintf+0x78>
     fee:	80 32       	cpi	r24, 0x20	; 32
     ff0:	59 f0       	breq	.+22     	; 0x1008 <vfprintf+0x86>
     ff2:	83 32       	cpi	r24, 0x23	; 35
     ff4:	69 f4       	brne	.+26     	; 0x1010 <vfprintf+0x8e>
     ff6:	20 61       	ori	r18, 0x10	; 16
     ff8:	2c c0       	rjmp	.+88     	; 0x1052 <vfprintf+0xd0>
     ffa:	8d 32       	cpi	r24, 0x2D	; 45
     ffc:	39 f0       	breq	.+14     	; 0x100c <vfprintf+0x8a>
     ffe:	80 33       	cpi	r24, 0x30	; 48
    1000:	39 f4       	brne	.+14     	; 0x1010 <vfprintf+0x8e>
    1002:	21 60       	ori	r18, 0x01	; 1
    1004:	26 c0       	rjmp	.+76     	; 0x1052 <vfprintf+0xd0>
    1006:	22 60       	ori	r18, 0x02	; 2
    1008:	24 60       	ori	r18, 0x04	; 4
    100a:	23 c0       	rjmp	.+70     	; 0x1052 <vfprintf+0xd0>
    100c:	28 60       	ori	r18, 0x08	; 8
    100e:	21 c0       	rjmp	.+66     	; 0x1052 <vfprintf+0xd0>
    1010:	27 fd       	sbrc	r18, 7
    1012:	27 c0       	rjmp	.+78     	; 0x1062 <vfprintf+0xe0>
    1014:	30 ed       	ldi	r19, 0xD0	; 208
    1016:	38 0f       	add	r19, r24
    1018:	3a 30       	cpi	r19, 0x0A	; 10
    101a:	78 f4       	brcc	.+30     	; 0x103a <vfprintf+0xb8>
    101c:	26 ff       	sbrs	r18, 6
    101e:	06 c0       	rjmp	.+12     	; 0x102c <vfprintf+0xaa>
    1020:	fa e0       	ldi	r31, 0x0A	; 10
    1022:	1f 9f       	mul	r17, r31
    1024:	30 0d       	add	r19, r0
    1026:	11 24       	eor	r1, r1
    1028:	13 2f       	mov	r17, r19
    102a:	13 c0       	rjmp	.+38     	; 0x1052 <vfprintf+0xd0>
    102c:	4a e0       	ldi	r20, 0x0A	; 10
    102e:	f4 9e       	mul	r15, r20
    1030:	30 0d       	add	r19, r0
    1032:	11 24       	eor	r1, r1
    1034:	f3 2e       	mov	r15, r19
    1036:	20 62       	ori	r18, 0x20	; 32
    1038:	0c c0       	rjmp	.+24     	; 0x1052 <vfprintf+0xd0>
    103a:	8e 32       	cpi	r24, 0x2E	; 46
    103c:	21 f4       	brne	.+8      	; 0x1046 <vfprintf+0xc4>
    103e:	26 fd       	sbrc	r18, 6
    1040:	ee c2       	rjmp	.+1500   	; 0x161e <vfprintf+0x69c>
    1042:	20 64       	ori	r18, 0x40	; 64
    1044:	06 c0       	rjmp	.+12     	; 0x1052 <vfprintf+0xd0>
    1046:	8c 36       	cpi	r24, 0x6C	; 108
    1048:	11 f4       	brne	.+4      	; 0x104e <vfprintf+0xcc>
    104a:	20 68       	ori	r18, 0x80	; 128
    104c:	02 c0       	rjmp	.+4      	; 0x1052 <vfprintf+0xd0>
    104e:	88 36       	cpi	r24, 0x68	; 104
    1050:	41 f4       	brne	.+16     	; 0x1062 <vfprintf+0xe0>
    1052:	f4 01       	movw	r30, r8
    1054:	93 fd       	sbrc	r25, 3
    1056:	85 91       	lpm	r24, Z+
    1058:	93 ff       	sbrs	r25, 3
    105a:	81 91       	ld	r24, Z+
    105c:	4f 01       	movw	r8, r30
    105e:	81 11       	cpse	r24, r1
    1060:	c1 cf       	rjmp	.-126    	; 0xfe4 <vfprintf+0x62>
    1062:	9b eb       	ldi	r25, 0xBB	; 187
    1064:	98 0f       	add	r25, r24
    1066:	93 30       	cpi	r25, 0x03	; 3
    1068:	18 f4       	brcc	.+6      	; 0x1070 <vfprintf+0xee>
    106a:	20 61       	ori	r18, 0x10	; 16
    106c:	80 5e       	subi	r24, 0xE0	; 224
    106e:	06 c0       	rjmp	.+12     	; 0x107c <vfprintf+0xfa>
    1070:	9b e9       	ldi	r25, 0x9B	; 155
    1072:	98 0f       	add	r25, r24
    1074:	93 30       	cpi	r25, 0x03	; 3
    1076:	08 f0       	brcs	.+2      	; 0x107a <vfprintf+0xf8>
    1078:	71 c1       	rjmp	.+738    	; 0x135c <vfprintf+0x3da>
    107a:	2f 7e       	andi	r18, 0xEF	; 239
    107c:	26 ff       	sbrs	r18, 6
    107e:	16 e0       	ldi	r17, 0x06	; 6
    1080:	2f 73       	andi	r18, 0x3F	; 63
    1082:	32 2e       	mov	r3, r18
    1084:	85 36       	cpi	r24, 0x65	; 101
    1086:	19 f4       	brne	.+6      	; 0x108e <vfprintf+0x10c>
    1088:	20 64       	ori	r18, 0x40	; 64
    108a:	32 2e       	mov	r3, r18
    108c:	08 c0       	rjmp	.+16     	; 0x109e <vfprintf+0x11c>
    108e:	86 36       	cpi	r24, 0x66	; 102
    1090:	21 f4       	brne	.+8      	; 0x109a <vfprintf+0x118>
    1092:	f2 2f       	mov	r31, r18
    1094:	f0 68       	ori	r31, 0x80	; 128
    1096:	3f 2e       	mov	r3, r31
    1098:	02 c0       	rjmp	.+4      	; 0x109e <vfprintf+0x11c>
    109a:	11 11       	cpse	r17, r1
    109c:	11 50       	subi	r17, 0x01	; 1
    109e:	37 fe       	sbrs	r3, 7
    10a0:	07 c0       	rjmp	.+14     	; 0x10b0 <vfprintf+0x12e>
    10a2:	1c 33       	cpi	r17, 0x3C	; 60
    10a4:	50 f4       	brcc	.+20     	; 0x10ba <vfprintf+0x138>
    10a6:	ee 24       	eor	r14, r14
    10a8:	e3 94       	inc	r14
    10aa:	e1 0e       	add	r14, r17
    10ac:	27 e0       	ldi	r18, 0x07	; 7
    10ae:	0b c0       	rjmp	.+22     	; 0x10c6 <vfprintf+0x144>
    10b0:	18 30       	cpi	r17, 0x08	; 8
    10b2:	38 f0       	brcs	.+14     	; 0x10c2 <vfprintf+0x140>
    10b4:	27 e0       	ldi	r18, 0x07	; 7
    10b6:	17 e0       	ldi	r17, 0x07	; 7
    10b8:	05 c0       	rjmp	.+10     	; 0x10c4 <vfprintf+0x142>
    10ba:	27 e0       	ldi	r18, 0x07	; 7
    10bc:	4c e3       	ldi	r20, 0x3C	; 60
    10be:	e4 2e       	mov	r14, r20
    10c0:	02 c0       	rjmp	.+4      	; 0x10c6 <vfprintf+0x144>
    10c2:	21 2f       	mov	r18, r17
    10c4:	e1 2c       	mov	r14, r1
    10c6:	52 01       	movw	r10, r4
    10c8:	44 e0       	ldi	r20, 0x04	; 4
    10ca:	a4 0e       	add	r10, r20
    10cc:	b1 1c       	adc	r11, r1
    10ce:	f2 01       	movw	r30, r4
    10d0:	60 81       	ld	r22, Z
    10d2:	71 81       	ldd	r23, Z+1	; 0x01
    10d4:	82 81       	ldd	r24, Z+2	; 0x02
    10d6:	93 81       	ldd	r25, Z+3	; 0x03
    10d8:	0e 2d       	mov	r16, r14
    10da:	a3 01       	movw	r20, r6
    10dc:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <__ftoa_engine>
    10e0:	2c 01       	movw	r4, r24
    10e2:	09 81       	ldd	r16, Y+1	; 0x01
    10e4:	00 ff       	sbrs	r16, 0
    10e6:	02 c0       	rjmp	.+4      	; 0x10ec <vfprintf+0x16a>
    10e8:	03 ff       	sbrs	r16, 3
    10ea:	07 c0       	rjmp	.+14     	; 0x10fa <vfprintf+0x178>
    10ec:	31 fc       	sbrc	r3, 1
    10ee:	08 c0       	rjmp	.+16     	; 0x1100 <vfprintf+0x17e>
    10f0:	32 fe       	sbrs	r3, 2
    10f2:	09 c0       	rjmp	.+18     	; 0x1106 <vfprintf+0x184>
    10f4:	30 e2       	ldi	r19, 0x20	; 32
    10f6:	23 2e       	mov	r2, r19
    10f8:	07 c0       	rjmp	.+14     	; 0x1108 <vfprintf+0x186>
    10fa:	2d e2       	ldi	r18, 0x2D	; 45
    10fc:	22 2e       	mov	r2, r18
    10fe:	04 c0       	rjmp	.+8      	; 0x1108 <vfprintf+0x186>
    1100:	9b e2       	ldi	r25, 0x2B	; 43
    1102:	29 2e       	mov	r2, r25
    1104:	01 c0       	rjmp	.+2      	; 0x1108 <vfprintf+0x186>
    1106:	21 2c       	mov	r2, r1
    1108:	80 2f       	mov	r24, r16
    110a:	8c 70       	andi	r24, 0x0C	; 12
    110c:	19 f0       	breq	.+6      	; 0x1114 <vfprintf+0x192>
    110e:	21 10       	cpse	r2, r1
    1110:	68 c2       	rjmp	.+1232   	; 0x15e2 <vfprintf+0x660>
    1112:	a8 c2       	rjmp	.+1360   	; 0x1664 <vfprintf+0x6e2>
    1114:	37 fe       	sbrs	r3, 7
    1116:	0f c0       	rjmp	.+30     	; 0x1136 <vfprintf+0x1b4>
    1118:	e4 0c       	add	r14, r4
    111a:	04 ff       	sbrs	r16, 4
    111c:	04 c0       	rjmp	.+8      	; 0x1126 <vfprintf+0x1a4>
    111e:	8a 81       	ldd	r24, Y+2	; 0x02
    1120:	81 33       	cpi	r24, 0x31	; 49
    1122:	09 f4       	brne	.+2      	; 0x1126 <vfprintf+0x1a4>
    1124:	ea 94       	dec	r14
    1126:	1e 14       	cp	r1, r14
    1128:	74 f5       	brge	.+92     	; 0x1186 <vfprintf+0x204>
    112a:	f8 e0       	ldi	r31, 0x08	; 8
    112c:	fe 15       	cp	r31, r14
    112e:	78 f5       	brcc	.+94     	; 0x118e <vfprintf+0x20c>
    1130:	88 e0       	ldi	r24, 0x08	; 8
    1132:	e8 2e       	mov	r14, r24
    1134:	2c c0       	rjmp	.+88     	; 0x118e <vfprintf+0x20c>
    1136:	36 fc       	sbrc	r3, 6
    1138:	2a c0       	rjmp	.+84     	; 0x118e <vfprintf+0x20c>
    113a:	81 2f       	mov	r24, r17
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	84 15       	cp	r24, r4
    1140:	95 05       	cpc	r25, r5
    1142:	9c f0       	brlt	.+38     	; 0x116a <vfprintf+0x1e8>
    1144:	2c ef       	ldi	r18, 0xFC	; 252
    1146:	42 16       	cp	r4, r18
    1148:	2f ef       	ldi	r18, 0xFF	; 255
    114a:	52 06       	cpc	r5, r18
    114c:	74 f0       	brlt	.+28     	; 0x116a <vfprintf+0x1e8>
    114e:	43 2d       	mov	r20, r3
    1150:	40 68       	ori	r20, 0x80	; 128
    1152:	34 2e       	mov	r3, r20
    1154:	0a c0       	rjmp	.+20     	; 0x116a <vfprintf+0x1e8>
    1156:	e2 e0       	ldi	r30, 0x02	; 2
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	ec 0f       	add	r30, r28
    115c:	fd 1f       	adc	r31, r29
    115e:	e1 0f       	add	r30, r17
    1160:	f1 1d       	adc	r31, r1
    1162:	80 81       	ld	r24, Z
    1164:	80 33       	cpi	r24, 0x30	; 48
    1166:	19 f4       	brne	.+6      	; 0x116e <vfprintf+0x1ec>
    1168:	11 50       	subi	r17, 0x01	; 1
    116a:	11 11       	cpse	r17, r1
    116c:	f4 cf       	rjmp	.-24     	; 0x1156 <vfprintf+0x1d4>
    116e:	37 fe       	sbrs	r3, 7
    1170:	0e c0       	rjmp	.+28     	; 0x118e <vfprintf+0x20c>
    1172:	ee 24       	eor	r14, r14
    1174:	e3 94       	inc	r14
    1176:	e1 0e       	add	r14, r17
    1178:	81 2f       	mov	r24, r17
    117a:	90 e0       	ldi	r25, 0x00	; 0
    117c:	48 16       	cp	r4, r24
    117e:	59 06       	cpc	r5, r25
    1180:	2c f4       	brge	.+10     	; 0x118c <vfprintf+0x20a>
    1182:	14 19       	sub	r17, r4
    1184:	04 c0       	rjmp	.+8      	; 0x118e <vfprintf+0x20c>
    1186:	ee 24       	eor	r14, r14
    1188:	e3 94       	inc	r14
    118a:	01 c0       	rjmp	.+2      	; 0x118e <vfprintf+0x20c>
    118c:	10 e0       	ldi	r17, 0x00	; 0
    118e:	37 fe       	sbrs	r3, 7
    1190:	06 c0       	rjmp	.+12     	; 0x119e <vfprintf+0x21c>
    1192:	14 14       	cp	r1, r4
    1194:	15 04       	cpc	r1, r5
    1196:	34 f4       	brge	.+12     	; 0x11a4 <vfprintf+0x222>
    1198:	c2 01       	movw	r24, r4
    119a:	01 96       	adiw	r24, 0x01	; 1
    119c:	05 c0       	rjmp	.+10     	; 0x11a8 <vfprintf+0x226>
    119e:	85 e0       	ldi	r24, 0x05	; 5
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	02 c0       	rjmp	.+4      	; 0x11a8 <vfprintf+0x226>
    11a4:	81 e0       	ldi	r24, 0x01	; 1
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	21 10       	cpse	r2, r1
    11aa:	01 96       	adiw	r24, 0x01	; 1
    11ac:	11 23       	and	r17, r17
    11ae:	31 f0       	breq	.+12     	; 0x11bc <vfprintf+0x23a>
    11b0:	21 2f       	mov	r18, r17
    11b2:	30 e0       	ldi	r19, 0x00	; 0
    11b4:	2f 5f       	subi	r18, 0xFF	; 255
    11b6:	3f 4f       	sbci	r19, 0xFF	; 255
    11b8:	82 0f       	add	r24, r18
    11ba:	93 1f       	adc	r25, r19
    11bc:	2f 2d       	mov	r18, r15
    11be:	30 e0       	ldi	r19, 0x00	; 0
    11c0:	82 17       	cp	r24, r18
    11c2:	93 07       	cpc	r25, r19
    11c4:	14 f4       	brge	.+4      	; 0x11ca <vfprintf+0x248>
    11c6:	f8 1a       	sub	r15, r24
    11c8:	01 c0       	rjmp	.+2      	; 0x11cc <vfprintf+0x24a>
    11ca:	f1 2c       	mov	r15, r1
    11cc:	83 2d       	mov	r24, r3
    11ce:	89 70       	andi	r24, 0x09	; 9
    11d0:	49 f4       	brne	.+18     	; 0x11e4 <vfprintf+0x262>
    11d2:	ff 20       	and	r15, r15
    11d4:	39 f0       	breq	.+14     	; 0x11e4 <vfprintf+0x262>
    11d6:	b6 01       	movw	r22, r12
    11d8:	80 e2       	ldi	r24, 0x20	; 32
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    11e0:	fa 94       	dec	r15
    11e2:	f7 cf       	rjmp	.-18     	; 0x11d2 <vfprintf+0x250>
    11e4:	22 20       	and	r2, r2
    11e6:	29 f0       	breq	.+10     	; 0x11f2 <vfprintf+0x270>
    11e8:	b6 01       	movw	r22, r12
    11ea:	82 2d       	mov	r24, r2
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    11f2:	33 fc       	sbrc	r3, 3
    11f4:	09 c0       	rjmp	.+18     	; 0x1208 <vfprintf+0x286>
    11f6:	ff 20       	and	r15, r15
    11f8:	39 f0       	breq	.+14     	; 0x1208 <vfprintf+0x286>
    11fa:	b6 01       	movw	r22, r12
    11fc:	80 e3       	ldi	r24, 0x30	; 48
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    1204:	fa 94       	dec	r15
    1206:	f7 cf       	rjmp	.-18     	; 0x11f6 <vfprintf+0x274>
    1208:	37 fe       	sbrs	r3, 7
    120a:	5a c0       	rjmp	.+180    	; 0x12c0 <vfprintf+0x33e>
    120c:	94 2d       	mov	r25, r4
    120e:	85 2d       	mov	r24, r5
    1210:	57 fe       	sbrs	r5, 7
    1212:	02 c0       	rjmp	.+4      	; 0x1218 <vfprintf+0x296>
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	80 e0       	ldi	r24, 0x00	; 0
    1218:	29 2e       	mov	r2, r25
    121a:	38 2e       	mov	r3, r24
    121c:	20 e0       	ldi	r18, 0x00	; 0
    121e:	30 e0       	ldi	r19, 0x00	; 0
    1220:	a2 01       	movw	r20, r4
    1222:	4e 19       	sub	r20, r14
    1224:	51 09       	sbc	r21, r1
    1226:	5d 87       	std	Y+13, r21	; 0x0d
    1228:	4c 87       	std	Y+12, r20	; 0x0c
    122a:	a2 01       	movw	r20, r4
    122c:	42 19       	sub	r20, r2
    122e:	53 09       	sbc	r21, r3
    1230:	5f 87       	std	Y+15, r21	; 0x0f
    1232:	4e 87       	std	Y+14, r20	; 0x0e
    1234:	61 2f       	mov	r22, r17
    1236:	70 e0       	ldi	r23, 0x00	; 0
    1238:	44 27       	eor	r20, r20
    123a:	55 27       	eor	r21, r21
    123c:	46 1b       	sub	r20, r22
    123e:	57 0b       	sbc	r21, r23
    1240:	59 8b       	std	Y+17, r21	; 0x11
    1242:	48 8b       	std	Y+16, r20	; 0x10
    1244:	5f ef       	ldi	r21, 0xFF	; 255
    1246:	25 16       	cp	r2, r21
    1248:	35 06       	cpc	r3, r21
    124a:	49 f4       	brne	.+18     	; 0x125e <vfprintf+0x2dc>
    124c:	b6 01       	movw	r22, r12
    124e:	8e e2       	ldi	r24, 0x2E	; 46
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	2a 8b       	std	Y+18, r18	; 0x12
    1254:	3b 8b       	std	Y+19, r19	; 0x13
    1256:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    125a:	3b 89       	ldd	r19, Y+19	; 0x13
    125c:	2a 89       	ldd	r18, Y+18	; 0x12
    125e:	42 14       	cp	r4, r2
    1260:	53 04       	cpc	r5, r3
    1262:	6c f0       	brlt	.+26     	; 0x127e <vfprintf+0x2fc>
    1264:	4c 85       	ldd	r20, Y+12	; 0x0c
    1266:	5d 85       	ldd	r21, Y+13	; 0x0d
    1268:	42 15       	cp	r20, r2
    126a:	53 05       	cpc	r21, r3
    126c:	44 f4       	brge	.+16     	; 0x127e <vfprintf+0x2fc>
    126e:	ee 85       	ldd	r30, Y+14	; 0x0e
    1270:	ff 85       	ldd	r31, Y+15	; 0x0f
    1272:	e2 0f       	add	r30, r18
    1274:	f3 1f       	adc	r31, r19
    1276:	e6 0d       	add	r30, r6
    1278:	f7 1d       	adc	r31, r7
    127a:	81 81       	ldd	r24, Z+1	; 0x01
    127c:	01 c0       	rjmp	.+2      	; 0x1280 <vfprintf+0x2fe>
    127e:	80 e3       	ldi	r24, 0x30	; 48
    1280:	51 e0       	ldi	r21, 0x01	; 1
    1282:	25 1a       	sub	r2, r21
    1284:	31 08       	sbc	r3, r1
    1286:	2f 5f       	subi	r18, 0xFF	; 255
    1288:	3f 4f       	sbci	r19, 0xFF	; 255
    128a:	48 89       	ldd	r20, Y+16	; 0x10
    128c:	59 89       	ldd	r21, Y+17	; 0x11
    128e:	24 16       	cp	r2, r20
    1290:	35 06       	cpc	r3, r21
    1292:	4c f0       	brlt	.+18     	; 0x12a6 <vfprintf+0x324>
    1294:	b6 01       	movw	r22, r12
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	2a 8b       	std	Y+18, r18	; 0x12
    129a:	3b 8b       	std	Y+19, r19	; 0x13
    129c:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    12a0:	2a 89       	ldd	r18, Y+18	; 0x12
    12a2:	3b 89       	ldd	r19, Y+19	; 0x13
    12a4:	cf cf       	rjmp	.-98     	; 0x1244 <vfprintf+0x2c2>
    12a6:	24 14       	cp	r2, r4
    12a8:	35 04       	cpc	r3, r5
    12aa:	39 f4       	brne	.+14     	; 0x12ba <vfprintf+0x338>
    12ac:	9a 81       	ldd	r25, Y+2	; 0x02
    12ae:	96 33       	cpi	r25, 0x36	; 54
    12b0:	18 f4       	brcc	.+6      	; 0x12b8 <vfprintf+0x336>
    12b2:	95 33       	cpi	r25, 0x35	; 53
    12b4:	11 f4       	brne	.+4      	; 0x12ba <vfprintf+0x338>
    12b6:	04 ff       	sbrs	r16, 4
    12b8:	81 e3       	ldi	r24, 0x31	; 49
    12ba:	b6 01       	movw	r22, r12
    12bc:	90 e0       	ldi	r25, 0x00	; 0
    12be:	4b c0       	rjmp	.+150    	; 0x1356 <vfprintf+0x3d4>
    12c0:	8a 81       	ldd	r24, Y+2	; 0x02
    12c2:	81 33       	cpi	r24, 0x31	; 49
    12c4:	09 f0       	breq	.+2      	; 0x12c8 <vfprintf+0x346>
    12c6:	0f 7e       	andi	r16, 0xEF	; 239
    12c8:	b6 01       	movw	r22, r12
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    12d0:	11 11       	cpse	r17, r1
    12d2:	05 c0       	rjmp	.+10     	; 0x12de <vfprintf+0x35c>
    12d4:	34 fc       	sbrc	r3, 4
    12d6:	18 c0       	rjmp	.+48     	; 0x1308 <vfprintf+0x386>
    12d8:	85 e6       	ldi	r24, 0x65	; 101
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	17 c0       	rjmp	.+46     	; 0x130c <vfprintf+0x38a>
    12de:	b6 01       	movw	r22, r12
    12e0:	8e e2       	ldi	r24, 0x2E	; 46
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    12e8:	82 e0       	ldi	r24, 0x02	; 2
    12ea:	ee 24       	eor	r14, r14
    12ec:	e3 94       	inc	r14
    12ee:	e8 0e       	add	r14, r24
    12f0:	f3 01       	movw	r30, r6
    12f2:	e8 0f       	add	r30, r24
    12f4:	f1 1d       	adc	r31, r1
    12f6:	80 81       	ld	r24, Z
    12f8:	b6 01       	movw	r22, r12
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    1300:	11 50       	subi	r17, 0x01	; 1
    1302:	8e 2d       	mov	r24, r14
    1304:	91 f7       	brne	.-28     	; 0x12ea <vfprintf+0x368>
    1306:	e6 cf       	rjmp	.-52     	; 0x12d4 <vfprintf+0x352>
    1308:	85 e4       	ldi	r24, 0x45	; 69
    130a:	90 e0       	ldi	r25, 0x00	; 0
    130c:	b6 01       	movw	r22, r12
    130e:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    1312:	57 fc       	sbrc	r5, 7
    1314:	05 c0       	rjmp	.+10     	; 0x1320 <vfprintf+0x39e>
    1316:	41 14       	cp	r4, r1
    1318:	51 04       	cpc	r5, r1
    131a:	39 f4       	brne	.+14     	; 0x132a <vfprintf+0x3a8>
    131c:	04 ff       	sbrs	r16, 4
    131e:	05 c0       	rjmp	.+10     	; 0x132a <vfprintf+0x3a8>
    1320:	51 94       	neg	r5
    1322:	41 94       	neg	r4
    1324:	51 08       	sbc	r5, r1
    1326:	8d e2       	ldi	r24, 0x2D	; 45
    1328:	01 c0       	rjmp	.+2      	; 0x132c <vfprintf+0x3aa>
    132a:	8b e2       	ldi	r24, 0x2B	; 43
    132c:	b6 01       	movw	r22, r12
    132e:	90 e0       	ldi	r25, 0x00	; 0
    1330:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    1334:	80 e3       	ldi	r24, 0x30	; 48
    1336:	9a e0       	ldi	r25, 0x0A	; 10
    1338:	49 16       	cp	r4, r25
    133a:	51 04       	cpc	r5, r1
    133c:	2c f0       	brlt	.+10     	; 0x1348 <vfprintf+0x3c6>
    133e:	8f 5f       	subi	r24, 0xFF	; 255
    1340:	5a e0       	ldi	r21, 0x0A	; 10
    1342:	45 1a       	sub	r4, r21
    1344:	51 08       	sbc	r5, r1
    1346:	f7 cf       	rjmp	.-18     	; 0x1336 <vfprintf+0x3b4>
    1348:	b6 01       	movw	r22, r12
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    1350:	b6 01       	movw	r22, r12
    1352:	c2 01       	movw	r24, r4
    1354:	c0 96       	adiw	r24, 0x30	; 48
    1356:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    135a:	57 c1       	rjmp	.+686    	; 0x160a <vfprintf+0x688>
    135c:	83 36       	cpi	r24, 0x63	; 99
    135e:	31 f0       	breq	.+12     	; 0x136c <vfprintf+0x3ea>
    1360:	83 37       	cpi	r24, 0x73	; 115
    1362:	79 f0       	breq	.+30     	; 0x1382 <vfprintf+0x400>
    1364:	83 35       	cpi	r24, 0x53	; 83
    1366:	09 f0       	breq	.+2      	; 0x136a <vfprintf+0x3e8>
    1368:	58 c0       	rjmp	.+176    	; 0x141a <vfprintf+0x498>
    136a:	21 c0       	rjmp	.+66     	; 0x13ae <vfprintf+0x42c>
    136c:	52 01       	movw	r10, r4
    136e:	e2 e0       	ldi	r30, 0x02	; 2
    1370:	ae 0e       	add	r10, r30
    1372:	b1 1c       	adc	r11, r1
    1374:	f2 01       	movw	r30, r4
    1376:	80 81       	ld	r24, Z
    1378:	89 83       	std	Y+1, r24	; 0x01
    137a:	01 e0       	ldi	r16, 0x01	; 1
    137c:	10 e0       	ldi	r17, 0x00	; 0
    137e:	23 01       	movw	r4, r6
    1380:	14 c0       	rjmp	.+40     	; 0x13aa <vfprintf+0x428>
    1382:	52 01       	movw	r10, r4
    1384:	f2 e0       	ldi	r31, 0x02	; 2
    1386:	af 0e       	add	r10, r31
    1388:	b1 1c       	adc	r11, r1
    138a:	f2 01       	movw	r30, r4
    138c:	40 80       	ld	r4, Z
    138e:	51 80       	ldd	r5, Z+1	; 0x01
    1390:	26 ff       	sbrs	r18, 6
    1392:	03 c0       	rjmp	.+6      	; 0x139a <vfprintf+0x418>
    1394:	61 2f       	mov	r22, r17
    1396:	70 e0       	ldi	r23, 0x00	; 0
    1398:	02 c0       	rjmp	.+4      	; 0x139e <vfprintf+0x41c>
    139a:	6f ef       	ldi	r22, 0xFF	; 255
    139c:	7f ef       	ldi	r23, 0xFF	; 255
    139e:	c2 01       	movw	r24, r4
    13a0:	2a 8b       	std	Y+18, r18	; 0x12
    13a2:	0e 94 57 0c 	call	0x18ae	; 0x18ae <strnlen>
    13a6:	8c 01       	movw	r16, r24
    13a8:	2a 89       	ldd	r18, Y+18	; 0x12
    13aa:	2f 77       	andi	r18, 0x7F	; 127
    13ac:	15 c0       	rjmp	.+42     	; 0x13d8 <vfprintf+0x456>
    13ae:	52 01       	movw	r10, r4
    13b0:	f2 e0       	ldi	r31, 0x02	; 2
    13b2:	af 0e       	add	r10, r31
    13b4:	b1 1c       	adc	r11, r1
    13b6:	f2 01       	movw	r30, r4
    13b8:	40 80       	ld	r4, Z
    13ba:	51 80       	ldd	r5, Z+1	; 0x01
    13bc:	26 ff       	sbrs	r18, 6
    13be:	03 c0       	rjmp	.+6      	; 0x13c6 <vfprintf+0x444>
    13c0:	61 2f       	mov	r22, r17
    13c2:	70 e0       	ldi	r23, 0x00	; 0
    13c4:	02 c0       	rjmp	.+4      	; 0x13ca <vfprintf+0x448>
    13c6:	6f ef       	ldi	r22, 0xFF	; 255
    13c8:	7f ef       	ldi	r23, 0xFF	; 255
    13ca:	c2 01       	movw	r24, r4
    13cc:	2a 8b       	std	Y+18, r18	; 0x12
    13ce:	0e 94 4c 0c 	call	0x1898	; 0x1898 <strnlen_P>
    13d2:	8c 01       	movw	r16, r24
    13d4:	2a 89       	ldd	r18, Y+18	; 0x12
    13d6:	20 68       	ori	r18, 0x80	; 128
    13d8:	32 2e       	mov	r3, r18
    13da:	23 fd       	sbrc	r18, 3
    13dc:	1a c0       	rjmp	.+52     	; 0x1412 <vfprintf+0x490>
    13de:	8f 2d       	mov	r24, r15
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	08 17       	cp	r16, r24
    13e4:	19 07       	cpc	r17, r25
    13e6:	a8 f4       	brcc	.+42     	; 0x1412 <vfprintf+0x490>
    13e8:	b6 01       	movw	r22, r12
    13ea:	80 e2       	ldi	r24, 0x20	; 32
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    13f2:	fa 94       	dec	r15
    13f4:	f4 cf       	rjmp	.-24     	; 0x13de <vfprintf+0x45c>
    13f6:	f2 01       	movw	r30, r4
    13f8:	37 fc       	sbrc	r3, 7
    13fa:	85 91       	lpm	r24, Z+
    13fc:	37 fe       	sbrs	r3, 7
    13fe:	81 91       	ld	r24, Z+
    1400:	2f 01       	movw	r4, r30
    1402:	b6 01       	movw	r22, r12
    1404:	90 e0       	ldi	r25, 0x00	; 0
    1406:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    140a:	f1 10       	cpse	r15, r1
    140c:	fa 94       	dec	r15
    140e:	01 50       	subi	r16, 0x01	; 1
    1410:	11 09       	sbc	r17, r1
    1412:	01 15       	cp	r16, r1
    1414:	11 05       	cpc	r17, r1
    1416:	79 f7       	brne	.-34     	; 0x13f6 <vfprintf+0x474>
    1418:	f8 c0       	rjmp	.+496    	; 0x160a <vfprintf+0x688>
    141a:	84 36       	cpi	r24, 0x64	; 100
    141c:	11 f0       	breq	.+4      	; 0x1422 <vfprintf+0x4a0>
    141e:	89 36       	cpi	r24, 0x69	; 105
    1420:	59 f5       	brne	.+86     	; 0x1478 <vfprintf+0x4f6>
    1422:	52 01       	movw	r10, r4
    1424:	27 ff       	sbrs	r18, 7
    1426:	09 c0       	rjmp	.+18     	; 0x143a <vfprintf+0x4b8>
    1428:	f4 e0       	ldi	r31, 0x04	; 4
    142a:	af 0e       	add	r10, r31
    142c:	b1 1c       	adc	r11, r1
    142e:	f2 01       	movw	r30, r4
    1430:	60 81       	ld	r22, Z
    1432:	71 81       	ldd	r23, Z+1	; 0x01
    1434:	82 81       	ldd	r24, Z+2	; 0x02
    1436:	93 81       	ldd	r25, Z+3	; 0x03
    1438:	0a c0       	rjmp	.+20     	; 0x144e <vfprintf+0x4cc>
    143a:	f2 e0       	ldi	r31, 0x02	; 2
    143c:	af 0e       	add	r10, r31
    143e:	b1 1c       	adc	r11, r1
    1440:	f2 01       	movw	r30, r4
    1442:	60 81       	ld	r22, Z
    1444:	71 81       	ldd	r23, Z+1	; 0x01
    1446:	07 2e       	mov	r0, r23
    1448:	00 0c       	add	r0, r0
    144a:	88 0b       	sbc	r24, r24
    144c:	99 0b       	sbc	r25, r25
    144e:	2f 76       	andi	r18, 0x6F	; 111
    1450:	32 2e       	mov	r3, r18
    1452:	97 ff       	sbrs	r25, 7
    1454:	09 c0       	rjmp	.+18     	; 0x1468 <vfprintf+0x4e6>
    1456:	90 95       	com	r25
    1458:	80 95       	com	r24
    145a:	70 95       	com	r23
    145c:	61 95       	neg	r22
    145e:	7f 4f       	sbci	r23, 0xFF	; 255
    1460:	8f 4f       	sbci	r24, 0xFF	; 255
    1462:	9f 4f       	sbci	r25, 0xFF	; 255
    1464:	20 68       	ori	r18, 0x80	; 128
    1466:	32 2e       	mov	r3, r18
    1468:	2a e0       	ldi	r18, 0x0A	; 10
    146a:	30 e0       	ldi	r19, 0x00	; 0
    146c:	a3 01       	movw	r20, r6
    146e:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__ultoa_invert>
    1472:	e8 2e       	mov	r14, r24
    1474:	e6 18       	sub	r14, r6
    1476:	3f c0       	rjmp	.+126    	; 0x14f6 <vfprintf+0x574>
    1478:	02 2f       	mov	r16, r18
    147a:	85 37       	cpi	r24, 0x75	; 117
    147c:	21 f4       	brne	.+8      	; 0x1486 <vfprintf+0x504>
    147e:	0f 7e       	andi	r16, 0xEF	; 239
    1480:	2a e0       	ldi	r18, 0x0A	; 10
    1482:	30 e0       	ldi	r19, 0x00	; 0
    1484:	1d c0       	rjmp	.+58     	; 0x14c0 <vfprintf+0x53e>
    1486:	09 7f       	andi	r16, 0xF9	; 249
    1488:	8f 36       	cpi	r24, 0x6F	; 111
    148a:	91 f0       	breq	.+36     	; 0x14b0 <vfprintf+0x52e>
    148c:	18 f4       	brcc	.+6      	; 0x1494 <vfprintf+0x512>
    148e:	88 35       	cpi	r24, 0x58	; 88
    1490:	59 f0       	breq	.+22     	; 0x14a8 <vfprintf+0x526>
    1492:	c5 c0       	rjmp	.+394    	; 0x161e <vfprintf+0x69c>
    1494:	80 37       	cpi	r24, 0x70	; 112
    1496:	19 f0       	breq	.+6      	; 0x149e <vfprintf+0x51c>
    1498:	88 37       	cpi	r24, 0x78	; 120
    149a:	11 f0       	breq	.+4      	; 0x14a0 <vfprintf+0x51e>
    149c:	c0 c0       	rjmp	.+384    	; 0x161e <vfprintf+0x69c>
    149e:	00 61       	ori	r16, 0x10	; 16
    14a0:	04 ff       	sbrs	r16, 4
    14a2:	09 c0       	rjmp	.+18     	; 0x14b6 <vfprintf+0x534>
    14a4:	04 60       	ori	r16, 0x04	; 4
    14a6:	07 c0       	rjmp	.+14     	; 0x14b6 <vfprintf+0x534>
    14a8:	24 ff       	sbrs	r18, 4
    14aa:	08 c0       	rjmp	.+16     	; 0x14bc <vfprintf+0x53a>
    14ac:	06 60       	ori	r16, 0x06	; 6
    14ae:	06 c0       	rjmp	.+12     	; 0x14bc <vfprintf+0x53a>
    14b0:	28 e0       	ldi	r18, 0x08	; 8
    14b2:	30 e0       	ldi	r19, 0x00	; 0
    14b4:	05 c0       	rjmp	.+10     	; 0x14c0 <vfprintf+0x53e>
    14b6:	20 e1       	ldi	r18, 0x10	; 16
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	02 c0       	rjmp	.+4      	; 0x14c0 <vfprintf+0x53e>
    14bc:	20 e1       	ldi	r18, 0x10	; 16
    14be:	32 e0       	ldi	r19, 0x02	; 2
    14c0:	52 01       	movw	r10, r4
    14c2:	07 ff       	sbrs	r16, 7
    14c4:	09 c0       	rjmp	.+18     	; 0x14d8 <vfprintf+0x556>
    14c6:	f4 e0       	ldi	r31, 0x04	; 4
    14c8:	af 0e       	add	r10, r31
    14ca:	b1 1c       	adc	r11, r1
    14cc:	f2 01       	movw	r30, r4
    14ce:	60 81       	ld	r22, Z
    14d0:	71 81       	ldd	r23, Z+1	; 0x01
    14d2:	82 81       	ldd	r24, Z+2	; 0x02
    14d4:	93 81       	ldd	r25, Z+3	; 0x03
    14d6:	08 c0       	rjmp	.+16     	; 0x14e8 <vfprintf+0x566>
    14d8:	f2 e0       	ldi	r31, 0x02	; 2
    14da:	af 0e       	add	r10, r31
    14dc:	b1 1c       	adc	r11, r1
    14de:	f2 01       	movw	r30, r4
    14e0:	60 81       	ld	r22, Z
    14e2:	71 81       	ldd	r23, Z+1	; 0x01
    14e4:	80 e0       	ldi	r24, 0x00	; 0
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	a3 01       	movw	r20, r6
    14ea:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__ultoa_invert>
    14ee:	e8 2e       	mov	r14, r24
    14f0:	e6 18       	sub	r14, r6
    14f2:	0f 77       	andi	r16, 0x7F	; 127
    14f4:	30 2e       	mov	r3, r16
    14f6:	36 fe       	sbrs	r3, 6
    14f8:	0b c0       	rjmp	.+22     	; 0x1510 <vfprintf+0x58e>
    14fa:	33 2d       	mov	r19, r3
    14fc:	3e 7f       	andi	r19, 0xFE	; 254
    14fe:	e1 16       	cp	r14, r17
    1500:	50 f4       	brcc	.+20     	; 0x1516 <vfprintf+0x594>
    1502:	34 fe       	sbrs	r3, 4
    1504:	0a c0       	rjmp	.+20     	; 0x151a <vfprintf+0x598>
    1506:	32 fc       	sbrc	r3, 2
    1508:	08 c0       	rjmp	.+16     	; 0x151a <vfprintf+0x598>
    150a:	33 2d       	mov	r19, r3
    150c:	3e 7e       	andi	r19, 0xEE	; 238
    150e:	05 c0       	rjmp	.+10     	; 0x151a <vfprintf+0x598>
    1510:	0e 2d       	mov	r16, r14
    1512:	33 2d       	mov	r19, r3
    1514:	03 c0       	rjmp	.+6      	; 0x151c <vfprintf+0x59a>
    1516:	0e 2d       	mov	r16, r14
    1518:	01 c0       	rjmp	.+2      	; 0x151c <vfprintf+0x59a>
    151a:	01 2f       	mov	r16, r17
    151c:	34 ff       	sbrs	r19, 4
    151e:	0c c0       	rjmp	.+24     	; 0x1538 <vfprintf+0x5b6>
    1520:	fe 01       	movw	r30, r28
    1522:	ee 0d       	add	r30, r14
    1524:	f1 1d       	adc	r31, r1
    1526:	80 81       	ld	r24, Z
    1528:	80 33       	cpi	r24, 0x30	; 48
    152a:	11 f4       	brne	.+4      	; 0x1530 <vfprintf+0x5ae>
    152c:	39 7e       	andi	r19, 0xE9	; 233
    152e:	08 c0       	rjmp	.+16     	; 0x1540 <vfprintf+0x5be>
    1530:	32 ff       	sbrs	r19, 2
    1532:	05 c0       	rjmp	.+10     	; 0x153e <vfprintf+0x5bc>
    1534:	0e 5f       	subi	r16, 0xFE	; 254
    1536:	04 c0       	rjmp	.+8      	; 0x1540 <vfprintf+0x5be>
    1538:	83 2f       	mov	r24, r19
    153a:	86 78       	andi	r24, 0x86	; 134
    153c:	09 f0       	breq	.+2      	; 0x1540 <vfprintf+0x5be>
    153e:	0f 5f       	subi	r16, 0xFF	; 255
    1540:	33 fd       	sbrc	r19, 3
    1542:	13 c0       	rjmp	.+38     	; 0x156a <vfprintf+0x5e8>
    1544:	30 ff       	sbrs	r19, 0
    1546:	06 c0       	rjmp	.+12     	; 0x1554 <vfprintf+0x5d2>
    1548:	1e 2d       	mov	r17, r14
    154a:	0f 15       	cp	r16, r15
    154c:	18 f4       	brcc	.+6      	; 0x1554 <vfprintf+0x5d2>
    154e:	1f 0d       	add	r17, r15
    1550:	10 1b       	sub	r17, r16
    1552:	0f 2d       	mov	r16, r15
    1554:	0f 15       	cp	r16, r15
    1556:	68 f4       	brcc	.+26     	; 0x1572 <vfprintf+0x5f0>
    1558:	b6 01       	movw	r22, r12
    155a:	80 e2       	ldi	r24, 0x20	; 32
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	3b 8b       	std	Y+19, r19	; 0x13
    1560:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    1564:	0f 5f       	subi	r16, 0xFF	; 255
    1566:	3b 89       	ldd	r19, Y+19	; 0x13
    1568:	f5 cf       	rjmp	.-22     	; 0x1554 <vfprintf+0x5d2>
    156a:	0f 15       	cp	r16, r15
    156c:	10 f4       	brcc	.+4      	; 0x1572 <vfprintf+0x5f0>
    156e:	f0 1a       	sub	r15, r16
    1570:	01 c0       	rjmp	.+2      	; 0x1574 <vfprintf+0x5f2>
    1572:	f1 2c       	mov	r15, r1
    1574:	34 ff       	sbrs	r19, 4
    1576:	12 c0       	rjmp	.+36     	; 0x159c <vfprintf+0x61a>
    1578:	b6 01       	movw	r22, r12
    157a:	80 e3       	ldi	r24, 0x30	; 48
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	3b 8b       	std	Y+19, r19	; 0x13
    1580:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    1584:	3b 89       	ldd	r19, Y+19	; 0x13
    1586:	32 ff       	sbrs	r19, 2
    1588:	17 c0       	rjmp	.+46     	; 0x15b8 <vfprintf+0x636>
    158a:	31 fd       	sbrc	r19, 1
    158c:	03 c0       	rjmp	.+6      	; 0x1594 <vfprintf+0x612>
    158e:	88 e7       	ldi	r24, 0x78	; 120
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	02 c0       	rjmp	.+4      	; 0x1598 <vfprintf+0x616>
    1594:	88 e5       	ldi	r24, 0x58	; 88
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	b6 01       	movw	r22, r12
    159a:	0c c0       	rjmp	.+24     	; 0x15b4 <vfprintf+0x632>
    159c:	83 2f       	mov	r24, r19
    159e:	86 78       	andi	r24, 0x86	; 134
    15a0:	59 f0       	breq	.+22     	; 0x15b8 <vfprintf+0x636>
    15a2:	31 ff       	sbrs	r19, 1
    15a4:	02 c0       	rjmp	.+4      	; 0x15aa <vfprintf+0x628>
    15a6:	8b e2       	ldi	r24, 0x2B	; 43
    15a8:	01 c0       	rjmp	.+2      	; 0x15ac <vfprintf+0x62a>
    15aa:	80 e2       	ldi	r24, 0x20	; 32
    15ac:	37 fd       	sbrc	r19, 7
    15ae:	8d e2       	ldi	r24, 0x2D	; 45
    15b0:	b6 01       	movw	r22, r12
    15b2:	90 e0       	ldi	r25, 0x00	; 0
    15b4:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    15b8:	e1 16       	cp	r14, r17
    15ba:	38 f4       	brcc	.+14     	; 0x15ca <vfprintf+0x648>
    15bc:	b6 01       	movw	r22, r12
    15be:	80 e3       	ldi	r24, 0x30	; 48
    15c0:	90 e0       	ldi	r25, 0x00	; 0
    15c2:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    15c6:	11 50       	subi	r17, 0x01	; 1
    15c8:	f7 cf       	rjmp	.-18     	; 0x15b8 <vfprintf+0x636>
    15ca:	ea 94       	dec	r14
    15cc:	f3 01       	movw	r30, r6
    15ce:	ee 0d       	add	r30, r14
    15d0:	f1 1d       	adc	r31, r1
    15d2:	80 81       	ld	r24, Z
    15d4:	b6 01       	movw	r22, r12
    15d6:	90 e0       	ldi	r25, 0x00	; 0
    15d8:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    15dc:	e1 10       	cpse	r14, r1
    15de:	f5 cf       	rjmp	.-22     	; 0x15ca <vfprintf+0x648>
    15e0:	14 c0       	rjmp	.+40     	; 0x160a <vfprintf+0x688>
    15e2:	f4 e0       	ldi	r31, 0x04	; 4
    15e4:	ff 15       	cp	r31, r15
    15e6:	58 f5       	brcc	.+86     	; 0x163e <vfprintf+0x6bc>
    15e8:	84 e0       	ldi	r24, 0x04	; 4
    15ea:	f8 1a       	sub	r15, r24
    15ec:	33 fe       	sbrs	r3, 3
    15ee:	1e c0       	rjmp	.+60     	; 0x162c <vfprintf+0x6aa>
    15f0:	21 10       	cpse	r2, r1
    15f2:	26 c0       	rjmp	.+76     	; 0x1640 <vfprintf+0x6be>
    15f4:	03 ff       	sbrs	r16, 3
    15f6:	2a c0       	rjmp	.+84     	; 0x164c <vfprintf+0x6ca>
    15f8:	06 e9       	ldi	r16, 0x96	; 150
    15fa:	10 e0       	ldi	r17, 0x00	; 0
    15fc:	f3 2d       	mov	r31, r3
    15fe:	f0 71       	andi	r31, 0x10	; 16
    1600:	3f 2e       	mov	r3, r31
    1602:	f8 01       	movw	r30, r16
    1604:	84 91       	lpm	r24, Z
    1606:	81 11       	cpse	r24, r1
    1608:	24 c0       	rjmp	.+72     	; 0x1652 <vfprintf+0x6d0>
    160a:	ff 20       	and	r15, r15
    160c:	09 f4       	brne	.+2      	; 0x1610 <vfprintf+0x68e>
    160e:	e5 cc       	rjmp	.-1590   	; 0xfda <vfprintf+0x58>
    1610:	b6 01       	movw	r22, r12
    1612:	80 e2       	ldi	r24, 0x20	; 32
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    161a:	fa 94       	dec	r15
    161c:	f6 cf       	rjmp	.-20     	; 0x160a <vfprintf+0x688>
    161e:	f6 01       	movw	r30, r12
    1620:	86 81       	ldd	r24, Z+6	; 0x06
    1622:	97 81       	ldd	r25, Z+7	; 0x07
    1624:	26 c0       	rjmp	.+76     	; 0x1672 <vfprintf+0x6f0>
    1626:	8f ef       	ldi	r24, 0xFF	; 255
    1628:	9f ef       	ldi	r25, 0xFF	; 255
    162a:	23 c0       	rjmp	.+70     	; 0x1672 <vfprintf+0x6f0>
    162c:	b6 01       	movw	r22, r12
    162e:	80 e2       	ldi	r24, 0x20	; 32
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    1636:	fa 94       	dec	r15
    1638:	f1 10       	cpse	r15, r1
    163a:	f8 cf       	rjmp	.-16     	; 0x162c <vfprintf+0x6aa>
    163c:	d9 cf       	rjmp	.-78     	; 0x15f0 <vfprintf+0x66e>
    163e:	f1 2c       	mov	r15, r1
    1640:	b6 01       	movw	r22, r12
    1642:	82 2d       	mov	r24, r2
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    164a:	d4 cf       	rjmp	.-88     	; 0x15f4 <vfprintf+0x672>
    164c:	0a e9       	ldi	r16, 0x9A	; 154
    164e:	10 e0       	ldi	r17, 0x00	; 0
    1650:	d5 cf       	rjmp	.-86     	; 0x15fc <vfprintf+0x67a>
    1652:	31 10       	cpse	r3, r1
    1654:	80 52       	subi	r24, 0x20	; 32
    1656:	b6 01       	movw	r22, r12
    1658:	90 e0       	ldi	r25, 0x00	; 0
    165a:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <fputc>
    165e:	0f 5f       	subi	r16, 0xFF	; 255
    1660:	1f 4f       	sbci	r17, 0xFF	; 255
    1662:	cf cf       	rjmp	.-98     	; 0x1602 <vfprintf+0x680>
    1664:	23 e0       	ldi	r18, 0x03	; 3
    1666:	2f 15       	cp	r18, r15
    1668:	10 f4       	brcc	.+4      	; 0x166e <vfprintf+0x6ec>
    166a:	83 e0       	ldi	r24, 0x03	; 3
    166c:	be cf       	rjmp	.-132    	; 0x15ea <vfprintf+0x668>
    166e:	f1 2c       	mov	r15, r1
    1670:	c1 cf       	rjmp	.-126    	; 0x15f4 <vfprintf+0x672>
    1672:	63 96       	adiw	r28, 0x13	; 19
    1674:	e2 e1       	ldi	r30, 0x12	; 18
    1676:	0c 94 59 0b 	jmp	0x16b2	; 0x16b2 <__epilogue_restores__>

0000167a <__prologue_saves__>:
    167a:	2f 92       	push	r2
    167c:	3f 92       	push	r3
    167e:	4f 92       	push	r4
    1680:	5f 92       	push	r5
    1682:	6f 92       	push	r6
    1684:	7f 92       	push	r7
    1686:	8f 92       	push	r8
    1688:	9f 92       	push	r9
    168a:	af 92       	push	r10
    168c:	bf 92       	push	r11
    168e:	cf 92       	push	r12
    1690:	df 92       	push	r13
    1692:	ef 92       	push	r14
    1694:	ff 92       	push	r15
    1696:	0f 93       	push	r16
    1698:	1f 93       	push	r17
    169a:	cf 93       	push	r28
    169c:	df 93       	push	r29
    169e:	cd b7       	in	r28, 0x3d	; 61
    16a0:	de b7       	in	r29, 0x3e	; 62
    16a2:	ca 1b       	sub	r28, r26
    16a4:	db 0b       	sbc	r29, r27
    16a6:	0f b6       	in	r0, 0x3f	; 63
    16a8:	f8 94       	cli
    16aa:	de bf       	out	0x3e, r29	; 62
    16ac:	0f be       	out	0x3f, r0	; 63
    16ae:	cd bf       	out	0x3d, r28	; 61
    16b0:	09 94       	ijmp

000016b2 <__epilogue_restores__>:
    16b2:	2a 88       	ldd	r2, Y+18	; 0x12
    16b4:	39 88       	ldd	r3, Y+17	; 0x11
    16b6:	48 88       	ldd	r4, Y+16	; 0x10
    16b8:	5f 84       	ldd	r5, Y+15	; 0x0f
    16ba:	6e 84       	ldd	r6, Y+14	; 0x0e
    16bc:	7d 84       	ldd	r7, Y+13	; 0x0d
    16be:	8c 84       	ldd	r8, Y+12	; 0x0c
    16c0:	9b 84       	ldd	r9, Y+11	; 0x0b
    16c2:	aa 84       	ldd	r10, Y+10	; 0x0a
    16c4:	b9 84       	ldd	r11, Y+9	; 0x09
    16c6:	c8 84       	ldd	r12, Y+8	; 0x08
    16c8:	df 80       	ldd	r13, Y+7	; 0x07
    16ca:	ee 80       	ldd	r14, Y+6	; 0x06
    16cc:	fd 80       	ldd	r15, Y+5	; 0x05
    16ce:	0c 81       	ldd	r16, Y+4	; 0x04
    16d0:	1b 81       	ldd	r17, Y+3	; 0x03
    16d2:	aa 81       	ldd	r26, Y+2	; 0x02
    16d4:	b9 81       	ldd	r27, Y+1	; 0x01
    16d6:	ce 0f       	add	r28, r30
    16d8:	d1 1d       	adc	r29, r1
    16da:	0f b6       	in	r0, 0x3f	; 63
    16dc:	f8 94       	cli
    16de:	de bf       	out	0x3e, r29	; 62
    16e0:	0f be       	out	0x3f, r0	; 63
    16e2:	cd bf       	out	0x3d, r28	; 61
    16e4:	ed 01       	movw	r28, r26
    16e6:	08 95       	ret

000016e8 <__ftoa_engine>:
    16e8:	28 30       	cpi	r18, 0x08	; 8
    16ea:	08 f0       	brcs	.+2      	; 0x16ee <__ftoa_engine+0x6>
    16ec:	27 e0       	ldi	r18, 0x07	; 7
    16ee:	33 27       	eor	r19, r19
    16f0:	da 01       	movw	r26, r20
    16f2:	99 0f       	add	r25, r25
    16f4:	31 1d       	adc	r19, r1
    16f6:	87 fd       	sbrc	r24, 7
    16f8:	91 60       	ori	r25, 0x01	; 1
    16fa:	00 96       	adiw	r24, 0x00	; 0
    16fc:	61 05       	cpc	r22, r1
    16fe:	71 05       	cpc	r23, r1
    1700:	39 f4       	brne	.+14     	; 0x1710 <__ftoa_engine+0x28>
    1702:	32 60       	ori	r19, 0x02	; 2
    1704:	2e 5f       	subi	r18, 0xFE	; 254
    1706:	3d 93       	st	X+, r19
    1708:	30 e3       	ldi	r19, 0x30	; 48
    170a:	2a 95       	dec	r18
    170c:	e1 f7       	brne	.-8      	; 0x1706 <__ftoa_engine+0x1e>
    170e:	08 95       	ret
    1710:	9f 3f       	cpi	r25, 0xFF	; 255
    1712:	30 f0       	brcs	.+12     	; 0x1720 <__ftoa_engine+0x38>
    1714:	80 38       	cpi	r24, 0x80	; 128
    1716:	71 05       	cpc	r23, r1
    1718:	61 05       	cpc	r22, r1
    171a:	09 f0       	breq	.+2      	; 0x171e <__ftoa_engine+0x36>
    171c:	3c 5f       	subi	r19, 0xFC	; 252
    171e:	3c 5f       	subi	r19, 0xFC	; 252
    1720:	3d 93       	st	X+, r19
    1722:	91 30       	cpi	r25, 0x01	; 1
    1724:	08 f0       	brcs	.+2      	; 0x1728 <__ftoa_engine+0x40>
    1726:	80 68       	ori	r24, 0x80	; 128
    1728:	91 1d       	adc	r25, r1
    172a:	df 93       	push	r29
    172c:	cf 93       	push	r28
    172e:	1f 93       	push	r17
    1730:	0f 93       	push	r16
    1732:	ff 92       	push	r15
    1734:	ef 92       	push	r14
    1736:	19 2f       	mov	r17, r25
    1738:	98 7f       	andi	r25, 0xF8	; 248
    173a:	96 95       	lsr	r25
    173c:	e9 2f       	mov	r30, r25
    173e:	96 95       	lsr	r25
    1740:	96 95       	lsr	r25
    1742:	e9 0f       	add	r30, r25
    1744:	ff 27       	eor	r31, r31
    1746:	e8 50       	subi	r30, 0x08	; 8
    1748:	ff 4f       	sbci	r31, 0xFF	; 255
    174a:	99 27       	eor	r25, r25
    174c:	33 27       	eor	r19, r19
    174e:	ee 24       	eor	r14, r14
    1750:	ff 24       	eor	r15, r15
    1752:	a7 01       	movw	r20, r14
    1754:	e7 01       	movw	r28, r14
    1756:	05 90       	lpm	r0, Z+
    1758:	08 94       	sec
    175a:	07 94       	ror	r0
    175c:	28 f4       	brcc	.+10     	; 0x1768 <__ftoa_engine+0x80>
    175e:	36 0f       	add	r19, r22
    1760:	e7 1e       	adc	r14, r23
    1762:	f8 1e       	adc	r15, r24
    1764:	49 1f       	adc	r20, r25
    1766:	51 1d       	adc	r21, r1
    1768:	66 0f       	add	r22, r22
    176a:	77 1f       	adc	r23, r23
    176c:	88 1f       	adc	r24, r24
    176e:	99 1f       	adc	r25, r25
    1770:	06 94       	lsr	r0
    1772:	a1 f7       	brne	.-24     	; 0x175c <__ftoa_engine+0x74>
    1774:	05 90       	lpm	r0, Z+
    1776:	07 94       	ror	r0
    1778:	28 f4       	brcc	.+10     	; 0x1784 <__ftoa_engine+0x9c>
    177a:	e7 0e       	add	r14, r23
    177c:	f8 1e       	adc	r15, r24
    177e:	49 1f       	adc	r20, r25
    1780:	56 1f       	adc	r21, r22
    1782:	c1 1d       	adc	r28, r1
    1784:	77 0f       	add	r23, r23
    1786:	88 1f       	adc	r24, r24
    1788:	99 1f       	adc	r25, r25
    178a:	66 1f       	adc	r22, r22
    178c:	06 94       	lsr	r0
    178e:	a1 f7       	brne	.-24     	; 0x1778 <__ftoa_engine+0x90>
    1790:	05 90       	lpm	r0, Z+
    1792:	07 94       	ror	r0
    1794:	28 f4       	brcc	.+10     	; 0x17a0 <__ftoa_engine+0xb8>
    1796:	f8 0e       	add	r15, r24
    1798:	49 1f       	adc	r20, r25
    179a:	56 1f       	adc	r21, r22
    179c:	c7 1f       	adc	r28, r23
    179e:	d1 1d       	adc	r29, r1
    17a0:	88 0f       	add	r24, r24
    17a2:	99 1f       	adc	r25, r25
    17a4:	66 1f       	adc	r22, r22
    17a6:	77 1f       	adc	r23, r23
    17a8:	06 94       	lsr	r0
    17aa:	a1 f7       	brne	.-24     	; 0x1794 <__ftoa_engine+0xac>
    17ac:	05 90       	lpm	r0, Z+
    17ae:	07 94       	ror	r0
    17b0:	20 f4       	brcc	.+8      	; 0x17ba <__ftoa_engine+0xd2>
    17b2:	49 0f       	add	r20, r25
    17b4:	56 1f       	adc	r21, r22
    17b6:	c7 1f       	adc	r28, r23
    17b8:	d8 1f       	adc	r29, r24
    17ba:	99 0f       	add	r25, r25
    17bc:	66 1f       	adc	r22, r22
    17be:	77 1f       	adc	r23, r23
    17c0:	88 1f       	adc	r24, r24
    17c2:	06 94       	lsr	r0
    17c4:	a9 f7       	brne	.-22     	; 0x17b0 <__ftoa_engine+0xc8>
    17c6:	84 91       	lpm	r24, Z
    17c8:	10 95       	com	r17
    17ca:	17 70       	andi	r17, 0x07	; 7
    17cc:	41 f0       	breq	.+16     	; 0x17de <__ftoa_engine+0xf6>
    17ce:	d6 95       	lsr	r29
    17d0:	c7 95       	ror	r28
    17d2:	57 95       	ror	r21
    17d4:	47 95       	ror	r20
    17d6:	f7 94       	ror	r15
    17d8:	e7 94       	ror	r14
    17da:	1a 95       	dec	r17
    17dc:	c1 f7       	brne	.-16     	; 0x17ce <__ftoa_engine+0xe6>
    17de:	ee e9       	ldi	r30, 0x9E	; 158
    17e0:	f0 e0       	ldi	r31, 0x00	; 0
    17e2:	68 94       	set
    17e4:	15 90       	lpm	r1, Z+
    17e6:	15 91       	lpm	r17, Z+
    17e8:	35 91       	lpm	r19, Z+
    17ea:	65 91       	lpm	r22, Z+
    17ec:	95 91       	lpm	r25, Z+
    17ee:	05 90       	lpm	r0, Z+
    17f0:	7f e2       	ldi	r23, 0x2F	; 47
    17f2:	73 95       	inc	r23
    17f4:	e1 18       	sub	r14, r1
    17f6:	f1 0a       	sbc	r15, r17
    17f8:	43 0b       	sbc	r20, r19
    17fa:	56 0b       	sbc	r21, r22
    17fc:	c9 0b       	sbc	r28, r25
    17fe:	d0 09       	sbc	r29, r0
    1800:	c0 f7       	brcc	.-16     	; 0x17f2 <__ftoa_engine+0x10a>
    1802:	e1 0c       	add	r14, r1
    1804:	f1 1e       	adc	r15, r17
    1806:	43 1f       	adc	r20, r19
    1808:	56 1f       	adc	r21, r22
    180a:	c9 1f       	adc	r28, r25
    180c:	d0 1d       	adc	r29, r0
    180e:	7e f4       	brtc	.+30     	; 0x182e <__ftoa_engine+0x146>
    1810:	70 33       	cpi	r23, 0x30	; 48
    1812:	11 f4       	brne	.+4      	; 0x1818 <__ftoa_engine+0x130>
    1814:	8a 95       	dec	r24
    1816:	e6 cf       	rjmp	.-52     	; 0x17e4 <__ftoa_engine+0xfc>
    1818:	e8 94       	clt
    181a:	01 50       	subi	r16, 0x01	; 1
    181c:	30 f0       	brcs	.+12     	; 0x182a <__ftoa_engine+0x142>
    181e:	08 0f       	add	r16, r24
    1820:	0a f4       	brpl	.+2      	; 0x1824 <__ftoa_engine+0x13c>
    1822:	00 27       	eor	r16, r16
    1824:	02 17       	cp	r16, r18
    1826:	08 f4       	brcc	.+2      	; 0x182a <__ftoa_engine+0x142>
    1828:	20 2f       	mov	r18, r16
    182a:	23 95       	inc	r18
    182c:	02 2f       	mov	r16, r18
    182e:	7a 33       	cpi	r23, 0x3A	; 58
    1830:	28 f0       	brcs	.+10     	; 0x183c <__ftoa_engine+0x154>
    1832:	79 e3       	ldi	r23, 0x39	; 57
    1834:	7d 93       	st	X+, r23
    1836:	2a 95       	dec	r18
    1838:	e9 f7       	brne	.-6      	; 0x1834 <__ftoa_engine+0x14c>
    183a:	10 c0       	rjmp	.+32     	; 0x185c <__ftoa_engine+0x174>
    183c:	7d 93       	st	X+, r23
    183e:	2a 95       	dec	r18
    1840:	89 f6       	brne	.-94     	; 0x17e4 <__ftoa_engine+0xfc>
    1842:	06 94       	lsr	r0
    1844:	97 95       	ror	r25
    1846:	67 95       	ror	r22
    1848:	37 95       	ror	r19
    184a:	17 95       	ror	r17
    184c:	17 94       	ror	r1
    184e:	e1 18       	sub	r14, r1
    1850:	f1 0a       	sbc	r15, r17
    1852:	43 0b       	sbc	r20, r19
    1854:	56 0b       	sbc	r21, r22
    1856:	c9 0b       	sbc	r28, r25
    1858:	d0 09       	sbc	r29, r0
    185a:	98 f0       	brcs	.+38     	; 0x1882 <__ftoa_engine+0x19a>
    185c:	23 95       	inc	r18
    185e:	7e 91       	ld	r23, -X
    1860:	73 95       	inc	r23
    1862:	7a 33       	cpi	r23, 0x3A	; 58
    1864:	08 f0       	brcs	.+2      	; 0x1868 <__ftoa_engine+0x180>
    1866:	70 e3       	ldi	r23, 0x30	; 48
    1868:	7c 93       	st	X, r23
    186a:	20 13       	cpse	r18, r16
    186c:	b8 f7       	brcc	.-18     	; 0x185c <__ftoa_engine+0x174>
    186e:	7e 91       	ld	r23, -X
    1870:	70 61       	ori	r23, 0x10	; 16
    1872:	7d 93       	st	X+, r23
    1874:	30 f0       	brcs	.+12     	; 0x1882 <__ftoa_engine+0x19a>
    1876:	83 95       	inc	r24
    1878:	71 e3       	ldi	r23, 0x31	; 49
    187a:	7d 93       	st	X+, r23
    187c:	70 e3       	ldi	r23, 0x30	; 48
    187e:	2a 95       	dec	r18
    1880:	e1 f7       	brne	.-8      	; 0x187a <__ftoa_engine+0x192>
    1882:	11 24       	eor	r1, r1
    1884:	ef 90       	pop	r14
    1886:	ff 90       	pop	r15
    1888:	0f 91       	pop	r16
    188a:	1f 91       	pop	r17
    188c:	cf 91       	pop	r28
    188e:	df 91       	pop	r29
    1890:	99 27       	eor	r25, r25
    1892:	87 fd       	sbrc	r24, 7
    1894:	90 95       	com	r25
    1896:	08 95       	ret

00001898 <strnlen_P>:
    1898:	fc 01       	movw	r30, r24
    189a:	05 90       	lpm	r0, Z+
    189c:	61 50       	subi	r22, 0x01	; 1
    189e:	70 40       	sbci	r23, 0x00	; 0
    18a0:	01 10       	cpse	r0, r1
    18a2:	d8 f7       	brcc	.-10     	; 0x189a <strnlen_P+0x2>
    18a4:	80 95       	com	r24
    18a6:	90 95       	com	r25
    18a8:	8e 0f       	add	r24, r30
    18aa:	9f 1f       	adc	r25, r31
    18ac:	08 95       	ret

000018ae <strnlen>:
    18ae:	fc 01       	movw	r30, r24
    18b0:	61 50       	subi	r22, 0x01	; 1
    18b2:	70 40       	sbci	r23, 0x00	; 0
    18b4:	01 90       	ld	r0, Z+
    18b6:	01 10       	cpse	r0, r1
    18b8:	d8 f7       	brcc	.-10     	; 0x18b0 <strnlen+0x2>
    18ba:	80 95       	com	r24
    18bc:	90 95       	com	r25
    18be:	8e 0f       	add	r24, r30
    18c0:	9f 1f       	adc	r25, r31
    18c2:	08 95       	ret

000018c4 <fputc>:
    18c4:	0f 93       	push	r16
    18c6:	1f 93       	push	r17
    18c8:	cf 93       	push	r28
    18ca:	df 93       	push	r29
    18cc:	fb 01       	movw	r30, r22
    18ce:	23 81       	ldd	r18, Z+3	; 0x03
    18d0:	21 fd       	sbrc	r18, 1
    18d2:	03 c0       	rjmp	.+6      	; 0x18da <fputc+0x16>
    18d4:	8f ef       	ldi	r24, 0xFF	; 255
    18d6:	9f ef       	ldi	r25, 0xFF	; 255
    18d8:	28 c0       	rjmp	.+80     	; 0x192a <fputc+0x66>
    18da:	22 ff       	sbrs	r18, 2
    18dc:	16 c0       	rjmp	.+44     	; 0x190a <fputc+0x46>
    18de:	46 81       	ldd	r20, Z+6	; 0x06
    18e0:	57 81       	ldd	r21, Z+7	; 0x07
    18e2:	24 81       	ldd	r18, Z+4	; 0x04
    18e4:	35 81       	ldd	r19, Z+5	; 0x05
    18e6:	42 17       	cp	r20, r18
    18e8:	53 07       	cpc	r21, r19
    18ea:	44 f4       	brge	.+16     	; 0x18fc <fputc+0x38>
    18ec:	a0 81       	ld	r26, Z
    18ee:	b1 81       	ldd	r27, Z+1	; 0x01
    18f0:	9d 01       	movw	r18, r26
    18f2:	2f 5f       	subi	r18, 0xFF	; 255
    18f4:	3f 4f       	sbci	r19, 0xFF	; 255
    18f6:	31 83       	std	Z+1, r19	; 0x01
    18f8:	20 83       	st	Z, r18
    18fa:	8c 93       	st	X, r24
    18fc:	26 81       	ldd	r18, Z+6	; 0x06
    18fe:	37 81       	ldd	r19, Z+7	; 0x07
    1900:	2f 5f       	subi	r18, 0xFF	; 255
    1902:	3f 4f       	sbci	r19, 0xFF	; 255
    1904:	37 83       	std	Z+7, r19	; 0x07
    1906:	26 83       	std	Z+6, r18	; 0x06
    1908:	10 c0       	rjmp	.+32     	; 0x192a <fputc+0x66>
    190a:	eb 01       	movw	r28, r22
    190c:	09 2f       	mov	r16, r25
    190e:	18 2f       	mov	r17, r24
    1910:	00 84       	ldd	r0, Z+8	; 0x08
    1912:	f1 85       	ldd	r31, Z+9	; 0x09
    1914:	e0 2d       	mov	r30, r0
    1916:	09 95       	icall
    1918:	89 2b       	or	r24, r25
    191a:	e1 f6       	brne	.-72     	; 0x18d4 <fputc+0x10>
    191c:	8e 81       	ldd	r24, Y+6	; 0x06
    191e:	9f 81       	ldd	r25, Y+7	; 0x07
    1920:	01 96       	adiw	r24, 0x01	; 1
    1922:	9f 83       	std	Y+7, r25	; 0x07
    1924:	8e 83       	std	Y+6, r24	; 0x06
    1926:	81 2f       	mov	r24, r17
    1928:	90 2f       	mov	r25, r16
    192a:	df 91       	pop	r29
    192c:	cf 91       	pop	r28
    192e:	1f 91       	pop	r17
    1930:	0f 91       	pop	r16
    1932:	08 95       	ret

00001934 <printf>:
    1934:	a0 e0       	ldi	r26, 0x00	; 0
    1936:	b0 e0       	ldi	r27, 0x00	; 0
    1938:	e0 ea       	ldi	r30, 0xA0	; 160
    193a:	fc e0       	ldi	r31, 0x0C	; 12
    193c:	0c 94 4d 0b 	jmp	0x169a	; 0x169a <__prologue_saves__+0x20>
    1940:	ae 01       	movw	r20, r28
    1942:	4b 5f       	subi	r20, 0xFB	; 251
    1944:	5f 4f       	sbci	r21, 0xFF	; 255
    1946:	fa 01       	movw	r30, r20
    1948:	61 91       	ld	r22, Z+
    194a:	71 91       	ld	r23, Z+
    194c:	af 01       	movw	r20, r30
    194e:	80 91 2a 01 	lds	r24, 0x012A
    1952:	90 91 2b 01 	lds	r25, 0x012B
    1956:	0e 94 c1 07 	call	0xf82	; 0xf82 <vfprintf>
    195a:	e2 e0       	ldi	r30, 0x02	; 2
    195c:	0c 94 69 0b 	jmp	0x16d2	; 0x16d2 <__epilogue_restores__+0x20>

00001960 <puts>:
    1960:	0f 93       	push	r16
    1962:	1f 93       	push	r17
    1964:	cf 93       	push	r28
    1966:	df 93       	push	r29
    1968:	e0 91 2a 01 	lds	r30, 0x012A
    196c:	f0 91 2b 01 	lds	r31, 0x012B
    1970:	23 81       	ldd	r18, Z+3	; 0x03
    1972:	21 ff       	sbrs	r18, 1
    1974:	1b c0       	rjmp	.+54     	; 0x19ac <puts+0x4c>
    1976:	8c 01       	movw	r16, r24
    1978:	d0 e0       	ldi	r29, 0x00	; 0
    197a:	c0 e0       	ldi	r28, 0x00	; 0
    197c:	f8 01       	movw	r30, r16
    197e:	81 91       	ld	r24, Z+
    1980:	8f 01       	movw	r16, r30
    1982:	60 91 2a 01 	lds	r22, 0x012A
    1986:	70 91 2b 01 	lds	r23, 0x012B
    198a:	db 01       	movw	r26, r22
    198c:	18 96       	adiw	r26, 0x08	; 8
    198e:	ed 91       	ld	r30, X+
    1990:	fc 91       	ld	r31, X
    1992:	19 97       	sbiw	r26, 0x09	; 9
    1994:	88 23       	and	r24, r24
    1996:	31 f0       	breq	.+12     	; 0x19a4 <puts+0x44>
    1998:	09 95       	icall
    199a:	89 2b       	or	r24, r25
    199c:	79 f3       	breq	.-34     	; 0x197c <puts+0x1c>
    199e:	df ef       	ldi	r29, 0xFF	; 255
    19a0:	cf ef       	ldi	r28, 0xFF	; 255
    19a2:	ec cf       	rjmp	.-40     	; 0x197c <puts+0x1c>
    19a4:	8a e0       	ldi	r24, 0x0A	; 10
    19a6:	09 95       	icall
    19a8:	89 2b       	or	r24, r25
    19aa:	19 f0       	breq	.+6      	; 0x19b2 <puts+0x52>
    19ac:	8f ef       	ldi	r24, 0xFF	; 255
    19ae:	9f ef       	ldi	r25, 0xFF	; 255
    19b0:	02 c0       	rjmp	.+4      	; 0x19b6 <puts+0x56>
    19b2:	8d 2f       	mov	r24, r29
    19b4:	9c 2f       	mov	r25, r28
    19b6:	df 91       	pop	r29
    19b8:	cf 91       	pop	r28
    19ba:	1f 91       	pop	r17
    19bc:	0f 91       	pop	r16
    19be:	08 95       	ret

000019c0 <__ultoa_invert>:
    19c0:	fa 01       	movw	r30, r20
    19c2:	aa 27       	eor	r26, r26
    19c4:	28 30       	cpi	r18, 0x08	; 8
    19c6:	51 f1       	breq	.+84     	; 0x1a1c <__ultoa_invert+0x5c>
    19c8:	20 31       	cpi	r18, 0x10	; 16
    19ca:	81 f1       	breq	.+96     	; 0x1a2c <__ultoa_invert+0x6c>
    19cc:	e8 94       	clt
    19ce:	6f 93       	push	r22
    19d0:	6e 7f       	andi	r22, 0xFE	; 254
    19d2:	6e 5f       	subi	r22, 0xFE	; 254
    19d4:	7f 4f       	sbci	r23, 0xFF	; 255
    19d6:	8f 4f       	sbci	r24, 0xFF	; 255
    19d8:	9f 4f       	sbci	r25, 0xFF	; 255
    19da:	af 4f       	sbci	r26, 0xFF	; 255
    19dc:	b1 e0       	ldi	r27, 0x01	; 1
    19de:	3e d0       	rcall	.+124    	; 0x1a5c <__ultoa_invert+0x9c>
    19e0:	b4 e0       	ldi	r27, 0x04	; 4
    19e2:	3c d0       	rcall	.+120    	; 0x1a5c <__ultoa_invert+0x9c>
    19e4:	67 0f       	add	r22, r23
    19e6:	78 1f       	adc	r23, r24
    19e8:	89 1f       	adc	r24, r25
    19ea:	9a 1f       	adc	r25, r26
    19ec:	a1 1d       	adc	r26, r1
    19ee:	68 0f       	add	r22, r24
    19f0:	79 1f       	adc	r23, r25
    19f2:	8a 1f       	adc	r24, r26
    19f4:	91 1d       	adc	r25, r1
    19f6:	a1 1d       	adc	r26, r1
    19f8:	6a 0f       	add	r22, r26
    19fa:	71 1d       	adc	r23, r1
    19fc:	81 1d       	adc	r24, r1
    19fe:	91 1d       	adc	r25, r1
    1a00:	a1 1d       	adc	r26, r1
    1a02:	20 d0       	rcall	.+64     	; 0x1a44 <__ultoa_invert+0x84>
    1a04:	09 f4       	brne	.+2      	; 0x1a08 <__ultoa_invert+0x48>
    1a06:	68 94       	set
    1a08:	3f 91       	pop	r19
    1a0a:	2a e0       	ldi	r18, 0x0A	; 10
    1a0c:	26 9f       	mul	r18, r22
    1a0e:	11 24       	eor	r1, r1
    1a10:	30 19       	sub	r19, r0
    1a12:	30 5d       	subi	r19, 0xD0	; 208
    1a14:	31 93       	st	Z+, r19
    1a16:	de f6       	brtc	.-74     	; 0x19ce <__ultoa_invert+0xe>
    1a18:	cf 01       	movw	r24, r30
    1a1a:	08 95       	ret
    1a1c:	46 2f       	mov	r20, r22
    1a1e:	47 70       	andi	r20, 0x07	; 7
    1a20:	40 5d       	subi	r20, 0xD0	; 208
    1a22:	41 93       	st	Z+, r20
    1a24:	b3 e0       	ldi	r27, 0x03	; 3
    1a26:	0f d0       	rcall	.+30     	; 0x1a46 <__ultoa_invert+0x86>
    1a28:	c9 f7       	brne	.-14     	; 0x1a1c <__ultoa_invert+0x5c>
    1a2a:	f6 cf       	rjmp	.-20     	; 0x1a18 <__ultoa_invert+0x58>
    1a2c:	46 2f       	mov	r20, r22
    1a2e:	4f 70       	andi	r20, 0x0F	; 15
    1a30:	40 5d       	subi	r20, 0xD0	; 208
    1a32:	4a 33       	cpi	r20, 0x3A	; 58
    1a34:	18 f0       	brcs	.+6      	; 0x1a3c <__ultoa_invert+0x7c>
    1a36:	49 5d       	subi	r20, 0xD9	; 217
    1a38:	31 fd       	sbrc	r19, 1
    1a3a:	40 52       	subi	r20, 0x20	; 32
    1a3c:	41 93       	st	Z+, r20
    1a3e:	02 d0       	rcall	.+4      	; 0x1a44 <__ultoa_invert+0x84>
    1a40:	a9 f7       	brne	.-22     	; 0x1a2c <__ultoa_invert+0x6c>
    1a42:	ea cf       	rjmp	.-44     	; 0x1a18 <__ultoa_invert+0x58>
    1a44:	b4 e0       	ldi	r27, 0x04	; 4
    1a46:	a6 95       	lsr	r26
    1a48:	97 95       	ror	r25
    1a4a:	87 95       	ror	r24
    1a4c:	77 95       	ror	r23
    1a4e:	67 95       	ror	r22
    1a50:	ba 95       	dec	r27
    1a52:	c9 f7       	brne	.-14     	; 0x1a46 <__ultoa_invert+0x86>
    1a54:	00 97       	sbiw	r24, 0x00	; 0
    1a56:	61 05       	cpc	r22, r1
    1a58:	71 05       	cpc	r23, r1
    1a5a:	08 95       	ret
    1a5c:	9b 01       	movw	r18, r22
    1a5e:	ac 01       	movw	r20, r24
    1a60:	0a 2e       	mov	r0, r26
    1a62:	06 94       	lsr	r0
    1a64:	57 95       	ror	r21
    1a66:	47 95       	ror	r20
    1a68:	37 95       	ror	r19
    1a6a:	27 95       	ror	r18
    1a6c:	ba 95       	dec	r27
    1a6e:	c9 f7       	brne	.-14     	; 0x1a62 <__ultoa_invert+0xa2>
    1a70:	62 0f       	add	r22, r18
    1a72:	73 1f       	adc	r23, r19
    1a74:	84 1f       	adc	r24, r20
    1a76:	95 1f       	adc	r25, r21
    1a78:	a0 1d       	adc	r26, r0
    1a7a:	08 95       	ret

00001a7c <_exit>:
    1a7c:	f8 94       	cli

00001a7e <__stop_program>:
    1a7e:	ff cf       	rjmp	.-2      	; 0x1a7e <__stop_program>
