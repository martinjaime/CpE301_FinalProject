
PublishCompass.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000068  00800100  00001564  000015f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001564  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800168  00800168  00001660  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001660  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  000016fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bd1  00000000  00000000  000017dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000042d  00000000  00000000  000023ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000045e  00000000  00000000  000027da  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000274  00000000  00000000  00002c38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000039c  00000000  00000000  00002eac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009c2  00000000  00000000  00003248  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00003c0a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cc 00 	jmp	0x198	; 0x198 <__ctors_end>
       4:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
       8:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
       c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      10:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      14:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      18:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      1c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      20:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      24:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      28:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      2c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      30:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      34:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      38:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      3c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      40:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      44:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      48:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      4c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      50:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      54:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      58:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      5c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      60:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      64:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 00       	.word	0x003f	; ????

00000096 <__trampolines_end>:
      96:	6e 61       	ori	r22, 0x1E	; 30
      98:	6e 00       	.word	0x006e	; ????

0000009a <__c.2177>:
      9a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      aa:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      ba:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      ca:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      da:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      ea:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      fa:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     10a:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     11a:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     12a:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     13a:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     14a:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     15a:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     16a:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     17a:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     18a:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000198 <__ctors_end>:
     198:	11 24       	eor	r1, r1
     19a:	1f be       	out	0x3f, r1	; 63
     19c:	cf ef       	ldi	r28, 0xFF	; 255
     19e:	d8 e0       	ldi	r29, 0x08	; 8
     1a0:	de bf       	out	0x3e, r29	; 62
     1a2:	cd bf       	out	0x3d, r28	; 61

000001a4 <__do_copy_data>:
     1a4:	11 e0       	ldi	r17, 0x01	; 1
     1a6:	a0 e0       	ldi	r26, 0x00	; 0
     1a8:	b1 e0       	ldi	r27, 0x01	; 1
     1aa:	e4 e6       	ldi	r30, 0x64	; 100
     1ac:	f5 e1       	ldi	r31, 0x15	; 21
     1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <__do_copy_data+0x10>
     1b0:	05 90       	lpm	r0, Z+
     1b2:	0d 92       	st	X+, r0
     1b4:	a8 36       	cpi	r26, 0x68	; 104
     1b6:	b1 07       	cpc	r27, r17
     1b8:	d9 f7       	brne	.-10     	; 0x1b0 <__do_copy_data+0xc>

000001ba <__do_clear_bss>:
     1ba:	21 e0       	ldi	r18, 0x01	; 1
     1bc:	a8 e6       	ldi	r26, 0x68	; 104
     1be:	b1 e0       	ldi	r27, 0x01	; 1
     1c0:	01 c0       	rjmp	.+2      	; 0x1c4 <.do_clear_bss_start>

000001c2 <.do_clear_bss_loop>:
     1c2:	1d 92       	st	X+, r1

000001c4 <.do_clear_bss_start>:
     1c4:	ae 36       	cpi	r26, 0x6E	; 110
     1c6:	b2 07       	cpc	r27, r18
     1c8:	e1 f7       	brne	.-8      	; 0x1c2 <.do_clear_bss_loop>
     1ca:	0e 94 3d 02 	call	0x47a	; 0x47a <main>
     1ce:	0c 94 b0 0a 	jmp	0x1560	; 0x1560 <_exit>

000001d2 <__bad_interrupt>:
     1d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d6 <i2c_init>:
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
     1d6:	10 92 b9 00 	sts	0x00B9, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     1da:	82 e0       	ldi	r24, 0x02	; 2
     1dc:	80 93 b8 00 	sts	0x00B8, r24
     1e0:	08 95       	ret

000001e2 <i2c_start>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     1e2:	94 ea       	ldi	r25, 0xA4	; 164
     1e4:	90 93 bc 00 	sts	0x00BC, r25

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     1e8:	ec eb       	ldi	r30, 0xBC	; 188
     1ea:	f0 e0       	ldi	r31, 0x00	; 0
     1ec:	90 81       	ld	r25, Z
     1ee:	99 23       	and	r25, r25
     1f0:	ec f7       	brge	.-6      	; 0x1ec <i2c_start+0xa>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     1f2:	90 91 b9 00 	lds	r25, 0x00B9
     1f6:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     1f8:	98 30       	cpi	r25, 0x08	; 8
     1fa:	11 f0       	breq	.+4      	; 0x200 <i2c_start+0x1e>
     1fc:	90 31       	cpi	r25, 0x10	; 16
     1fe:	a1 f4       	brne	.+40     	; 0x228 <i2c_start+0x46>

	// send device address
	TWDR = address;
     200:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     204:	84 e8       	ldi	r24, 0x84	; 132
     206:	80 93 bc 00 	sts	0x00BC, r24

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     20a:	ec eb       	ldi	r30, 0xBC	; 188
     20c:	f0 e0       	ldi	r31, 0x00	; 0
     20e:	80 81       	ld	r24, Z
     210:	88 23       	and	r24, r24
     212:	ec f7       	brge	.-6      	; 0x20e <i2c_start+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     214:	90 91 b9 00 	lds	r25, 0x00B9
     218:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     21a:	98 31       	cpi	r25, 0x18	; 24
     21c:	39 f0       	breq	.+14     	; 0x22c <i2c_start+0x4a>
     21e:	81 e0       	ldi	r24, 0x01	; 1
     220:	90 34       	cpi	r25, 0x40	; 64
     222:	29 f4       	brne	.+10     	; 0x22e <i2c_start+0x4c>
     224:	80 e0       	ldi	r24, 0x00	; 0
     226:	08 95       	ret
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
     22c:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     22e:	08 95       	ret

00000230 <i2c_start_wait>:
 If device is busy, use ack polling to wait until device is ready
 
 Input:   address and transfer direction of I2C device
*************************************************************************/
void i2c_start_wait(unsigned char address)
{
     230:	cf 93       	push	r28
     232:	df 93       	push	r29


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     234:	ec eb       	ldi	r30, 0xBC	; 188
     236:	f0 e0       	ldi	r31, 0x00	; 0
     238:	24 ea       	ldi	r18, 0xA4	; 164
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     23a:	a9 eb       	ldi	r26, 0xB9	; 185
     23c:	b0 e0       	ldi	r27, 0x00	; 0
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    
    	// send device address
    	TWDR = address;
     23e:	cb eb       	ldi	r28, 0xBB	; 187
     240:	d0 e0       	ldi	r29, 0x00	; 0
    	TWCR = (1<<TWINT) | (1<<TWEN);
     242:	34 e8       	ldi	r19, 0x84	; 132
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     244:	44 e9       	ldi	r20, 0x94	; 148


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     246:	20 83       	st	Z, r18
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     248:	90 81       	ld	r25, Z
     24a:	99 23       	and	r25, r25
     24c:	ec f7       	brge	.-6      	; 0x248 <i2c_start_wait+0x18>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     24e:	9c 91       	ld	r25, X
     250:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
     252:	98 30       	cpi	r25, 0x08	; 8
     254:	11 f0       	breq	.+4      	; 0x25a <i2c_start_wait+0x2a>
     256:	90 31       	cpi	r25, 0x10	; 16
     258:	b1 f7       	brne	.-20     	; 0x246 <i2c_start_wait+0x16>
    
    	// send device address
    	TWDR = address;
     25a:	88 83       	st	Y, r24
    	TWCR = (1<<TWINT) | (1<<TWEN);
     25c:	30 83       	st	Z, r19
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     25e:	90 81       	ld	r25, Z
     260:	99 23       	and	r25, r25
     262:	ec f7       	brge	.-6      	; 0x25e <i2c_start_wait+0x2e>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     264:	9c 91       	ld	r25, X
     266:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
     268:	90 32       	cpi	r25, 0x20	; 32
     26a:	11 f0       	breq	.+4      	; 0x270 <i2c_start_wait+0x40>
     26c:	98 35       	cpi	r25, 0x58	; 88
     26e:	29 f4       	brne	.+10     	; 0x27a <i2c_start_wait+0x4a>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     270:	40 83       	st	Z, r20
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
     272:	90 81       	ld	r25, Z
     274:	94 fd       	sbrc	r25, 4
     276:	fd cf       	rjmp	.-6      	; 0x272 <i2c_start_wait+0x42>
     278:	e6 cf       	rjmp	.-52     	; 0x246 <i2c_start_wait+0x16>
    	}
    	//if( twst != TW_MT_SLA_ACK) return 1;
    	break;
     }

}/* i2c_start_wait */
     27a:	df 91       	pop	r29
     27c:	cf 91       	pop	r28
     27e:	08 95       	ret

00000280 <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     280:	84 e9       	ldi	r24, 0x94	; 148
     282:	80 93 bc 00 	sts	0x00BC, r24
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     286:	ec eb       	ldi	r30, 0xBC	; 188
     288:	f0 e0       	ldi	r31, 0x00	; 0
     28a:	80 81       	ld	r24, Z
     28c:	84 fd       	sbrc	r24, 4
     28e:	fd cf       	rjmp	.-6      	; 0x28a <i2c_stop+0xa>

}/* i2c_stop */
     290:	08 95       	ret

00000292 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     292:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     296:	84 e8       	ldi	r24, 0x84	; 132
     298:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     29c:	ec eb       	ldi	r30, 0xBC	; 188
     29e:	f0 e0       	ldi	r31, 0x00	; 0
     2a0:	80 81       	ld	r24, Z
     2a2:	88 23       	and	r24, r24
     2a4:	ec f7       	brge	.-6      	; 0x2a0 <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     2a6:	90 91 b9 00 	lds	r25, 0x00B9
     2aa:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
     2ac:	81 e0       	ldi	r24, 0x01	; 1
     2ae:	98 32       	cpi	r25, 0x28	; 40
     2b0:	09 f4       	brne	.+2      	; 0x2b4 <i2c_write+0x22>
     2b2:	80 e0       	ldi	r24, 0x00	; 0
	return 0;

}/* i2c_write */
     2b4:	08 95       	ret

000002b6 <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     2b6:	84 ec       	ldi	r24, 0xC4	; 196
     2b8:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
     2bc:	ec eb       	ldi	r30, 0xBC	; 188
     2be:	f0 e0       	ldi	r31, 0x00	; 0
     2c0:	80 81       	ld	r24, Z
     2c2:	88 23       	and	r24, r24
     2c4:	ec f7       	brge	.-6      	; 0x2c0 <i2c_readAck+0xa>

    return TWDR;
     2c6:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readAck */
     2ca:	08 95       	ret

000002cc <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     2cc:	84 e8       	ldi	r24, 0x84	; 132
     2ce:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     2d2:	ec eb       	ldi	r30, 0xBC	; 188
     2d4:	f0 e0       	ldi	r31, 0x00	; 0
     2d6:	80 81       	ld	r24, Z
     2d8:	88 23       	and	r24, r24
     2da:	ec f7       	brge	.-6      	; 0x2d6 <i2c_readNak+0xa>
	
    return TWDR;
     2dc:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readNak */
     2e0:	08 95       	ret

000002e2 <USART0_sendChar>:
 * Procedure to send a single character over USART0. If character is linefeed, reset 
 * line. 
 * Assumes ASCII code. 
 */ 
{
	if(data == '\n')
     2e2:	8a 30       	cpi	r24, 0x0A	; 10
     2e4:	41 f4       	brne	.+16     	; 0x2f6 <USART0_sendChar+0x14>
	{
		while(! (UCSR0A & (1<<UDRE0)) );
     2e6:	e0 ec       	ldi	r30, 0xC0	; 192
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	90 81       	ld	r25, Z
     2ec:	95 ff       	sbrs	r25, 5
     2ee:	fd cf       	rjmp	.-6      	; 0x2ea <USART0_sendChar+0x8>
		UDR0 = '\r';
     2f0:	9d e0       	ldi	r25, 0x0D	; 13
     2f2:	90 93 c6 00 	sts	0x00C6, r25
	}
	while(! (UCSR0A & (1<<UDRE0)) );
     2f6:	e0 ec       	ldi	r30, 0xC0	; 192
     2f8:	f0 e0       	ldi	r31, 0x00	; 0
     2fa:	90 81       	ld	r25, Z
     2fc:	95 ff       	sbrs	r25, 5
     2fe:	fd cf       	rjmp	.-6      	; 0x2fa <USART0_sendChar+0x18>
	UDR0 = data;
     300:	80 93 c6 00 	sts	0x00C6, r24
	return 0;
}
     304:	80 e0       	ldi	r24, 0x00	; 0
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	08 95       	ret

0000030a <USART0_ReceiveChar>:

int USART0_ReceiveChar(FILE *stream)
{
	uint8_t u8Data;
	// Wait for byte to be received
	while(!(UCSR0A&(1<<RXC0))){};
     30a:	e0 ec       	ldi	r30, 0xC0	; 192
     30c:	f0 e0       	ldi	r31, 0x00	; 0
     30e:	80 81       	ld	r24, Z
     310:	88 23       	and	r24, r24
     312:	ec f7       	brge	.-6      	; 0x30e <USART0_ReceiveChar+0x4>
	u8Data=UDR0;
     314:	80 91 c6 00 	lds	r24, 0x00C6
	//echo input data
	//USART0SendByte(u8Data,stream);
	// Return received data
	return u8Data;
}
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	08 95       	ret

0000031c <HMC5883L_init>:
void HMC5883L_init()
{
	// Write 0x70 to HMC5883L register  A
	//	"	 0x20 to	"		"		B
	//	"	 0x00 to	"		"		Mode
	i2c_start(HMC5883L_ADDR+I2C_WRITE);
     31c:	8c e3       	ldi	r24, 0x3C	; 60
     31e:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <i2c_start>
	i2c_write(CONF_A_REG);
     322:	80 e0       	ldi	r24, 0x00	; 0
     324:	0e 94 49 01 	call	0x292	; 0x292 <i2c_write>
	i2c_write(0x70);	// avg 8 samples, 15Hz, Normal measurement
     328:	80 e7       	ldi	r24, 0x70	; 112
     32a:	0e 94 49 01 	call	0x292	; 0x292 <i2c_write>
	i2c_write(0x20);
     32e:	80 e2       	ldi	r24, 0x20	; 32
     330:	0e 94 49 01 	call	0x292	; 0x292 <i2c_write>
	i2c_write(0x00);
     334:	80 e0       	ldi	r24, 0x00	; 0
     336:	0e 94 49 01 	call	0x292	; 0x292 <i2c_write>
	i2c_stop();			// Release the bus. 
     33a:	0e 94 40 01 	call	0x280	; 0x280 <i2c_stop>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     33e:	8f ec       	ldi	r24, 0xCF	; 207
     340:	97 e0       	ldi	r25, 0x07	; 7
     342:	01 97       	sbiw	r24, 0x01	; 1
     344:	f1 f7       	brne	.-4      	; 0x342 <HMC5883L_init+0x26>
     346:	00 c0       	rjmp	.+0      	; 0x348 <HMC5883L_init+0x2c>
     348:	00 00       	nop
     34a:	08 95       	ret

0000034c <readCompass>:
// 	i2c_write(0x00);	// slow I2C, continuous measurement mode
// 	i2c_stop();			// release bus
}

void readCompass(int16_t *value) 
{
     34c:	0f 93       	push	r16
     34e:	1f 93       	push	r17
     350:	cf 93       	push	r28
     352:	df 93       	push	r29
     354:	8c 01       	movw	r16, r24
	int16_t temp;
	//i2c_start_wait(WRITE_ADDRESS);
	i2c_start(WRITE_ADDRESS);
     356:	8c e3       	ldi	r24, 0x3C	; 60
     358:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <i2c_start>
	i2c_write(0x03);
     35c:	83 e0       	ldi	r24, 0x03	; 3
     35e:	0e 94 49 01 	call	0x292	; 0x292 <i2c_write>
	i2c_start_wait(READ_ADDRESS);
     362:	8d e3       	ldi	r24, 0x3D	; 61
     364:	0e 94 18 01 	call	0x230	; 0x230 <i2c_start_wait>
	// Read x axis
	temp = i2c_readAck();
     368:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_readAck>
     36c:	c8 2f       	mov	r28, r24
     36e:	d0 e0       	ldi	r29, 0x00	; 0
	temp = (temp << 8) | i2c_readAck();
     370:	dc 2f       	mov	r29, r28
     372:	cc 27       	eor	r28, r28
     374:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_readAck>
     378:	c8 2b       	or	r28, r24
	value[0] = temp;
     37a:	f8 01       	movw	r30, r16
     37c:	d1 83       	std	Z+1, r29	; 0x01
     37e:	c0 83       	st	Z, r28
	
	// Read z
	temp = i2c_readAck();
     380:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_readAck>
     384:	c8 2f       	mov	r28, r24
     386:	d0 e0       	ldi	r29, 0x00	; 0
	temp = (temp << 8) | i2c_readAck();
     388:	dc 2f       	mov	r29, r28
     38a:	cc 27       	eor	r28, r28
     38c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_readAck>
     390:	c8 2b       	or	r28, r24
	value[2] = temp;
     392:	f8 01       	movw	r30, r16
     394:	d5 83       	std	Z+5, r29	; 0x05
     396:	c4 83       	std	Z+4, r28	; 0x04
	
	// Read y axis
	temp = i2c_readAck();
     398:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_readAck>
     39c:	c8 2f       	mov	r28, r24
     39e:	d0 e0       	ldi	r29, 0x00	; 0
	temp = (temp << 8) | i2c_readNak();
     3a0:	dc 2f       	mov	r29, r28
     3a2:	cc 27       	eor	r28, r28
     3a4:	0e 94 66 01 	call	0x2cc	; 0x2cc <i2c_readNak>
     3a8:	c8 2b       	or	r28, r24
	value[1] = temp;
     3aa:	f8 01       	movw	r30, r16
     3ac:	d3 83       	std	Z+3, r29	; 0x03
     3ae:	c2 83       	std	Z+2, r28	; 0x02

	i2c_stop();
     3b0:	0e 94 40 01 	call	0x280	; 0x280 <i2c_stop>
     3b4:	df 91       	pop	r29
     3b6:	cf 91       	pop	r28
     3b8:	1f 91       	pop	r17
     3ba:	0f 91       	pop	r16
     3bc:	08 95       	ret

000003be <USART0_init>:
/*
 * Procedure to initialize USART0 asynchronous with enabled RX/TX, 8 bit data,
 * no parity, and 1 stop bit. 
*/
{
	UCSR0B = (1<<TXEN0)  | (1<<RXEN0);	// enable transmit/receive
     3be:	88 e1       	ldi	r24, 0x18	; 24
     3c0:	80 93 c1 00 	sts	0x00C1, r24
	UCSR0C = (1<<UCSZ01) | (1<<UCSZ00);	// asynchronous, 8N1
     3c4:	86 e0       	ldi	r24, 0x06	; 6
     3c6:	80 93 c2 00 	sts	0x00C2, r24
	UBRR0 = ASYNCH_NORM_PRESCALER;		// To set 9600 baud rate with 8MHz clock
     3ca:	83 e3       	ldi	r24, 0x33	; 51
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	90 93 c5 00 	sts	0x00C5, r25
     3d2:	80 93 c4 00 	sts	0x00C4, r24
     3d6:	08 95       	ret

000003d8 <ESP8266_receive>:
#include "uart.h"

int8_t ESP8266_receive(char *response/*, char *badResponse*/)
// check if response string is received and return 1. Otherwise, return 0.
// https://github.com/mattcallow/esp8266/blob/master/esp8266.ino
{
     3d8:	8f 92       	push	r8
     3da:	9f 92       	push	r9
     3dc:	af 92       	push	r10
     3de:	bf 92       	push	r11
     3e0:	ef 92       	push	r14
     3e2:	ff 92       	push	r15
     3e4:	0f 93       	push	r16
     3e6:	1f 93       	push	r17
     3e8:	cf 93       	push	r28
     3ea:	df 93       	push	r29
     3ec:	7c 01       	movw	r14, r24
	uint16_t maxTry = 0 - 1;	// get max value of uint16_t;
	char ch;
	uint16_t i = 0;
// 	uint16_t j = 0; // index for bad response. 
	uint32_t ok_length = strlen(response);
     3ee:	fc 01       	movw	r30, r24
     3f0:	01 90       	ld	r0, Z+
     3f2:	00 20       	and	r0, r0
     3f4:	e9 f7       	brne	.-6      	; 0x3f0 <ESP8266_receive+0x18>
     3f6:	31 97       	sbiw	r30, 0x01	; 1
     3f8:	4f 01       	movw	r8, r30
     3fa:	88 1a       	sub	r8, r24
     3fc:	99 0a       	sbc	r9, r25
     3fe:	a1 2c       	mov	r10, r1
     400:	b1 2c       	mov	r11, r1
     402:	ce ef       	ldi	r28, 0xFE	; 254
     404:	df ef       	ldi	r29, 0xFF	; 255
// check if response string is received and return 1. Otherwise, return 0.
// https://github.com/mattcallow/esp8266/blob/master/esp8266.ino
{
	uint16_t maxTry = 0 - 1;	// get max value of uint16_t;
	char ch;
	uint16_t i = 0;
     406:	00 e0       	ldi	r16, 0x00	; 0
     408:	10 e0       	ldi	r17, 0x00	; 0
	uint32_t ok_length = strlen(response);
// 	uint32_t nok_length = strlen(badResponse);
	while(--maxTry > 0)
	{
		
		ch = USART0_ReceiveChar(NULL);
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	0e 94 85 01 	call	0x30a	; 0x30a <USART0_ReceiveChar>
		if (ch == response[i])
     412:	f7 01       	movw	r30, r14
     414:	e0 0f       	add	r30, r16
     416:	f1 1f       	adc	r31, r17
     418:	90 81       	ld	r25, Z
     41a:	98 13       	cpse	r25, r24
     41c:	0a c0       	rjmp	.+20     	; 0x432 <ESP8266_receive+0x5a>
		{
			if (++i == ok_length)
     41e:	0f 5f       	subi	r16, 0xFF	; 255
     420:	1f 4f       	sbci	r17, 0xFF	; 255
     422:	c8 01       	movw	r24, r16
     424:	a0 e0       	ldi	r26, 0x00	; 0
     426:	b0 e0       	ldi	r27, 0x00	; 0
     428:	88 15       	cp	r24, r8
     42a:	99 05       	cpc	r25, r9
     42c:	aa 05       	cpc	r26, r10
     42e:	bb 05       	cpc	r27, r11
     430:	21 f0       	breq	.+8      	; 0x43a <ESP8266_receive+0x62>
     432:	21 97       	sbiw	r28, 0x01	; 1
	char ch;
	uint16_t i = 0;
// 	uint16_t j = 0; // index for bad response. 
	uint32_t ok_length = strlen(response);
// 	uint32_t nok_length = strlen(badResponse);
	while(--maxTry > 0)
     434:	51 f7       	brne	.-44     	; 0x40a <ESP8266_receive+0x32>
// 		{
// 			if (++j == nok_length)
// 				return 0;	// matched badResponse.
// 		}
	}
	return 0;
     436:	80 e0       	ldi	r24, 0x00	; 0
     438:	01 c0       	rjmp	.+2      	; 0x43c <ESP8266_receive+0x64>
		ch = USART0_ReceiveChar(NULL);
		if (ch == response[i])
		{
			if (++i == ok_length)
			{
				return 1; // matched response
     43a:	81 e0       	ldi	r24, 0x01	; 1
// 			if (++j == nok_length)
// 				return 0;	// matched badResponse.
// 		}
	}
	return 0;
}
     43c:	df 91       	pop	r29
     43e:	cf 91       	pop	r28
     440:	1f 91       	pop	r17
     442:	0f 91       	pop	r16
     444:	ff 90       	pop	r15
     446:	ef 90       	pop	r14
     448:	bf 90       	pop	r11
     44a:	af 90       	pop	r10
     44c:	9f 90       	pop	r9
     44e:	8f 90       	pop	r8
     450:	08 95       	ret

00000452 <ESP8266_command>:
int8_t ESP8266_command(char *command, char *response)
{
     452:	cf 93       	push	r28
     454:	df 93       	push	r29
     456:	eb 01       	movw	r28, r22
	printf(command);
     458:	9f 93       	push	r25
     45a:	8f 93       	push	r24
     45c:	0e 94 3c 0a 	call	0x1478	; 0x1478 <printf>
	if (ESP8266_receive(response))
     460:	ce 01       	movw	r24, r28
     462:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <ESP8266_receive>
     466:	91 e0       	ldi	r25, 0x01	; 1
     468:	0f 90       	pop	r0
     46a:	0f 90       	pop	r0
     46c:	81 11       	cpse	r24, r1
     46e:	01 c0       	rjmp	.+2      	; 0x472 <ESP8266_command+0x20>
     470:	90 e0       	ldi	r25, 0x00	; 0
		return 1;
	else 
		return 0;
}
     472:	89 2f       	mov	r24, r25
     474:	df 91       	pop	r29
     476:	cf 91       	pop	r28
     478:	08 95       	ret

0000047a <main>:

//set stream pointer
FILE usart0_str = FDEV_SETUP_STREAM(USART0_sendChar, USART0_ReceiveChar, _FDEV_SETUP_RW);

int main(void)
{
     47a:	cf 93       	push	r28
     47c:	df 93       	push	r29
     47e:	00 d0       	rcall	.+0      	; 0x480 <main+0x6>
     480:	00 d0       	rcall	.+0      	; 0x482 <main+0x8>
     482:	00 d0       	rcall	.+0      	; 0x484 <main+0xa>
     484:	cd b7       	in	r28, 0x3d	; 61
     486:	de b7       	in	r29, 0x3e	; 62
	int16_t values[3];
	double  direction;
// 	uint32_t magnitude;
	
	stdin = stdout = &usart0_str;
     488:	e8 e6       	ldi	r30, 0x68	; 104
     48a:	f1 e0       	ldi	r31, 0x01	; 1
     48c:	80 e0       	ldi	r24, 0x00	; 0
     48e:	91 e0       	ldi	r25, 0x01	; 1
     490:	93 83       	std	Z+3, r25	; 0x03
     492:	82 83       	std	Z+2, r24	; 0x02
     494:	91 83       	std	Z+1, r25	; 0x01
     496:	80 83       	st	Z, r24
	
	USART0_init();
     498:	0e 94 df 01 	call	0x3be	; 0x3be <USART0_init>
	i2c_init();
     49c:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <i2c_init>
	HMC5883L_init();
     4a0:	0e 94 8e 01 	call	0x31c	; 0x31c <HMC5883L_init>
	// Uncomment if this is the first time running, to initiate module
	// with appropriate SSID and password. 
	//ESP8266_init();

	// Configure ESP8266
	ESP8266_command("AT+CIPMUX=0\n", NULL);
     4a4:	60 e0       	ldi	r22, 0x00	; 0
     4a6:	70 e0       	ldi	r23, 0x00	; 0
     4a8:	8e e4       	ldi	r24, 0x4E	; 78
     4aa:	91 e0       	ldi	r25, 0x01	; 1
     4ac:	0e 94 29 02 	call	0x452	; 0x452 <ESP8266_command>
     4b0:	2f ef       	ldi	r18, 0xFF	; 255
     4b2:	8d e3       	ldi	r24, 0x3D	; 61
     4b4:	99 e4       	ldi	r25, 0x49	; 73
     4b6:	21 50       	subi	r18, 0x01	; 1
     4b8:	80 40       	sbci	r24, 0x00	; 0
     4ba:	90 40       	sbci	r25, 0x00	; 0
     4bc:	e1 f7       	brne	.-8      	; 0x4b6 <main+0x3c>
     4be:	00 c0       	rjmp	.+0      	; 0x4c0 <main+0x46>
     4c0:	00 00       	nop
    {
		readCompass(values);
		//magnitude = (uint32_t)sqrt(values[0]*values[0] + values[1]*values[1] + values[2]*values[2]);
		// Get direction on the xz-plane
		direction = atan2(values[2], values[0]) * 180 / M_PI;
		printf("%d\t%d\t%d\t%d\n", values[0], values[1], values[2], (int)direction);
     4c2:	0f 2e       	mov	r0, r31
     4c4:	fb e5       	ldi	r31, 0x5B	; 91
     4c6:	cf 2e       	mov	r12, r31
     4c8:	f1 e0       	ldi	r31, 0x01	; 1
     4ca:	df 2e       	mov	r13, r31
     4cc:	f0 2d       	mov	r31, r0
	

	_delay_ms(3000);
    while (1)
    {
		readCompass(values);
     4ce:	ce 01       	movw	r24, r28
     4d0:	01 96       	adiw	r24, 0x01	; 1
     4d2:	0e 94 a6 01 	call	0x34c	; 0x34c <readCompass>
		//magnitude = (uint32_t)sqrt(values[0]*values[0] + values[1]*values[1] + values[2]*values[2]);
		// Get direction on the xz-plane
		direction = atan2(values[2], values[0]) * 180 / M_PI;
     4d6:	09 81       	ldd	r16, Y+1	; 0x01
     4d8:	1a 81       	ldd	r17, Y+2	; 0x02
     4da:	ed 80       	ldd	r14, Y+5	; 0x05
     4dc:	fe 80       	ldd	r15, Y+6	; 0x06
     4de:	b8 01       	movw	r22, r16
     4e0:	01 2e       	mov	r0, r17
     4e2:	00 0c       	add	r0, r0
     4e4:	88 0b       	sbc	r24, r24
     4e6:	99 0b       	sbc	r25, r25
     4e8:	0e 94 ca 03 	call	0x794	; 0x794 <__floatsisf>
     4ec:	4b 01       	movw	r8, r22
     4ee:	5c 01       	movw	r10, r24
     4f0:	b7 01       	movw	r22, r14
     4f2:	0f 2c       	mov	r0, r15
     4f4:	00 0c       	add	r0, r0
     4f6:	88 0b       	sbc	r24, r24
     4f8:	99 0b       	sbc	r25, r25
     4fa:	0e 94 ca 03 	call	0x794	; 0x794 <__floatsisf>
     4fe:	a5 01       	movw	r20, r10
     500:	94 01       	movw	r18, r8
     502:	0e 94 c1 02 	call	0x582	; 0x582 <atan2>
     506:	20 e0       	ldi	r18, 0x00	; 0
     508:	30 e0       	ldi	r19, 0x00	; 0
     50a:	44 e3       	ldi	r20, 0x34	; 52
     50c:	53 e4       	ldi	r21, 0x43	; 67
     50e:	0e 94 85 04 	call	0x90a	; 0x90a <__mulsf3>
     512:	2b ed       	ldi	r18, 0xDB	; 219
     514:	3f e0       	ldi	r19, 0x0F	; 15
     516:	49 e4       	ldi	r20, 0x49	; 73
     518:	50 e4       	ldi	r21, 0x40	; 64
     51a:	0e 94 20 03 	call	0x640	; 0x640 <__divsf3>
		printf("%d\t%d\t%d\t%d\n", values[0], values[1], values[2], (int)direction);
     51e:	0e 94 92 03 	call	0x724	; 0x724 <__fixsfsi>
     522:	7f 93       	push	r23
     524:	6f 93       	push	r22
     526:	ff 92       	push	r15
     528:	ef 92       	push	r14
     52a:	8c 81       	ldd	r24, Y+4	; 0x04
     52c:	8f 93       	push	r24
     52e:	8b 81       	ldd	r24, Y+3	; 0x03
     530:	8f 93       	push	r24
     532:	1f 93       	push	r17
     534:	0f 93       	push	r16
     536:	df 92       	push	r13
     538:	cf 92       	push	r12
     53a:	0e 94 3c 0a 	call	0x1478	; 0x1478 <printf>
     53e:	2f ef       	ldi	r18, 0xFF	; 255
     540:	88 ef       	ldi	r24, 0xF8	; 248
     542:	95 e1       	ldi	r25, 0x15	; 21
     544:	21 50       	subi	r18, 0x01	; 1
     546:	80 40       	sbci	r24, 0x00	; 0
     548:	90 40       	sbci	r25, 0x00	; 0
     54a:	e1 f7       	brne	.-8      	; 0x544 <main+0xca>
     54c:	00 c0       	rjmp	.+0      	; 0x54e <main+0xd4>
     54e:	00 00       	nop
     550:	0f b6       	in	r0, 0x3f	; 63
     552:	f8 94       	cli
     554:	de bf       	out	0x3e, r29	; 62
     556:	0f be       	out	0x3f, r0	; 63
     558:	cd bf       	out	0x3d, r28	; 61
     55a:	b9 cf       	rjmp	.-142    	; 0x4ce <main+0x54>
     55c:	0e 94 35 04 	call	0x86a	; 0x86a <__fp_pscA>
     560:	60 f0       	brcs	.+24     	; 0x57a <main+0x100>
     562:	80 e8       	ldi	r24, 0x80	; 128
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	09 f4       	brne	.+2      	; 0x56a <main+0xf0>
     568:	9e ef       	ldi	r25, 0xFE	; 254
     56a:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_pscB>
     56e:	28 f0       	brcs	.+10     	; 0x57a <main+0x100>
     570:	40 e8       	ldi	r20, 0x80	; 128
     572:	51 e0       	ldi	r21, 0x01	; 1
     574:	71 f4       	brne	.+28     	; 0x592 <atan2+0x10>
     576:	5e ef       	ldi	r21, 0xFE	; 254
     578:	0c c0       	rjmp	.+24     	; 0x592 <atan2+0x10>
     57a:	0c 94 0b 04 	jmp	0x816	; 0x816 <__fp_nan>
     57e:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__fp_zero>

00000582 <atan2>:
     582:	e9 2f       	mov	r30, r25
     584:	e0 78       	andi	r30, 0x80	; 128
     586:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_split3>
     58a:	40 f3       	brcs	.-48     	; 0x55c <main+0xe2>
     58c:	09 2e       	mov	r0, r25
     58e:	05 2a       	or	r0, r21
     590:	b1 f3       	breq	.-20     	; 0x57e <main+0x104>
     592:	26 17       	cp	r18, r22
     594:	37 07       	cpc	r19, r23
     596:	48 07       	cpc	r20, r24
     598:	59 07       	cpc	r21, r25
     59a:	38 f0       	brcs	.+14     	; 0x5aa <atan2+0x28>
     59c:	0e 2e       	mov	r0, r30
     59e:	07 f8       	bld	r0, 7
     5a0:	e0 25       	eor	r30, r0
     5a2:	69 f0       	breq	.+26     	; 0x5be <atan2+0x3c>
     5a4:	e0 25       	eor	r30, r0
     5a6:	e0 64       	ori	r30, 0x40	; 64
     5a8:	0a c0       	rjmp	.+20     	; 0x5be <atan2+0x3c>
     5aa:	ef 63       	ori	r30, 0x3F	; 63
     5ac:	07 f8       	bld	r0, 7
     5ae:	00 94       	com	r0
     5b0:	07 fa       	bst	r0, 7
     5b2:	db 01       	movw	r26, r22
     5b4:	b9 01       	movw	r22, r18
     5b6:	9d 01       	movw	r18, r26
     5b8:	dc 01       	movw	r26, r24
     5ba:	ca 01       	movw	r24, r20
     5bc:	ad 01       	movw	r20, r26
     5be:	ef 93       	push	r30
     5c0:	0e 94 37 03 	call	0x66e	; 0x66e <__divsf3_pse>
     5c4:	0e 94 43 04 	call	0x886	; 0x886 <__fp_round>
     5c8:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <atan>
     5cc:	5f 91       	pop	r21
     5ce:	55 23       	and	r21, r21
     5d0:	39 f0       	breq	.+14     	; 0x5e0 <atan2+0x5e>
     5d2:	2b ed       	ldi	r18, 0xDB	; 219
     5d4:	3f e0       	ldi	r19, 0x0F	; 15
     5d6:	49 e4       	ldi	r20, 0x49	; 73
     5d8:	50 fd       	sbrc	r21, 0
     5da:	49 ec       	ldi	r20, 0xC9	; 201
     5dc:	0c 94 f7 04 	jmp	0x9ee	; 0x9ee <__addsf3>
     5e0:	08 95       	ret

000005e2 <atan>:
     5e2:	df 93       	push	r29
     5e4:	dd 27       	eor	r29, r29
     5e6:	b9 2f       	mov	r27, r25
     5e8:	bf 77       	andi	r27, 0x7F	; 127
     5ea:	40 e8       	ldi	r20, 0x80	; 128
     5ec:	5f e3       	ldi	r21, 0x3F	; 63
     5ee:	16 16       	cp	r1, r22
     5f0:	17 06       	cpc	r1, r23
     5f2:	48 07       	cpc	r20, r24
     5f4:	5b 07       	cpc	r21, r27
     5f6:	18 f4       	brcc	.+6      	; 0x5fe <atan+0x1c>
     5f8:	d9 2f       	mov	r29, r25
     5fa:	0e 94 7d 04 	call	0x8fa	; 0x8fa <inverse>
     5fe:	9f 93       	push	r25
     600:	8f 93       	push	r24
     602:	7f 93       	push	r23
     604:	6f 93       	push	r22
     606:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <square>
     60a:	e8 e6       	ldi	r30, 0x68	; 104
     60c:	f0 e0       	ldi	r31, 0x00	; 0
     60e:	0e 94 0e 04 	call	0x81c	; 0x81c <__fp_powser>
     612:	0e 94 43 04 	call	0x886	; 0x886 <__fp_round>
     616:	2f 91       	pop	r18
     618:	3f 91       	pop	r19
     61a:	4f 91       	pop	r20
     61c:	5f 91       	pop	r21
     61e:	0e 94 98 04 	call	0x930	; 0x930 <__mulsf3x>
     622:	dd 23       	and	r29, r29
     624:	51 f0       	breq	.+20     	; 0x63a <atan+0x58>
     626:	90 58       	subi	r25, 0x80	; 128
     628:	a2 ea       	ldi	r26, 0xA2	; 162
     62a:	2a ed       	ldi	r18, 0xDA	; 218
     62c:	3f e0       	ldi	r19, 0x0F	; 15
     62e:	49 ec       	ldi	r20, 0xC9	; 201
     630:	5f e3       	ldi	r21, 0x3F	; 63
     632:	d0 78       	andi	r29, 0x80	; 128
     634:	5d 27       	eor	r21, r29
     636:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__addsf3x>
     63a:	df 91       	pop	r29
     63c:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_round>

00000640 <__divsf3>:
     640:	0e 94 34 03 	call	0x668	; 0x668 <__divsf3x>
     644:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_round>
     648:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_pscB>
     64c:	58 f0       	brcs	.+22     	; 0x664 <__divsf3+0x24>
     64e:	0e 94 35 04 	call	0x86a	; 0x86a <__fp_pscA>
     652:	40 f0       	brcs	.+16     	; 0x664 <__divsf3+0x24>
     654:	29 f4       	brne	.+10     	; 0x660 <__divsf3+0x20>
     656:	5f 3f       	cpi	r21, 0xFF	; 255
     658:	29 f0       	breq	.+10     	; 0x664 <__divsf3+0x24>
     65a:	0c 94 05 04 	jmp	0x80a	; 0x80a <__fp_inf>
     65e:	51 11       	cpse	r21, r1
     660:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>
     664:	0c 94 0b 04 	jmp	0x816	; 0x816 <__fp_nan>

00000668 <__divsf3x>:
     668:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_split3>
     66c:	68 f3       	brcs	.-38     	; 0x648 <__divsf3+0x8>

0000066e <__divsf3_pse>:
     66e:	99 23       	and	r25, r25
     670:	b1 f3       	breq	.-20     	; 0x65e <__divsf3+0x1e>
     672:	55 23       	and	r21, r21
     674:	91 f3       	breq	.-28     	; 0x65a <__divsf3+0x1a>
     676:	95 1b       	sub	r25, r21
     678:	55 0b       	sbc	r21, r21
     67a:	bb 27       	eor	r27, r27
     67c:	aa 27       	eor	r26, r26
     67e:	62 17       	cp	r22, r18
     680:	73 07       	cpc	r23, r19
     682:	84 07       	cpc	r24, r20
     684:	38 f0       	brcs	.+14     	; 0x694 <__divsf3_pse+0x26>
     686:	9f 5f       	subi	r25, 0xFF	; 255
     688:	5f 4f       	sbci	r21, 0xFF	; 255
     68a:	22 0f       	add	r18, r18
     68c:	33 1f       	adc	r19, r19
     68e:	44 1f       	adc	r20, r20
     690:	aa 1f       	adc	r26, r26
     692:	a9 f3       	breq	.-22     	; 0x67e <__divsf3_pse+0x10>
     694:	35 d0       	rcall	.+106    	; 0x700 <__divsf3_pse+0x92>
     696:	0e 2e       	mov	r0, r30
     698:	3a f0       	brmi	.+14     	; 0x6a8 <__divsf3_pse+0x3a>
     69a:	e0 e8       	ldi	r30, 0x80	; 128
     69c:	32 d0       	rcall	.+100    	; 0x702 <__divsf3_pse+0x94>
     69e:	91 50       	subi	r25, 0x01	; 1
     6a0:	50 40       	sbci	r21, 0x00	; 0
     6a2:	e6 95       	lsr	r30
     6a4:	00 1c       	adc	r0, r0
     6a6:	ca f7       	brpl	.-14     	; 0x69a <__divsf3_pse+0x2c>
     6a8:	2b d0       	rcall	.+86     	; 0x700 <__divsf3_pse+0x92>
     6aa:	fe 2f       	mov	r31, r30
     6ac:	29 d0       	rcall	.+82     	; 0x700 <__divsf3_pse+0x92>
     6ae:	66 0f       	add	r22, r22
     6b0:	77 1f       	adc	r23, r23
     6b2:	88 1f       	adc	r24, r24
     6b4:	bb 1f       	adc	r27, r27
     6b6:	26 17       	cp	r18, r22
     6b8:	37 07       	cpc	r19, r23
     6ba:	48 07       	cpc	r20, r24
     6bc:	ab 07       	cpc	r26, r27
     6be:	b0 e8       	ldi	r27, 0x80	; 128
     6c0:	09 f0       	breq	.+2      	; 0x6c4 <__divsf3_pse+0x56>
     6c2:	bb 0b       	sbc	r27, r27
     6c4:	80 2d       	mov	r24, r0
     6c6:	bf 01       	movw	r22, r30
     6c8:	ff 27       	eor	r31, r31
     6ca:	93 58       	subi	r25, 0x83	; 131
     6cc:	5f 4f       	sbci	r21, 0xFF	; 255
     6ce:	3a f0       	brmi	.+14     	; 0x6de <__divsf3_pse+0x70>
     6d0:	9e 3f       	cpi	r25, 0xFE	; 254
     6d2:	51 05       	cpc	r21, r1
     6d4:	78 f0       	brcs	.+30     	; 0x6f4 <__divsf3_pse+0x86>
     6d6:	0c 94 05 04 	jmp	0x80a	; 0x80a <__fp_inf>
     6da:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>
     6de:	5f 3f       	cpi	r21, 0xFF	; 255
     6e0:	e4 f3       	brlt	.-8      	; 0x6da <__divsf3_pse+0x6c>
     6e2:	98 3e       	cpi	r25, 0xE8	; 232
     6e4:	d4 f3       	brlt	.-12     	; 0x6da <__divsf3_pse+0x6c>
     6e6:	86 95       	lsr	r24
     6e8:	77 95       	ror	r23
     6ea:	67 95       	ror	r22
     6ec:	b7 95       	ror	r27
     6ee:	f7 95       	ror	r31
     6f0:	9f 5f       	subi	r25, 0xFF	; 255
     6f2:	c9 f7       	brne	.-14     	; 0x6e6 <__divsf3_pse+0x78>
     6f4:	88 0f       	add	r24, r24
     6f6:	91 1d       	adc	r25, r1
     6f8:	96 95       	lsr	r25
     6fa:	87 95       	ror	r24
     6fc:	97 f9       	bld	r25, 7
     6fe:	08 95       	ret
     700:	e1 e0       	ldi	r30, 0x01	; 1
     702:	66 0f       	add	r22, r22
     704:	77 1f       	adc	r23, r23
     706:	88 1f       	adc	r24, r24
     708:	bb 1f       	adc	r27, r27
     70a:	62 17       	cp	r22, r18
     70c:	73 07       	cpc	r23, r19
     70e:	84 07       	cpc	r24, r20
     710:	ba 07       	cpc	r27, r26
     712:	20 f0       	brcs	.+8      	; 0x71c <__divsf3_pse+0xae>
     714:	62 1b       	sub	r22, r18
     716:	73 0b       	sbc	r23, r19
     718:	84 0b       	sbc	r24, r20
     71a:	ba 0b       	sbc	r27, r26
     71c:	ee 1f       	adc	r30, r30
     71e:	88 f7       	brcc	.-30     	; 0x702 <__divsf3_pse+0x94>
     720:	e0 95       	com	r30
     722:	08 95       	ret

00000724 <__fixsfsi>:
     724:	0e 94 99 03 	call	0x732	; 0x732 <__fixunssfsi>
     728:	68 94       	set
     72a:	b1 11       	cpse	r27, r1
     72c:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>
     730:	08 95       	ret

00000732 <__fixunssfsi>:
     732:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fp_splitA>
     736:	88 f0       	brcs	.+34     	; 0x75a <__fixunssfsi+0x28>
     738:	9f 57       	subi	r25, 0x7F	; 127
     73a:	98 f0       	brcs	.+38     	; 0x762 <__fixunssfsi+0x30>
     73c:	b9 2f       	mov	r27, r25
     73e:	99 27       	eor	r25, r25
     740:	b7 51       	subi	r27, 0x17	; 23
     742:	b0 f0       	brcs	.+44     	; 0x770 <__fixunssfsi+0x3e>
     744:	e1 f0       	breq	.+56     	; 0x77e <__fixunssfsi+0x4c>
     746:	66 0f       	add	r22, r22
     748:	77 1f       	adc	r23, r23
     74a:	88 1f       	adc	r24, r24
     74c:	99 1f       	adc	r25, r25
     74e:	1a f0       	brmi	.+6      	; 0x756 <__fixunssfsi+0x24>
     750:	ba 95       	dec	r27
     752:	c9 f7       	brne	.-14     	; 0x746 <__fixunssfsi+0x14>
     754:	14 c0       	rjmp	.+40     	; 0x77e <__fixunssfsi+0x4c>
     756:	b1 30       	cpi	r27, 0x01	; 1
     758:	91 f0       	breq	.+36     	; 0x77e <__fixunssfsi+0x4c>
     75a:	0e 94 76 04 	call	0x8ec	; 0x8ec <__fp_zero>
     75e:	b1 e0       	ldi	r27, 0x01	; 1
     760:	08 95       	ret
     762:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__fp_zero>
     766:	67 2f       	mov	r22, r23
     768:	78 2f       	mov	r23, r24
     76a:	88 27       	eor	r24, r24
     76c:	b8 5f       	subi	r27, 0xF8	; 248
     76e:	39 f0       	breq	.+14     	; 0x77e <__fixunssfsi+0x4c>
     770:	b9 3f       	cpi	r27, 0xF9	; 249
     772:	cc f3       	brlt	.-14     	; 0x766 <__fixunssfsi+0x34>
     774:	86 95       	lsr	r24
     776:	77 95       	ror	r23
     778:	67 95       	ror	r22
     77a:	b3 95       	inc	r27
     77c:	d9 f7       	brne	.-10     	; 0x774 <__fixunssfsi+0x42>
     77e:	3e f4       	brtc	.+14     	; 0x78e <__fixunssfsi+0x5c>
     780:	90 95       	com	r25
     782:	80 95       	com	r24
     784:	70 95       	com	r23
     786:	61 95       	neg	r22
     788:	7f 4f       	sbci	r23, 0xFF	; 255
     78a:	8f 4f       	sbci	r24, 0xFF	; 255
     78c:	9f 4f       	sbci	r25, 0xFF	; 255
     78e:	08 95       	ret

00000790 <__floatunsisf>:
     790:	e8 94       	clt
     792:	09 c0       	rjmp	.+18     	; 0x7a6 <__floatsisf+0x12>

00000794 <__floatsisf>:
     794:	97 fb       	bst	r25, 7
     796:	3e f4       	brtc	.+14     	; 0x7a6 <__floatsisf+0x12>
     798:	90 95       	com	r25
     79a:	80 95       	com	r24
     79c:	70 95       	com	r23
     79e:	61 95       	neg	r22
     7a0:	7f 4f       	sbci	r23, 0xFF	; 255
     7a2:	8f 4f       	sbci	r24, 0xFF	; 255
     7a4:	9f 4f       	sbci	r25, 0xFF	; 255
     7a6:	99 23       	and	r25, r25
     7a8:	a9 f0       	breq	.+42     	; 0x7d4 <__floatsisf+0x40>
     7aa:	f9 2f       	mov	r31, r25
     7ac:	96 e9       	ldi	r25, 0x96	; 150
     7ae:	bb 27       	eor	r27, r27
     7b0:	93 95       	inc	r25
     7b2:	f6 95       	lsr	r31
     7b4:	87 95       	ror	r24
     7b6:	77 95       	ror	r23
     7b8:	67 95       	ror	r22
     7ba:	b7 95       	ror	r27
     7bc:	f1 11       	cpse	r31, r1
     7be:	f8 cf       	rjmp	.-16     	; 0x7b0 <__floatsisf+0x1c>
     7c0:	fa f4       	brpl	.+62     	; 0x800 <__floatsisf+0x6c>
     7c2:	bb 0f       	add	r27, r27
     7c4:	11 f4       	brne	.+4      	; 0x7ca <__floatsisf+0x36>
     7c6:	60 ff       	sbrs	r22, 0
     7c8:	1b c0       	rjmp	.+54     	; 0x800 <__floatsisf+0x6c>
     7ca:	6f 5f       	subi	r22, 0xFF	; 255
     7cc:	7f 4f       	sbci	r23, 0xFF	; 255
     7ce:	8f 4f       	sbci	r24, 0xFF	; 255
     7d0:	9f 4f       	sbci	r25, 0xFF	; 255
     7d2:	16 c0       	rjmp	.+44     	; 0x800 <__floatsisf+0x6c>
     7d4:	88 23       	and	r24, r24
     7d6:	11 f0       	breq	.+4      	; 0x7dc <__floatsisf+0x48>
     7d8:	96 e9       	ldi	r25, 0x96	; 150
     7da:	11 c0       	rjmp	.+34     	; 0x7fe <__floatsisf+0x6a>
     7dc:	77 23       	and	r23, r23
     7de:	21 f0       	breq	.+8      	; 0x7e8 <__floatsisf+0x54>
     7e0:	9e e8       	ldi	r25, 0x8E	; 142
     7e2:	87 2f       	mov	r24, r23
     7e4:	76 2f       	mov	r23, r22
     7e6:	05 c0       	rjmp	.+10     	; 0x7f2 <__floatsisf+0x5e>
     7e8:	66 23       	and	r22, r22
     7ea:	71 f0       	breq	.+28     	; 0x808 <__floatsisf+0x74>
     7ec:	96 e8       	ldi	r25, 0x86	; 134
     7ee:	86 2f       	mov	r24, r22
     7f0:	70 e0       	ldi	r23, 0x00	; 0
     7f2:	60 e0       	ldi	r22, 0x00	; 0
     7f4:	2a f0       	brmi	.+10     	; 0x800 <__floatsisf+0x6c>
     7f6:	9a 95       	dec	r25
     7f8:	66 0f       	add	r22, r22
     7fa:	77 1f       	adc	r23, r23
     7fc:	88 1f       	adc	r24, r24
     7fe:	da f7       	brpl	.-10     	; 0x7f6 <__floatsisf+0x62>
     800:	88 0f       	add	r24, r24
     802:	96 95       	lsr	r25
     804:	87 95       	ror	r24
     806:	97 f9       	bld	r25, 7
     808:	08 95       	ret

0000080a <__fp_inf>:
     80a:	97 f9       	bld	r25, 7
     80c:	9f 67       	ori	r25, 0x7F	; 127
     80e:	80 e8       	ldi	r24, 0x80	; 128
     810:	70 e0       	ldi	r23, 0x00	; 0
     812:	60 e0       	ldi	r22, 0x00	; 0
     814:	08 95       	ret

00000816 <__fp_nan>:
     816:	9f ef       	ldi	r25, 0xFF	; 255
     818:	80 ec       	ldi	r24, 0xC0	; 192
     81a:	08 95       	ret

0000081c <__fp_powser>:
     81c:	df 93       	push	r29
     81e:	cf 93       	push	r28
     820:	1f 93       	push	r17
     822:	0f 93       	push	r16
     824:	ff 92       	push	r15
     826:	ef 92       	push	r14
     828:	df 92       	push	r13
     82a:	7b 01       	movw	r14, r22
     82c:	8c 01       	movw	r16, r24
     82e:	68 94       	set
     830:	06 c0       	rjmp	.+12     	; 0x83e <__fp_powser+0x22>
     832:	da 2e       	mov	r13, r26
     834:	ef 01       	movw	r28, r30
     836:	0e 94 98 04 	call	0x930	; 0x930 <__mulsf3x>
     83a:	fe 01       	movw	r30, r28
     83c:	e8 94       	clt
     83e:	a5 91       	lpm	r26, Z+
     840:	25 91       	lpm	r18, Z+
     842:	35 91       	lpm	r19, Z+
     844:	45 91       	lpm	r20, Z+
     846:	55 91       	lpm	r21, Z+
     848:	a6 f3       	brts	.-24     	; 0x832 <__fp_powser+0x16>
     84a:	ef 01       	movw	r28, r30
     84c:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__addsf3x>
     850:	fe 01       	movw	r30, r28
     852:	97 01       	movw	r18, r14
     854:	a8 01       	movw	r20, r16
     856:	da 94       	dec	r13
     858:	69 f7       	brne	.-38     	; 0x834 <__fp_powser+0x18>
     85a:	df 90       	pop	r13
     85c:	ef 90       	pop	r14
     85e:	ff 90       	pop	r15
     860:	0f 91       	pop	r16
     862:	1f 91       	pop	r17
     864:	cf 91       	pop	r28
     866:	df 91       	pop	r29
     868:	08 95       	ret

0000086a <__fp_pscA>:
     86a:	00 24       	eor	r0, r0
     86c:	0a 94       	dec	r0
     86e:	16 16       	cp	r1, r22
     870:	17 06       	cpc	r1, r23
     872:	18 06       	cpc	r1, r24
     874:	09 06       	cpc	r0, r25
     876:	08 95       	ret

00000878 <__fp_pscB>:
     878:	00 24       	eor	r0, r0
     87a:	0a 94       	dec	r0
     87c:	12 16       	cp	r1, r18
     87e:	13 06       	cpc	r1, r19
     880:	14 06       	cpc	r1, r20
     882:	05 06       	cpc	r0, r21
     884:	08 95       	ret

00000886 <__fp_round>:
     886:	09 2e       	mov	r0, r25
     888:	03 94       	inc	r0
     88a:	00 0c       	add	r0, r0
     88c:	11 f4       	brne	.+4      	; 0x892 <__fp_round+0xc>
     88e:	88 23       	and	r24, r24
     890:	52 f0       	brmi	.+20     	; 0x8a6 <__fp_round+0x20>
     892:	bb 0f       	add	r27, r27
     894:	40 f4       	brcc	.+16     	; 0x8a6 <__fp_round+0x20>
     896:	bf 2b       	or	r27, r31
     898:	11 f4       	brne	.+4      	; 0x89e <__fp_round+0x18>
     89a:	60 ff       	sbrs	r22, 0
     89c:	04 c0       	rjmp	.+8      	; 0x8a6 <__fp_round+0x20>
     89e:	6f 5f       	subi	r22, 0xFF	; 255
     8a0:	7f 4f       	sbci	r23, 0xFF	; 255
     8a2:	8f 4f       	sbci	r24, 0xFF	; 255
     8a4:	9f 4f       	sbci	r25, 0xFF	; 255
     8a6:	08 95       	ret

000008a8 <__fp_split3>:
     8a8:	57 fd       	sbrc	r21, 7
     8aa:	90 58       	subi	r25, 0x80	; 128
     8ac:	44 0f       	add	r20, r20
     8ae:	55 1f       	adc	r21, r21
     8b0:	59 f0       	breq	.+22     	; 0x8c8 <__fp_splitA+0x10>
     8b2:	5f 3f       	cpi	r21, 0xFF	; 255
     8b4:	71 f0       	breq	.+28     	; 0x8d2 <__fp_splitA+0x1a>
     8b6:	47 95       	ror	r20

000008b8 <__fp_splitA>:
     8b8:	88 0f       	add	r24, r24
     8ba:	97 fb       	bst	r25, 7
     8bc:	99 1f       	adc	r25, r25
     8be:	61 f0       	breq	.+24     	; 0x8d8 <__fp_splitA+0x20>
     8c0:	9f 3f       	cpi	r25, 0xFF	; 255
     8c2:	79 f0       	breq	.+30     	; 0x8e2 <__fp_splitA+0x2a>
     8c4:	87 95       	ror	r24
     8c6:	08 95       	ret
     8c8:	12 16       	cp	r1, r18
     8ca:	13 06       	cpc	r1, r19
     8cc:	14 06       	cpc	r1, r20
     8ce:	55 1f       	adc	r21, r21
     8d0:	f2 cf       	rjmp	.-28     	; 0x8b6 <__fp_split3+0xe>
     8d2:	46 95       	lsr	r20
     8d4:	f1 df       	rcall	.-30     	; 0x8b8 <__fp_splitA>
     8d6:	08 c0       	rjmp	.+16     	; 0x8e8 <__fp_splitA+0x30>
     8d8:	16 16       	cp	r1, r22
     8da:	17 06       	cpc	r1, r23
     8dc:	18 06       	cpc	r1, r24
     8de:	99 1f       	adc	r25, r25
     8e0:	f1 cf       	rjmp	.-30     	; 0x8c4 <__fp_splitA+0xc>
     8e2:	86 95       	lsr	r24
     8e4:	71 05       	cpc	r23, r1
     8e6:	61 05       	cpc	r22, r1
     8e8:	08 94       	sec
     8ea:	08 95       	ret

000008ec <__fp_zero>:
     8ec:	e8 94       	clt

000008ee <__fp_szero>:
     8ee:	bb 27       	eor	r27, r27
     8f0:	66 27       	eor	r22, r22
     8f2:	77 27       	eor	r23, r23
     8f4:	cb 01       	movw	r24, r22
     8f6:	97 f9       	bld	r25, 7
     8f8:	08 95       	ret

000008fa <inverse>:
     8fa:	9b 01       	movw	r18, r22
     8fc:	ac 01       	movw	r20, r24
     8fe:	60 e0       	ldi	r22, 0x00	; 0
     900:	70 e0       	ldi	r23, 0x00	; 0
     902:	80 e8       	ldi	r24, 0x80	; 128
     904:	9f e3       	ldi	r25, 0x3F	; 63
     906:	0c 94 20 03 	jmp	0x640	; 0x640 <__divsf3>

0000090a <__mulsf3>:
     90a:	0e 94 98 04 	call	0x930	; 0x930 <__mulsf3x>
     90e:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_round>
     912:	0e 94 35 04 	call	0x86a	; 0x86a <__fp_pscA>
     916:	38 f0       	brcs	.+14     	; 0x926 <__mulsf3+0x1c>
     918:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_pscB>
     91c:	20 f0       	brcs	.+8      	; 0x926 <__mulsf3+0x1c>
     91e:	95 23       	and	r25, r21
     920:	11 f0       	breq	.+4      	; 0x926 <__mulsf3+0x1c>
     922:	0c 94 05 04 	jmp	0x80a	; 0x80a <__fp_inf>
     926:	0c 94 0b 04 	jmp	0x816	; 0x816 <__fp_nan>
     92a:	11 24       	eor	r1, r1
     92c:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>

00000930 <__mulsf3x>:
     930:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_split3>
     934:	70 f3       	brcs	.-36     	; 0x912 <__mulsf3+0x8>

00000936 <__mulsf3_pse>:
     936:	95 9f       	mul	r25, r21
     938:	c1 f3       	breq	.-16     	; 0x92a <__mulsf3+0x20>
     93a:	95 0f       	add	r25, r21
     93c:	50 e0       	ldi	r21, 0x00	; 0
     93e:	55 1f       	adc	r21, r21
     940:	62 9f       	mul	r22, r18
     942:	f0 01       	movw	r30, r0
     944:	72 9f       	mul	r23, r18
     946:	bb 27       	eor	r27, r27
     948:	f0 0d       	add	r31, r0
     94a:	b1 1d       	adc	r27, r1
     94c:	63 9f       	mul	r22, r19
     94e:	aa 27       	eor	r26, r26
     950:	f0 0d       	add	r31, r0
     952:	b1 1d       	adc	r27, r1
     954:	aa 1f       	adc	r26, r26
     956:	64 9f       	mul	r22, r20
     958:	66 27       	eor	r22, r22
     95a:	b0 0d       	add	r27, r0
     95c:	a1 1d       	adc	r26, r1
     95e:	66 1f       	adc	r22, r22
     960:	82 9f       	mul	r24, r18
     962:	22 27       	eor	r18, r18
     964:	b0 0d       	add	r27, r0
     966:	a1 1d       	adc	r26, r1
     968:	62 1f       	adc	r22, r18
     96a:	73 9f       	mul	r23, r19
     96c:	b0 0d       	add	r27, r0
     96e:	a1 1d       	adc	r26, r1
     970:	62 1f       	adc	r22, r18
     972:	83 9f       	mul	r24, r19
     974:	a0 0d       	add	r26, r0
     976:	61 1d       	adc	r22, r1
     978:	22 1f       	adc	r18, r18
     97a:	74 9f       	mul	r23, r20
     97c:	33 27       	eor	r19, r19
     97e:	a0 0d       	add	r26, r0
     980:	61 1d       	adc	r22, r1
     982:	23 1f       	adc	r18, r19
     984:	84 9f       	mul	r24, r20
     986:	60 0d       	add	r22, r0
     988:	21 1d       	adc	r18, r1
     98a:	82 2f       	mov	r24, r18
     98c:	76 2f       	mov	r23, r22
     98e:	6a 2f       	mov	r22, r26
     990:	11 24       	eor	r1, r1
     992:	9f 57       	subi	r25, 0x7F	; 127
     994:	50 40       	sbci	r21, 0x00	; 0
     996:	9a f0       	brmi	.+38     	; 0x9be <__mulsf3_pse+0x88>
     998:	f1 f0       	breq	.+60     	; 0x9d6 <__mulsf3_pse+0xa0>
     99a:	88 23       	and	r24, r24
     99c:	4a f0       	brmi	.+18     	; 0x9b0 <__mulsf3_pse+0x7a>
     99e:	ee 0f       	add	r30, r30
     9a0:	ff 1f       	adc	r31, r31
     9a2:	bb 1f       	adc	r27, r27
     9a4:	66 1f       	adc	r22, r22
     9a6:	77 1f       	adc	r23, r23
     9a8:	88 1f       	adc	r24, r24
     9aa:	91 50       	subi	r25, 0x01	; 1
     9ac:	50 40       	sbci	r21, 0x00	; 0
     9ae:	a9 f7       	brne	.-22     	; 0x99a <__mulsf3_pse+0x64>
     9b0:	9e 3f       	cpi	r25, 0xFE	; 254
     9b2:	51 05       	cpc	r21, r1
     9b4:	80 f0       	brcs	.+32     	; 0x9d6 <__mulsf3_pse+0xa0>
     9b6:	0c 94 05 04 	jmp	0x80a	; 0x80a <__fp_inf>
     9ba:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>
     9be:	5f 3f       	cpi	r21, 0xFF	; 255
     9c0:	e4 f3       	brlt	.-8      	; 0x9ba <__mulsf3_pse+0x84>
     9c2:	98 3e       	cpi	r25, 0xE8	; 232
     9c4:	d4 f3       	brlt	.-12     	; 0x9ba <__mulsf3_pse+0x84>
     9c6:	86 95       	lsr	r24
     9c8:	77 95       	ror	r23
     9ca:	67 95       	ror	r22
     9cc:	b7 95       	ror	r27
     9ce:	f7 95       	ror	r31
     9d0:	e7 95       	ror	r30
     9d2:	9f 5f       	subi	r25, 0xFF	; 255
     9d4:	c1 f7       	brne	.-16     	; 0x9c6 <__mulsf3_pse+0x90>
     9d6:	fe 2b       	or	r31, r30
     9d8:	88 0f       	add	r24, r24
     9da:	91 1d       	adc	r25, r1
     9dc:	96 95       	lsr	r25
     9de:	87 95       	ror	r24
     9e0:	97 f9       	bld	r25, 7
     9e2:	08 95       	ret

000009e4 <square>:
     9e4:	9b 01       	movw	r18, r22
     9e6:	ac 01       	movw	r20, r24
     9e8:	0c 94 85 04 	jmp	0x90a	; 0x90a <__mulsf3>

000009ec <__subsf3>:
     9ec:	50 58       	subi	r21, 0x80	; 128

000009ee <__addsf3>:
     9ee:	bb 27       	eor	r27, r27
     9f0:	aa 27       	eor	r26, r26
     9f2:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__addsf3x>
     9f6:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_round>
     9fa:	0e 94 35 04 	call	0x86a	; 0x86a <__fp_pscA>
     9fe:	38 f0       	brcs	.+14     	; 0xa0e <__addsf3+0x20>
     a00:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_pscB>
     a04:	20 f0       	brcs	.+8      	; 0xa0e <__addsf3+0x20>
     a06:	39 f4       	brne	.+14     	; 0xa16 <__addsf3+0x28>
     a08:	9f 3f       	cpi	r25, 0xFF	; 255
     a0a:	19 f4       	brne	.+6      	; 0xa12 <__addsf3+0x24>
     a0c:	26 f4       	brtc	.+8      	; 0xa16 <__addsf3+0x28>
     a0e:	0c 94 0b 04 	jmp	0x816	; 0x816 <__fp_nan>
     a12:	0e f4       	brtc	.+2      	; 0xa16 <__addsf3+0x28>
     a14:	e0 95       	com	r30
     a16:	e7 fb       	bst	r30, 7
     a18:	0c 94 05 04 	jmp	0x80a	; 0x80a <__fp_inf>

00000a1c <__addsf3x>:
     a1c:	e9 2f       	mov	r30, r25
     a1e:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_split3>
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__addsf3+0xc>
     a24:	ba 17       	cp	r27, r26
     a26:	62 07       	cpc	r22, r18
     a28:	73 07       	cpc	r23, r19
     a2a:	84 07       	cpc	r24, r20
     a2c:	95 07       	cpc	r25, r21
     a2e:	20 f0       	brcs	.+8      	; 0xa38 <__addsf3x+0x1c>
     a30:	79 f4       	brne	.+30     	; 0xa50 <__addsf3x+0x34>
     a32:	a6 f5       	brtc	.+104    	; 0xa9c <__addsf3x+0x80>
     a34:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__fp_zero>
     a38:	0e f4       	brtc	.+2      	; 0xa3c <__addsf3x+0x20>
     a3a:	e0 95       	com	r30
     a3c:	0b 2e       	mov	r0, r27
     a3e:	ba 2f       	mov	r27, r26
     a40:	a0 2d       	mov	r26, r0
     a42:	0b 01       	movw	r0, r22
     a44:	b9 01       	movw	r22, r18
     a46:	90 01       	movw	r18, r0
     a48:	0c 01       	movw	r0, r24
     a4a:	ca 01       	movw	r24, r20
     a4c:	a0 01       	movw	r20, r0
     a4e:	11 24       	eor	r1, r1
     a50:	ff 27       	eor	r31, r31
     a52:	59 1b       	sub	r21, r25
     a54:	99 f0       	breq	.+38     	; 0xa7c <__addsf3x+0x60>
     a56:	59 3f       	cpi	r21, 0xF9	; 249
     a58:	50 f4       	brcc	.+20     	; 0xa6e <__addsf3x+0x52>
     a5a:	50 3e       	cpi	r21, 0xE0	; 224
     a5c:	68 f1       	brcs	.+90     	; 0xab8 <__addsf3x+0x9c>
     a5e:	1a 16       	cp	r1, r26
     a60:	f0 40       	sbci	r31, 0x00	; 0
     a62:	a2 2f       	mov	r26, r18
     a64:	23 2f       	mov	r18, r19
     a66:	34 2f       	mov	r19, r20
     a68:	44 27       	eor	r20, r20
     a6a:	58 5f       	subi	r21, 0xF8	; 248
     a6c:	f3 cf       	rjmp	.-26     	; 0xa54 <__addsf3x+0x38>
     a6e:	46 95       	lsr	r20
     a70:	37 95       	ror	r19
     a72:	27 95       	ror	r18
     a74:	a7 95       	ror	r26
     a76:	f0 40       	sbci	r31, 0x00	; 0
     a78:	53 95       	inc	r21
     a7a:	c9 f7       	brne	.-14     	; 0xa6e <__addsf3x+0x52>
     a7c:	7e f4       	brtc	.+30     	; 0xa9c <__addsf3x+0x80>
     a7e:	1f 16       	cp	r1, r31
     a80:	ba 0b       	sbc	r27, r26
     a82:	62 0b       	sbc	r22, r18
     a84:	73 0b       	sbc	r23, r19
     a86:	84 0b       	sbc	r24, r20
     a88:	ba f0       	brmi	.+46     	; 0xab8 <__addsf3x+0x9c>
     a8a:	91 50       	subi	r25, 0x01	; 1
     a8c:	a1 f0       	breq	.+40     	; 0xab6 <__addsf3x+0x9a>
     a8e:	ff 0f       	add	r31, r31
     a90:	bb 1f       	adc	r27, r27
     a92:	66 1f       	adc	r22, r22
     a94:	77 1f       	adc	r23, r23
     a96:	88 1f       	adc	r24, r24
     a98:	c2 f7       	brpl	.-16     	; 0xa8a <__addsf3x+0x6e>
     a9a:	0e c0       	rjmp	.+28     	; 0xab8 <__addsf3x+0x9c>
     a9c:	ba 0f       	add	r27, r26
     a9e:	62 1f       	adc	r22, r18
     aa0:	73 1f       	adc	r23, r19
     aa2:	84 1f       	adc	r24, r20
     aa4:	48 f4       	brcc	.+18     	; 0xab8 <__addsf3x+0x9c>
     aa6:	87 95       	ror	r24
     aa8:	77 95       	ror	r23
     aaa:	67 95       	ror	r22
     aac:	b7 95       	ror	r27
     aae:	f7 95       	ror	r31
     ab0:	9e 3f       	cpi	r25, 0xFE	; 254
     ab2:	08 f0       	brcs	.+2      	; 0xab6 <__addsf3x+0x9a>
     ab4:	b0 cf       	rjmp	.-160    	; 0xa16 <__addsf3+0x28>
     ab6:	93 95       	inc	r25
     ab8:	88 0f       	add	r24, r24
     aba:	08 f0       	brcs	.+2      	; 0xabe <__addsf3x+0xa2>
     abc:	99 27       	eor	r25, r25
     abe:	ee 0f       	add	r30, r30
     ac0:	97 95       	ror	r25
     ac2:	87 95       	ror	r24
     ac4:	08 95       	ret

00000ac6 <vfprintf>:
     ac6:	a3 e1       	ldi	r26, 0x13	; 19
     ac8:	b0 e0       	ldi	r27, 0x00	; 0
     aca:	e9 e6       	ldi	r30, 0x69	; 105
     acc:	f5 e0       	ldi	r31, 0x05	; 5
     ace:	0c 94 df 08 	jmp	0x11be	; 0x11be <__prologue_saves__>
     ad2:	6c 01       	movw	r12, r24
     ad4:	4b 01       	movw	r8, r22
     ad6:	2a 01       	movw	r4, r20
     ad8:	fc 01       	movw	r30, r24
     ada:	17 82       	std	Z+7, r1	; 0x07
     adc:	16 82       	std	Z+6, r1	; 0x06
     ade:	83 81       	ldd	r24, Z+3	; 0x03
     ae0:	81 ff       	sbrs	r24, 1
     ae2:	43 c3       	rjmp	.+1670   	; 0x116a <vfprintf+0x6a4>
     ae4:	ae 01       	movw	r20, r28
     ae6:	4f 5f       	subi	r20, 0xFF	; 255
     ae8:	5f 4f       	sbci	r21, 0xFF	; 255
     aea:	3a 01       	movw	r6, r20
     aec:	f6 01       	movw	r30, r12
     aee:	93 81       	ldd	r25, Z+3	; 0x03
     af0:	f4 01       	movw	r30, r8
     af2:	93 fd       	sbrc	r25, 3
     af4:	85 91       	lpm	r24, Z+
     af6:	93 ff       	sbrs	r25, 3
     af8:	81 91       	ld	r24, Z+
     afa:	4f 01       	movw	r8, r30
     afc:	88 23       	and	r24, r24
     afe:	09 f4       	brne	.+2      	; 0xb02 <vfprintf+0x3c>
     b00:	30 c3       	rjmp	.+1632   	; 0x1162 <vfprintf+0x69c>
     b02:	85 32       	cpi	r24, 0x25	; 37
     b04:	39 f4       	brne	.+14     	; 0xb14 <vfprintf+0x4e>
     b06:	93 fd       	sbrc	r25, 3
     b08:	85 91       	lpm	r24, Z+
     b0a:	93 ff       	sbrs	r25, 3
     b0c:	81 91       	ld	r24, Z+
     b0e:	4f 01       	movw	r8, r30
     b10:	85 32       	cpi	r24, 0x25	; 37
     b12:	39 f4       	brne	.+14     	; 0xb22 <vfprintf+0x5c>
     b14:	b6 01       	movw	r22, r12
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     b1c:	52 01       	movw	r10, r4
     b1e:	25 01       	movw	r4, r10
     b20:	e5 cf       	rjmp	.-54     	; 0xaec <vfprintf+0x26>
     b22:	10 e0       	ldi	r17, 0x00	; 0
     b24:	f1 2c       	mov	r15, r1
     b26:	20 e0       	ldi	r18, 0x00	; 0
     b28:	20 32       	cpi	r18, 0x20	; 32
     b2a:	a0 f4       	brcc	.+40     	; 0xb54 <vfprintf+0x8e>
     b2c:	8b 32       	cpi	r24, 0x2B	; 43
     b2e:	69 f0       	breq	.+26     	; 0xb4a <vfprintf+0x84>
     b30:	30 f4       	brcc	.+12     	; 0xb3e <vfprintf+0x78>
     b32:	80 32       	cpi	r24, 0x20	; 32
     b34:	59 f0       	breq	.+22     	; 0xb4c <vfprintf+0x86>
     b36:	83 32       	cpi	r24, 0x23	; 35
     b38:	69 f4       	brne	.+26     	; 0xb54 <vfprintf+0x8e>
     b3a:	20 61       	ori	r18, 0x10	; 16
     b3c:	2c c0       	rjmp	.+88     	; 0xb96 <vfprintf+0xd0>
     b3e:	8d 32       	cpi	r24, 0x2D	; 45
     b40:	39 f0       	breq	.+14     	; 0xb50 <vfprintf+0x8a>
     b42:	80 33       	cpi	r24, 0x30	; 48
     b44:	39 f4       	brne	.+14     	; 0xb54 <vfprintf+0x8e>
     b46:	21 60       	ori	r18, 0x01	; 1
     b48:	26 c0       	rjmp	.+76     	; 0xb96 <vfprintf+0xd0>
     b4a:	22 60       	ori	r18, 0x02	; 2
     b4c:	24 60       	ori	r18, 0x04	; 4
     b4e:	23 c0       	rjmp	.+70     	; 0xb96 <vfprintf+0xd0>
     b50:	28 60       	ori	r18, 0x08	; 8
     b52:	21 c0       	rjmp	.+66     	; 0xb96 <vfprintf+0xd0>
     b54:	27 fd       	sbrc	r18, 7
     b56:	27 c0       	rjmp	.+78     	; 0xba6 <vfprintf+0xe0>
     b58:	30 ed       	ldi	r19, 0xD0	; 208
     b5a:	38 0f       	add	r19, r24
     b5c:	3a 30       	cpi	r19, 0x0A	; 10
     b5e:	78 f4       	brcc	.+30     	; 0xb7e <vfprintf+0xb8>
     b60:	26 ff       	sbrs	r18, 6
     b62:	06 c0       	rjmp	.+12     	; 0xb70 <vfprintf+0xaa>
     b64:	fa e0       	ldi	r31, 0x0A	; 10
     b66:	1f 9f       	mul	r17, r31
     b68:	30 0d       	add	r19, r0
     b6a:	11 24       	eor	r1, r1
     b6c:	13 2f       	mov	r17, r19
     b6e:	13 c0       	rjmp	.+38     	; 0xb96 <vfprintf+0xd0>
     b70:	4a e0       	ldi	r20, 0x0A	; 10
     b72:	f4 9e       	mul	r15, r20
     b74:	30 0d       	add	r19, r0
     b76:	11 24       	eor	r1, r1
     b78:	f3 2e       	mov	r15, r19
     b7a:	20 62       	ori	r18, 0x20	; 32
     b7c:	0c c0       	rjmp	.+24     	; 0xb96 <vfprintf+0xd0>
     b7e:	8e 32       	cpi	r24, 0x2E	; 46
     b80:	21 f4       	brne	.+8      	; 0xb8a <vfprintf+0xc4>
     b82:	26 fd       	sbrc	r18, 6
     b84:	ee c2       	rjmp	.+1500   	; 0x1162 <vfprintf+0x69c>
     b86:	20 64       	ori	r18, 0x40	; 64
     b88:	06 c0       	rjmp	.+12     	; 0xb96 <vfprintf+0xd0>
     b8a:	8c 36       	cpi	r24, 0x6C	; 108
     b8c:	11 f4       	brne	.+4      	; 0xb92 <vfprintf+0xcc>
     b8e:	20 68       	ori	r18, 0x80	; 128
     b90:	02 c0       	rjmp	.+4      	; 0xb96 <vfprintf+0xd0>
     b92:	88 36       	cpi	r24, 0x68	; 104
     b94:	41 f4       	brne	.+16     	; 0xba6 <vfprintf+0xe0>
     b96:	f4 01       	movw	r30, r8
     b98:	93 fd       	sbrc	r25, 3
     b9a:	85 91       	lpm	r24, Z+
     b9c:	93 ff       	sbrs	r25, 3
     b9e:	81 91       	ld	r24, Z+
     ba0:	4f 01       	movw	r8, r30
     ba2:	81 11       	cpse	r24, r1
     ba4:	c1 cf       	rjmp	.-126    	; 0xb28 <vfprintf+0x62>
     ba6:	9b eb       	ldi	r25, 0xBB	; 187
     ba8:	98 0f       	add	r25, r24
     baa:	93 30       	cpi	r25, 0x03	; 3
     bac:	18 f4       	brcc	.+6      	; 0xbb4 <vfprintf+0xee>
     bae:	20 61       	ori	r18, 0x10	; 16
     bb0:	80 5e       	subi	r24, 0xE0	; 224
     bb2:	06 c0       	rjmp	.+12     	; 0xbc0 <vfprintf+0xfa>
     bb4:	9b e9       	ldi	r25, 0x9B	; 155
     bb6:	98 0f       	add	r25, r24
     bb8:	93 30       	cpi	r25, 0x03	; 3
     bba:	08 f0       	brcs	.+2      	; 0xbbe <vfprintf+0xf8>
     bbc:	71 c1       	rjmp	.+738    	; 0xea0 <vfprintf+0x3da>
     bbe:	2f 7e       	andi	r18, 0xEF	; 239
     bc0:	26 ff       	sbrs	r18, 6
     bc2:	16 e0       	ldi	r17, 0x06	; 6
     bc4:	2f 73       	andi	r18, 0x3F	; 63
     bc6:	32 2e       	mov	r3, r18
     bc8:	85 36       	cpi	r24, 0x65	; 101
     bca:	19 f4       	brne	.+6      	; 0xbd2 <vfprintf+0x10c>
     bcc:	20 64       	ori	r18, 0x40	; 64
     bce:	32 2e       	mov	r3, r18
     bd0:	08 c0       	rjmp	.+16     	; 0xbe2 <vfprintf+0x11c>
     bd2:	86 36       	cpi	r24, 0x66	; 102
     bd4:	21 f4       	brne	.+8      	; 0xbde <vfprintf+0x118>
     bd6:	f2 2f       	mov	r31, r18
     bd8:	f0 68       	ori	r31, 0x80	; 128
     bda:	3f 2e       	mov	r3, r31
     bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <vfprintf+0x11c>
     bde:	11 11       	cpse	r17, r1
     be0:	11 50       	subi	r17, 0x01	; 1
     be2:	37 fe       	sbrs	r3, 7
     be4:	07 c0       	rjmp	.+14     	; 0xbf4 <vfprintf+0x12e>
     be6:	1c 33       	cpi	r17, 0x3C	; 60
     be8:	50 f4       	brcc	.+20     	; 0xbfe <vfprintf+0x138>
     bea:	ee 24       	eor	r14, r14
     bec:	e3 94       	inc	r14
     bee:	e1 0e       	add	r14, r17
     bf0:	27 e0       	ldi	r18, 0x07	; 7
     bf2:	0b c0       	rjmp	.+22     	; 0xc0a <vfprintf+0x144>
     bf4:	18 30       	cpi	r17, 0x08	; 8
     bf6:	38 f0       	brcs	.+14     	; 0xc06 <vfprintf+0x140>
     bf8:	27 e0       	ldi	r18, 0x07	; 7
     bfa:	17 e0       	ldi	r17, 0x07	; 7
     bfc:	05 c0       	rjmp	.+10     	; 0xc08 <vfprintf+0x142>
     bfe:	27 e0       	ldi	r18, 0x07	; 7
     c00:	4c e3       	ldi	r20, 0x3C	; 60
     c02:	e4 2e       	mov	r14, r20
     c04:	02 c0       	rjmp	.+4      	; 0xc0a <vfprintf+0x144>
     c06:	21 2f       	mov	r18, r17
     c08:	e1 2c       	mov	r14, r1
     c0a:	52 01       	movw	r10, r4
     c0c:	44 e0       	ldi	r20, 0x04	; 4
     c0e:	a4 0e       	add	r10, r20
     c10:	b1 1c       	adc	r11, r1
     c12:	f2 01       	movw	r30, r4
     c14:	60 81       	ld	r22, Z
     c16:	71 81       	ldd	r23, Z+1	; 0x01
     c18:	82 81       	ldd	r24, Z+2	; 0x02
     c1a:	93 81       	ldd	r25, Z+3	; 0x03
     c1c:	0e 2d       	mov	r16, r14
     c1e:	a3 01       	movw	r20, r6
     c20:	0e 94 16 09 	call	0x122c	; 0x122c <__ftoa_engine>
     c24:	2c 01       	movw	r4, r24
     c26:	09 81       	ldd	r16, Y+1	; 0x01
     c28:	00 ff       	sbrs	r16, 0
     c2a:	02 c0       	rjmp	.+4      	; 0xc30 <vfprintf+0x16a>
     c2c:	03 ff       	sbrs	r16, 3
     c2e:	07 c0       	rjmp	.+14     	; 0xc3e <vfprintf+0x178>
     c30:	31 fc       	sbrc	r3, 1
     c32:	08 c0       	rjmp	.+16     	; 0xc44 <vfprintf+0x17e>
     c34:	32 fe       	sbrs	r3, 2
     c36:	09 c0       	rjmp	.+18     	; 0xc4a <vfprintf+0x184>
     c38:	30 e2       	ldi	r19, 0x20	; 32
     c3a:	23 2e       	mov	r2, r19
     c3c:	07 c0       	rjmp	.+14     	; 0xc4c <vfprintf+0x186>
     c3e:	2d e2       	ldi	r18, 0x2D	; 45
     c40:	22 2e       	mov	r2, r18
     c42:	04 c0       	rjmp	.+8      	; 0xc4c <vfprintf+0x186>
     c44:	9b e2       	ldi	r25, 0x2B	; 43
     c46:	29 2e       	mov	r2, r25
     c48:	01 c0       	rjmp	.+2      	; 0xc4c <vfprintf+0x186>
     c4a:	21 2c       	mov	r2, r1
     c4c:	80 2f       	mov	r24, r16
     c4e:	8c 70       	andi	r24, 0x0C	; 12
     c50:	19 f0       	breq	.+6      	; 0xc58 <vfprintf+0x192>
     c52:	21 10       	cpse	r2, r1
     c54:	68 c2       	rjmp	.+1232   	; 0x1126 <vfprintf+0x660>
     c56:	a8 c2       	rjmp	.+1360   	; 0x11a8 <vfprintf+0x6e2>
     c58:	37 fe       	sbrs	r3, 7
     c5a:	0f c0       	rjmp	.+30     	; 0xc7a <vfprintf+0x1b4>
     c5c:	e4 0c       	add	r14, r4
     c5e:	04 ff       	sbrs	r16, 4
     c60:	04 c0       	rjmp	.+8      	; 0xc6a <vfprintf+0x1a4>
     c62:	8a 81       	ldd	r24, Y+2	; 0x02
     c64:	81 33       	cpi	r24, 0x31	; 49
     c66:	09 f4       	brne	.+2      	; 0xc6a <vfprintf+0x1a4>
     c68:	ea 94       	dec	r14
     c6a:	1e 14       	cp	r1, r14
     c6c:	74 f5       	brge	.+92     	; 0xcca <vfprintf+0x204>
     c6e:	f8 e0       	ldi	r31, 0x08	; 8
     c70:	fe 15       	cp	r31, r14
     c72:	78 f5       	brcc	.+94     	; 0xcd2 <vfprintf+0x20c>
     c74:	88 e0       	ldi	r24, 0x08	; 8
     c76:	e8 2e       	mov	r14, r24
     c78:	2c c0       	rjmp	.+88     	; 0xcd2 <vfprintf+0x20c>
     c7a:	36 fc       	sbrc	r3, 6
     c7c:	2a c0       	rjmp	.+84     	; 0xcd2 <vfprintf+0x20c>
     c7e:	81 2f       	mov	r24, r17
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	84 15       	cp	r24, r4
     c84:	95 05       	cpc	r25, r5
     c86:	9c f0       	brlt	.+38     	; 0xcae <vfprintf+0x1e8>
     c88:	2c ef       	ldi	r18, 0xFC	; 252
     c8a:	42 16       	cp	r4, r18
     c8c:	2f ef       	ldi	r18, 0xFF	; 255
     c8e:	52 06       	cpc	r5, r18
     c90:	74 f0       	brlt	.+28     	; 0xcae <vfprintf+0x1e8>
     c92:	43 2d       	mov	r20, r3
     c94:	40 68       	ori	r20, 0x80	; 128
     c96:	34 2e       	mov	r3, r20
     c98:	0a c0       	rjmp	.+20     	; 0xcae <vfprintf+0x1e8>
     c9a:	e2 e0       	ldi	r30, 0x02	; 2
     c9c:	f0 e0       	ldi	r31, 0x00	; 0
     c9e:	ec 0f       	add	r30, r28
     ca0:	fd 1f       	adc	r31, r29
     ca2:	e1 0f       	add	r30, r17
     ca4:	f1 1d       	adc	r31, r1
     ca6:	80 81       	ld	r24, Z
     ca8:	80 33       	cpi	r24, 0x30	; 48
     caa:	19 f4       	brne	.+6      	; 0xcb2 <vfprintf+0x1ec>
     cac:	11 50       	subi	r17, 0x01	; 1
     cae:	11 11       	cpse	r17, r1
     cb0:	f4 cf       	rjmp	.-24     	; 0xc9a <vfprintf+0x1d4>
     cb2:	37 fe       	sbrs	r3, 7
     cb4:	0e c0       	rjmp	.+28     	; 0xcd2 <vfprintf+0x20c>
     cb6:	ee 24       	eor	r14, r14
     cb8:	e3 94       	inc	r14
     cba:	e1 0e       	add	r14, r17
     cbc:	81 2f       	mov	r24, r17
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	48 16       	cp	r4, r24
     cc2:	59 06       	cpc	r5, r25
     cc4:	2c f4       	brge	.+10     	; 0xcd0 <vfprintf+0x20a>
     cc6:	14 19       	sub	r17, r4
     cc8:	04 c0       	rjmp	.+8      	; 0xcd2 <vfprintf+0x20c>
     cca:	ee 24       	eor	r14, r14
     ccc:	e3 94       	inc	r14
     cce:	01 c0       	rjmp	.+2      	; 0xcd2 <vfprintf+0x20c>
     cd0:	10 e0       	ldi	r17, 0x00	; 0
     cd2:	37 fe       	sbrs	r3, 7
     cd4:	06 c0       	rjmp	.+12     	; 0xce2 <vfprintf+0x21c>
     cd6:	14 14       	cp	r1, r4
     cd8:	15 04       	cpc	r1, r5
     cda:	34 f4       	brge	.+12     	; 0xce8 <vfprintf+0x222>
     cdc:	c2 01       	movw	r24, r4
     cde:	01 96       	adiw	r24, 0x01	; 1
     ce0:	05 c0       	rjmp	.+10     	; 0xcec <vfprintf+0x226>
     ce2:	85 e0       	ldi	r24, 0x05	; 5
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	02 c0       	rjmp	.+4      	; 0xcec <vfprintf+0x226>
     ce8:	81 e0       	ldi	r24, 0x01	; 1
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	21 10       	cpse	r2, r1
     cee:	01 96       	adiw	r24, 0x01	; 1
     cf0:	11 23       	and	r17, r17
     cf2:	31 f0       	breq	.+12     	; 0xd00 <vfprintf+0x23a>
     cf4:	21 2f       	mov	r18, r17
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	2f 5f       	subi	r18, 0xFF	; 255
     cfa:	3f 4f       	sbci	r19, 0xFF	; 255
     cfc:	82 0f       	add	r24, r18
     cfe:	93 1f       	adc	r25, r19
     d00:	2f 2d       	mov	r18, r15
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	82 17       	cp	r24, r18
     d06:	93 07       	cpc	r25, r19
     d08:	14 f4       	brge	.+4      	; 0xd0e <vfprintf+0x248>
     d0a:	f8 1a       	sub	r15, r24
     d0c:	01 c0       	rjmp	.+2      	; 0xd10 <vfprintf+0x24a>
     d0e:	f1 2c       	mov	r15, r1
     d10:	83 2d       	mov	r24, r3
     d12:	89 70       	andi	r24, 0x09	; 9
     d14:	49 f4       	brne	.+18     	; 0xd28 <vfprintf+0x262>
     d16:	ff 20       	and	r15, r15
     d18:	39 f0       	breq	.+14     	; 0xd28 <vfprintf+0x262>
     d1a:	b6 01       	movw	r22, r12
     d1c:	80 e2       	ldi	r24, 0x20	; 32
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     d24:	fa 94       	dec	r15
     d26:	f7 cf       	rjmp	.-18     	; 0xd16 <vfprintf+0x250>
     d28:	22 20       	and	r2, r2
     d2a:	29 f0       	breq	.+10     	; 0xd36 <vfprintf+0x270>
     d2c:	b6 01       	movw	r22, r12
     d2e:	82 2d       	mov	r24, r2
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     d36:	33 fc       	sbrc	r3, 3
     d38:	09 c0       	rjmp	.+18     	; 0xd4c <vfprintf+0x286>
     d3a:	ff 20       	and	r15, r15
     d3c:	39 f0       	breq	.+14     	; 0xd4c <vfprintf+0x286>
     d3e:	b6 01       	movw	r22, r12
     d40:	80 e3       	ldi	r24, 0x30	; 48
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     d48:	fa 94       	dec	r15
     d4a:	f7 cf       	rjmp	.-18     	; 0xd3a <vfprintf+0x274>
     d4c:	37 fe       	sbrs	r3, 7
     d4e:	5a c0       	rjmp	.+180    	; 0xe04 <vfprintf+0x33e>
     d50:	94 2d       	mov	r25, r4
     d52:	85 2d       	mov	r24, r5
     d54:	57 fe       	sbrs	r5, 7
     d56:	02 c0       	rjmp	.+4      	; 0xd5c <vfprintf+0x296>
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	80 e0       	ldi	r24, 0x00	; 0
     d5c:	29 2e       	mov	r2, r25
     d5e:	38 2e       	mov	r3, r24
     d60:	20 e0       	ldi	r18, 0x00	; 0
     d62:	30 e0       	ldi	r19, 0x00	; 0
     d64:	a2 01       	movw	r20, r4
     d66:	4e 19       	sub	r20, r14
     d68:	51 09       	sbc	r21, r1
     d6a:	5d 87       	std	Y+13, r21	; 0x0d
     d6c:	4c 87       	std	Y+12, r20	; 0x0c
     d6e:	a2 01       	movw	r20, r4
     d70:	42 19       	sub	r20, r2
     d72:	53 09       	sbc	r21, r3
     d74:	5f 87       	std	Y+15, r21	; 0x0f
     d76:	4e 87       	std	Y+14, r20	; 0x0e
     d78:	61 2f       	mov	r22, r17
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	44 27       	eor	r20, r20
     d7e:	55 27       	eor	r21, r21
     d80:	46 1b       	sub	r20, r22
     d82:	57 0b       	sbc	r21, r23
     d84:	59 8b       	std	Y+17, r21	; 0x11
     d86:	48 8b       	std	Y+16, r20	; 0x10
     d88:	5f ef       	ldi	r21, 0xFF	; 255
     d8a:	25 16       	cp	r2, r21
     d8c:	35 06       	cpc	r3, r21
     d8e:	49 f4       	brne	.+18     	; 0xda2 <vfprintf+0x2dc>
     d90:	b6 01       	movw	r22, r12
     d92:	8e e2       	ldi	r24, 0x2E	; 46
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	2a 8b       	std	Y+18, r18	; 0x12
     d98:	3b 8b       	std	Y+19, r19	; 0x13
     d9a:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     d9e:	3b 89       	ldd	r19, Y+19	; 0x13
     da0:	2a 89       	ldd	r18, Y+18	; 0x12
     da2:	42 14       	cp	r4, r2
     da4:	53 04       	cpc	r5, r3
     da6:	6c f0       	brlt	.+26     	; 0xdc2 <vfprintf+0x2fc>
     da8:	4c 85       	ldd	r20, Y+12	; 0x0c
     daa:	5d 85       	ldd	r21, Y+13	; 0x0d
     dac:	42 15       	cp	r20, r2
     dae:	53 05       	cpc	r21, r3
     db0:	44 f4       	brge	.+16     	; 0xdc2 <vfprintf+0x2fc>
     db2:	ee 85       	ldd	r30, Y+14	; 0x0e
     db4:	ff 85       	ldd	r31, Y+15	; 0x0f
     db6:	e2 0f       	add	r30, r18
     db8:	f3 1f       	adc	r31, r19
     dba:	e6 0d       	add	r30, r6
     dbc:	f7 1d       	adc	r31, r7
     dbe:	81 81       	ldd	r24, Z+1	; 0x01
     dc0:	01 c0       	rjmp	.+2      	; 0xdc4 <vfprintf+0x2fe>
     dc2:	80 e3       	ldi	r24, 0x30	; 48
     dc4:	51 e0       	ldi	r21, 0x01	; 1
     dc6:	25 1a       	sub	r2, r21
     dc8:	31 08       	sbc	r3, r1
     dca:	2f 5f       	subi	r18, 0xFF	; 255
     dcc:	3f 4f       	sbci	r19, 0xFF	; 255
     dce:	48 89       	ldd	r20, Y+16	; 0x10
     dd0:	59 89       	ldd	r21, Y+17	; 0x11
     dd2:	24 16       	cp	r2, r20
     dd4:	35 06       	cpc	r3, r21
     dd6:	4c f0       	brlt	.+18     	; 0xdea <vfprintf+0x324>
     dd8:	b6 01       	movw	r22, r12
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	2a 8b       	std	Y+18, r18	; 0x12
     dde:	3b 8b       	std	Y+19, r19	; 0x13
     de0:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     de4:	2a 89       	ldd	r18, Y+18	; 0x12
     de6:	3b 89       	ldd	r19, Y+19	; 0x13
     de8:	cf cf       	rjmp	.-98     	; 0xd88 <vfprintf+0x2c2>
     dea:	24 14       	cp	r2, r4
     dec:	35 04       	cpc	r3, r5
     dee:	39 f4       	brne	.+14     	; 0xdfe <vfprintf+0x338>
     df0:	9a 81       	ldd	r25, Y+2	; 0x02
     df2:	96 33       	cpi	r25, 0x36	; 54
     df4:	18 f4       	brcc	.+6      	; 0xdfc <vfprintf+0x336>
     df6:	95 33       	cpi	r25, 0x35	; 53
     df8:	11 f4       	brne	.+4      	; 0xdfe <vfprintf+0x338>
     dfa:	04 ff       	sbrs	r16, 4
     dfc:	81 e3       	ldi	r24, 0x31	; 49
     dfe:	b6 01       	movw	r22, r12
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	4b c0       	rjmp	.+150    	; 0xe9a <vfprintf+0x3d4>
     e04:	8a 81       	ldd	r24, Y+2	; 0x02
     e06:	81 33       	cpi	r24, 0x31	; 49
     e08:	09 f0       	breq	.+2      	; 0xe0c <vfprintf+0x346>
     e0a:	0f 7e       	andi	r16, 0xEF	; 239
     e0c:	b6 01       	movw	r22, r12
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     e14:	11 11       	cpse	r17, r1
     e16:	05 c0       	rjmp	.+10     	; 0xe22 <vfprintf+0x35c>
     e18:	34 fc       	sbrc	r3, 4
     e1a:	18 c0       	rjmp	.+48     	; 0xe4c <vfprintf+0x386>
     e1c:	85 e6       	ldi	r24, 0x65	; 101
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	17 c0       	rjmp	.+46     	; 0xe50 <vfprintf+0x38a>
     e22:	b6 01       	movw	r22, r12
     e24:	8e e2       	ldi	r24, 0x2E	; 46
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     e2c:	82 e0       	ldi	r24, 0x02	; 2
     e2e:	ee 24       	eor	r14, r14
     e30:	e3 94       	inc	r14
     e32:	e8 0e       	add	r14, r24
     e34:	f3 01       	movw	r30, r6
     e36:	e8 0f       	add	r30, r24
     e38:	f1 1d       	adc	r31, r1
     e3a:	80 81       	ld	r24, Z
     e3c:	b6 01       	movw	r22, r12
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     e44:	11 50       	subi	r17, 0x01	; 1
     e46:	8e 2d       	mov	r24, r14
     e48:	91 f7       	brne	.-28     	; 0xe2e <vfprintf+0x368>
     e4a:	e6 cf       	rjmp	.-52     	; 0xe18 <vfprintf+0x352>
     e4c:	85 e4       	ldi	r24, 0x45	; 69
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	b6 01       	movw	r22, r12
     e52:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     e56:	57 fc       	sbrc	r5, 7
     e58:	05 c0       	rjmp	.+10     	; 0xe64 <vfprintf+0x39e>
     e5a:	41 14       	cp	r4, r1
     e5c:	51 04       	cpc	r5, r1
     e5e:	39 f4       	brne	.+14     	; 0xe6e <vfprintf+0x3a8>
     e60:	04 ff       	sbrs	r16, 4
     e62:	05 c0       	rjmp	.+10     	; 0xe6e <vfprintf+0x3a8>
     e64:	51 94       	neg	r5
     e66:	41 94       	neg	r4
     e68:	51 08       	sbc	r5, r1
     e6a:	8d e2       	ldi	r24, 0x2D	; 45
     e6c:	01 c0       	rjmp	.+2      	; 0xe70 <vfprintf+0x3aa>
     e6e:	8b e2       	ldi	r24, 0x2B	; 43
     e70:	b6 01       	movw	r22, r12
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     e78:	80 e3       	ldi	r24, 0x30	; 48
     e7a:	9a e0       	ldi	r25, 0x0A	; 10
     e7c:	49 16       	cp	r4, r25
     e7e:	51 04       	cpc	r5, r1
     e80:	2c f0       	brlt	.+10     	; 0xe8c <vfprintf+0x3c6>
     e82:	8f 5f       	subi	r24, 0xFF	; 255
     e84:	5a e0       	ldi	r21, 0x0A	; 10
     e86:	45 1a       	sub	r4, r21
     e88:	51 08       	sbc	r5, r1
     e8a:	f7 cf       	rjmp	.-18     	; 0xe7a <vfprintf+0x3b4>
     e8c:	b6 01       	movw	r22, r12
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     e94:	b6 01       	movw	r22, r12
     e96:	c2 01       	movw	r24, r4
     e98:	c0 96       	adiw	r24, 0x30	; 48
     e9a:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     e9e:	57 c1       	rjmp	.+686    	; 0x114e <vfprintf+0x688>
     ea0:	83 36       	cpi	r24, 0x63	; 99
     ea2:	31 f0       	breq	.+12     	; 0xeb0 <vfprintf+0x3ea>
     ea4:	83 37       	cpi	r24, 0x73	; 115
     ea6:	79 f0       	breq	.+30     	; 0xec6 <vfprintf+0x400>
     ea8:	83 35       	cpi	r24, 0x53	; 83
     eaa:	09 f0       	breq	.+2      	; 0xeae <vfprintf+0x3e8>
     eac:	58 c0       	rjmp	.+176    	; 0xf5e <vfprintf+0x498>
     eae:	21 c0       	rjmp	.+66     	; 0xef2 <vfprintf+0x42c>
     eb0:	52 01       	movw	r10, r4
     eb2:	e2 e0       	ldi	r30, 0x02	; 2
     eb4:	ae 0e       	add	r10, r30
     eb6:	b1 1c       	adc	r11, r1
     eb8:	f2 01       	movw	r30, r4
     eba:	80 81       	ld	r24, Z
     ebc:	89 83       	std	Y+1, r24	; 0x01
     ebe:	01 e0       	ldi	r16, 0x01	; 1
     ec0:	10 e0       	ldi	r17, 0x00	; 0
     ec2:	23 01       	movw	r4, r6
     ec4:	14 c0       	rjmp	.+40     	; 0xeee <vfprintf+0x428>
     ec6:	52 01       	movw	r10, r4
     ec8:	f2 e0       	ldi	r31, 0x02	; 2
     eca:	af 0e       	add	r10, r31
     ecc:	b1 1c       	adc	r11, r1
     ece:	f2 01       	movw	r30, r4
     ed0:	40 80       	ld	r4, Z
     ed2:	51 80       	ldd	r5, Z+1	; 0x01
     ed4:	26 ff       	sbrs	r18, 6
     ed6:	03 c0       	rjmp	.+6      	; 0xede <vfprintf+0x418>
     ed8:	61 2f       	mov	r22, r17
     eda:	70 e0       	ldi	r23, 0x00	; 0
     edc:	02 c0       	rjmp	.+4      	; 0xee2 <vfprintf+0x41c>
     ede:	6f ef       	ldi	r22, 0xFF	; 255
     ee0:	7f ef       	ldi	r23, 0xFF	; 255
     ee2:	c2 01       	movw	r24, r4
     ee4:	2a 8b       	std	Y+18, r18	; 0x12
     ee6:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <strnlen>
     eea:	8c 01       	movw	r16, r24
     eec:	2a 89       	ldd	r18, Y+18	; 0x12
     eee:	2f 77       	andi	r18, 0x7F	; 127
     ef0:	15 c0       	rjmp	.+42     	; 0xf1c <vfprintf+0x456>
     ef2:	52 01       	movw	r10, r4
     ef4:	f2 e0       	ldi	r31, 0x02	; 2
     ef6:	af 0e       	add	r10, r31
     ef8:	b1 1c       	adc	r11, r1
     efa:	f2 01       	movw	r30, r4
     efc:	40 80       	ld	r4, Z
     efe:	51 80       	ldd	r5, Z+1	; 0x01
     f00:	26 ff       	sbrs	r18, 6
     f02:	03 c0       	rjmp	.+6      	; 0xf0a <vfprintf+0x444>
     f04:	61 2f       	mov	r22, r17
     f06:	70 e0       	ldi	r23, 0x00	; 0
     f08:	02 c0       	rjmp	.+4      	; 0xf0e <vfprintf+0x448>
     f0a:	6f ef       	ldi	r22, 0xFF	; 255
     f0c:	7f ef       	ldi	r23, 0xFF	; 255
     f0e:	c2 01       	movw	r24, r4
     f10:	2a 8b       	std	Y+18, r18	; 0x12
     f12:	0e 94 ee 09 	call	0x13dc	; 0x13dc <strnlen_P>
     f16:	8c 01       	movw	r16, r24
     f18:	2a 89       	ldd	r18, Y+18	; 0x12
     f1a:	20 68       	ori	r18, 0x80	; 128
     f1c:	32 2e       	mov	r3, r18
     f1e:	23 fd       	sbrc	r18, 3
     f20:	1a c0       	rjmp	.+52     	; 0xf56 <vfprintf+0x490>
     f22:	8f 2d       	mov	r24, r15
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	08 17       	cp	r16, r24
     f28:	19 07       	cpc	r17, r25
     f2a:	a8 f4       	brcc	.+42     	; 0xf56 <vfprintf+0x490>
     f2c:	b6 01       	movw	r22, r12
     f2e:	80 e2       	ldi	r24, 0x20	; 32
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     f36:	fa 94       	dec	r15
     f38:	f4 cf       	rjmp	.-24     	; 0xf22 <vfprintf+0x45c>
     f3a:	f2 01       	movw	r30, r4
     f3c:	37 fc       	sbrc	r3, 7
     f3e:	85 91       	lpm	r24, Z+
     f40:	37 fe       	sbrs	r3, 7
     f42:	81 91       	ld	r24, Z+
     f44:	2f 01       	movw	r4, r30
     f46:	b6 01       	movw	r22, r12
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     f4e:	f1 10       	cpse	r15, r1
     f50:	fa 94       	dec	r15
     f52:	01 50       	subi	r16, 0x01	; 1
     f54:	11 09       	sbc	r17, r1
     f56:	01 15       	cp	r16, r1
     f58:	11 05       	cpc	r17, r1
     f5a:	79 f7       	brne	.-34     	; 0xf3a <vfprintf+0x474>
     f5c:	f8 c0       	rjmp	.+496    	; 0x114e <vfprintf+0x688>
     f5e:	84 36       	cpi	r24, 0x64	; 100
     f60:	11 f0       	breq	.+4      	; 0xf66 <vfprintf+0x4a0>
     f62:	89 36       	cpi	r24, 0x69	; 105
     f64:	59 f5       	brne	.+86     	; 0xfbc <vfprintf+0x4f6>
     f66:	52 01       	movw	r10, r4
     f68:	27 ff       	sbrs	r18, 7
     f6a:	09 c0       	rjmp	.+18     	; 0xf7e <vfprintf+0x4b8>
     f6c:	f4 e0       	ldi	r31, 0x04	; 4
     f6e:	af 0e       	add	r10, r31
     f70:	b1 1c       	adc	r11, r1
     f72:	f2 01       	movw	r30, r4
     f74:	60 81       	ld	r22, Z
     f76:	71 81       	ldd	r23, Z+1	; 0x01
     f78:	82 81       	ldd	r24, Z+2	; 0x02
     f7a:	93 81       	ldd	r25, Z+3	; 0x03
     f7c:	0a c0       	rjmp	.+20     	; 0xf92 <vfprintf+0x4cc>
     f7e:	f2 e0       	ldi	r31, 0x02	; 2
     f80:	af 0e       	add	r10, r31
     f82:	b1 1c       	adc	r11, r1
     f84:	f2 01       	movw	r30, r4
     f86:	60 81       	ld	r22, Z
     f88:	71 81       	ldd	r23, Z+1	; 0x01
     f8a:	07 2e       	mov	r0, r23
     f8c:	00 0c       	add	r0, r0
     f8e:	88 0b       	sbc	r24, r24
     f90:	99 0b       	sbc	r25, r25
     f92:	2f 76       	andi	r18, 0x6F	; 111
     f94:	32 2e       	mov	r3, r18
     f96:	97 ff       	sbrs	r25, 7
     f98:	09 c0       	rjmp	.+18     	; 0xfac <vfprintf+0x4e6>
     f9a:	90 95       	com	r25
     f9c:	80 95       	com	r24
     f9e:	70 95       	com	r23
     fa0:	61 95       	neg	r22
     fa2:	7f 4f       	sbci	r23, 0xFF	; 255
     fa4:	8f 4f       	sbci	r24, 0xFF	; 255
     fa6:	9f 4f       	sbci	r25, 0xFF	; 255
     fa8:	20 68       	ori	r18, 0x80	; 128
     faa:	32 2e       	mov	r3, r18
     fac:	2a e0       	ldi	r18, 0x0A	; 10
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	a3 01       	movw	r20, r6
     fb2:	0e 94 52 0a 	call	0x14a4	; 0x14a4 <__ultoa_invert>
     fb6:	e8 2e       	mov	r14, r24
     fb8:	e6 18       	sub	r14, r6
     fba:	3f c0       	rjmp	.+126    	; 0x103a <vfprintf+0x574>
     fbc:	02 2f       	mov	r16, r18
     fbe:	85 37       	cpi	r24, 0x75	; 117
     fc0:	21 f4       	brne	.+8      	; 0xfca <vfprintf+0x504>
     fc2:	0f 7e       	andi	r16, 0xEF	; 239
     fc4:	2a e0       	ldi	r18, 0x0A	; 10
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	1d c0       	rjmp	.+58     	; 0x1004 <vfprintf+0x53e>
     fca:	09 7f       	andi	r16, 0xF9	; 249
     fcc:	8f 36       	cpi	r24, 0x6F	; 111
     fce:	91 f0       	breq	.+36     	; 0xff4 <vfprintf+0x52e>
     fd0:	18 f4       	brcc	.+6      	; 0xfd8 <vfprintf+0x512>
     fd2:	88 35       	cpi	r24, 0x58	; 88
     fd4:	59 f0       	breq	.+22     	; 0xfec <vfprintf+0x526>
     fd6:	c5 c0       	rjmp	.+394    	; 0x1162 <vfprintf+0x69c>
     fd8:	80 37       	cpi	r24, 0x70	; 112
     fda:	19 f0       	breq	.+6      	; 0xfe2 <vfprintf+0x51c>
     fdc:	88 37       	cpi	r24, 0x78	; 120
     fde:	11 f0       	breq	.+4      	; 0xfe4 <vfprintf+0x51e>
     fe0:	c0 c0       	rjmp	.+384    	; 0x1162 <vfprintf+0x69c>
     fe2:	00 61       	ori	r16, 0x10	; 16
     fe4:	04 ff       	sbrs	r16, 4
     fe6:	09 c0       	rjmp	.+18     	; 0xffa <vfprintf+0x534>
     fe8:	04 60       	ori	r16, 0x04	; 4
     fea:	07 c0       	rjmp	.+14     	; 0xffa <vfprintf+0x534>
     fec:	24 ff       	sbrs	r18, 4
     fee:	08 c0       	rjmp	.+16     	; 0x1000 <vfprintf+0x53a>
     ff0:	06 60       	ori	r16, 0x06	; 6
     ff2:	06 c0       	rjmp	.+12     	; 0x1000 <vfprintf+0x53a>
     ff4:	28 e0       	ldi	r18, 0x08	; 8
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	05 c0       	rjmp	.+10     	; 0x1004 <vfprintf+0x53e>
     ffa:	20 e1       	ldi	r18, 0x10	; 16
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	02 c0       	rjmp	.+4      	; 0x1004 <vfprintf+0x53e>
    1000:	20 e1       	ldi	r18, 0x10	; 16
    1002:	32 e0       	ldi	r19, 0x02	; 2
    1004:	52 01       	movw	r10, r4
    1006:	07 ff       	sbrs	r16, 7
    1008:	09 c0       	rjmp	.+18     	; 0x101c <vfprintf+0x556>
    100a:	f4 e0       	ldi	r31, 0x04	; 4
    100c:	af 0e       	add	r10, r31
    100e:	b1 1c       	adc	r11, r1
    1010:	f2 01       	movw	r30, r4
    1012:	60 81       	ld	r22, Z
    1014:	71 81       	ldd	r23, Z+1	; 0x01
    1016:	82 81       	ldd	r24, Z+2	; 0x02
    1018:	93 81       	ldd	r25, Z+3	; 0x03
    101a:	08 c0       	rjmp	.+16     	; 0x102c <vfprintf+0x566>
    101c:	f2 e0       	ldi	r31, 0x02	; 2
    101e:	af 0e       	add	r10, r31
    1020:	b1 1c       	adc	r11, r1
    1022:	f2 01       	movw	r30, r4
    1024:	60 81       	ld	r22, Z
    1026:	71 81       	ldd	r23, Z+1	; 0x01
    1028:	80 e0       	ldi	r24, 0x00	; 0
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	a3 01       	movw	r20, r6
    102e:	0e 94 52 0a 	call	0x14a4	; 0x14a4 <__ultoa_invert>
    1032:	e8 2e       	mov	r14, r24
    1034:	e6 18       	sub	r14, r6
    1036:	0f 77       	andi	r16, 0x7F	; 127
    1038:	30 2e       	mov	r3, r16
    103a:	36 fe       	sbrs	r3, 6
    103c:	0b c0       	rjmp	.+22     	; 0x1054 <vfprintf+0x58e>
    103e:	33 2d       	mov	r19, r3
    1040:	3e 7f       	andi	r19, 0xFE	; 254
    1042:	e1 16       	cp	r14, r17
    1044:	50 f4       	brcc	.+20     	; 0x105a <vfprintf+0x594>
    1046:	34 fe       	sbrs	r3, 4
    1048:	0a c0       	rjmp	.+20     	; 0x105e <vfprintf+0x598>
    104a:	32 fc       	sbrc	r3, 2
    104c:	08 c0       	rjmp	.+16     	; 0x105e <vfprintf+0x598>
    104e:	33 2d       	mov	r19, r3
    1050:	3e 7e       	andi	r19, 0xEE	; 238
    1052:	05 c0       	rjmp	.+10     	; 0x105e <vfprintf+0x598>
    1054:	0e 2d       	mov	r16, r14
    1056:	33 2d       	mov	r19, r3
    1058:	03 c0       	rjmp	.+6      	; 0x1060 <vfprintf+0x59a>
    105a:	0e 2d       	mov	r16, r14
    105c:	01 c0       	rjmp	.+2      	; 0x1060 <vfprintf+0x59a>
    105e:	01 2f       	mov	r16, r17
    1060:	34 ff       	sbrs	r19, 4
    1062:	0c c0       	rjmp	.+24     	; 0x107c <vfprintf+0x5b6>
    1064:	fe 01       	movw	r30, r28
    1066:	ee 0d       	add	r30, r14
    1068:	f1 1d       	adc	r31, r1
    106a:	80 81       	ld	r24, Z
    106c:	80 33       	cpi	r24, 0x30	; 48
    106e:	11 f4       	brne	.+4      	; 0x1074 <vfprintf+0x5ae>
    1070:	39 7e       	andi	r19, 0xE9	; 233
    1072:	08 c0       	rjmp	.+16     	; 0x1084 <vfprintf+0x5be>
    1074:	32 ff       	sbrs	r19, 2
    1076:	05 c0       	rjmp	.+10     	; 0x1082 <vfprintf+0x5bc>
    1078:	0e 5f       	subi	r16, 0xFE	; 254
    107a:	04 c0       	rjmp	.+8      	; 0x1084 <vfprintf+0x5be>
    107c:	83 2f       	mov	r24, r19
    107e:	86 78       	andi	r24, 0x86	; 134
    1080:	09 f0       	breq	.+2      	; 0x1084 <vfprintf+0x5be>
    1082:	0f 5f       	subi	r16, 0xFF	; 255
    1084:	33 fd       	sbrc	r19, 3
    1086:	13 c0       	rjmp	.+38     	; 0x10ae <vfprintf+0x5e8>
    1088:	30 ff       	sbrs	r19, 0
    108a:	06 c0       	rjmp	.+12     	; 0x1098 <vfprintf+0x5d2>
    108c:	1e 2d       	mov	r17, r14
    108e:	0f 15       	cp	r16, r15
    1090:	18 f4       	brcc	.+6      	; 0x1098 <vfprintf+0x5d2>
    1092:	1f 0d       	add	r17, r15
    1094:	10 1b       	sub	r17, r16
    1096:	0f 2d       	mov	r16, r15
    1098:	0f 15       	cp	r16, r15
    109a:	68 f4       	brcc	.+26     	; 0x10b6 <vfprintf+0x5f0>
    109c:	b6 01       	movw	r22, r12
    109e:	80 e2       	ldi	r24, 0x20	; 32
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	3b 8b       	std	Y+19, r19	; 0x13
    10a4:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    10a8:	0f 5f       	subi	r16, 0xFF	; 255
    10aa:	3b 89       	ldd	r19, Y+19	; 0x13
    10ac:	f5 cf       	rjmp	.-22     	; 0x1098 <vfprintf+0x5d2>
    10ae:	0f 15       	cp	r16, r15
    10b0:	10 f4       	brcc	.+4      	; 0x10b6 <vfprintf+0x5f0>
    10b2:	f0 1a       	sub	r15, r16
    10b4:	01 c0       	rjmp	.+2      	; 0x10b8 <vfprintf+0x5f2>
    10b6:	f1 2c       	mov	r15, r1
    10b8:	34 ff       	sbrs	r19, 4
    10ba:	12 c0       	rjmp	.+36     	; 0x10e0 <vfprintf+0x61a>
    10bc:	b6 01       	movw	r22, r12
    10be:	80 e3       	ldi	r24, 0x30	; 48
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	3b 8b       	std	Y+19, r19	; 0x13
    10c4:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    10c8:	3b 89       	ldd	r19, Y+19	; 0x13
    10ca:	32 ff       	sbrs	r19, 2
    10cc:	17 c0       	rjmp	.+46     	; 0x10fc <vfprintf+0x636>
    10ce:	31 fd       	sbrc	r19, 1
    10d0:	03 c0       	rjmp	.+6      	; 0x10d8 <vfprintf+0x612>
    10d2:	88 e7       	ldi	r24, 0x78	; 120
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	02 c0       	rjmp	.+4      	; 0x10dc <vfprintf+0x616>
    10d8:	88 e5       	ldi	r24, 0x58	; 88
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	b6 01       	movw	r22, r12
    10de:	0c c0       	rjmp	.+24     	; 0x10f8 <vfprintf+0x632>
    10e0:	83 2f       	mov	r24, r19
    10e2:	86 78       	andi	r24, 0x86	; 134
    10e4:	59 f0       	breq	.+22     	; 0x10fc <vfprintf+0x636>
    10e6:	31 ff       	sbrs	r19, 1
    10e8:	02 c0       	rjmp	.+4      	; 0x10ee <vfprintf+0x628>
    10ea:	8b e2       	ldi	r24, 0x2B	; 43
    10ec:	01 c0       	rjmp	.+2      	; 0x10f0 <vfprintf+0x62a>
    10ee:	80 e2       	ldi	r24, 0x20	; 32
    10f0:	37 fd       	sbrc	r19, 7
    10f2:	8d e2       	ldi	r24, 0x2D	; 45
    10f4:	b6 01       	movw	r22, r12
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    10fc:	e1 16       	cp	r14, r17
    10fe:	38 f4       	brcc	.+14     	; 0x110e <vfprintf+0x648>
    1100:	b6 01       	movw	r22, r12
    1102:	80 e3       	ldi	r24, 0x30	; 48
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    110a:	11 50       	subi	r17, 0x01	; 1
    110c:	f7 cf       	rjmp	.-18     	; 0x10fc <vfprintf+0x636>
    110e:	ea 94       	dec	r14
    1110:	f3 01       	movw	r30, r6
    1112:	ee 0d       	add	r30, r14
    1114:	f1 1d       	adc	r31, r1
    1116:	80 81       	ld	r24, Z
    1118:	b6 01       	movw	r22, r12
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    1120:	e1 10       	cpse	r14, r1
    1122:	f5 cf       	rjmp	.-22     	; 0x110e <vfprintf+0x648>
    1124:	14 c0       	rjmp	.+40     	; 0x114e <vfprintf+0x688>
    1126:	f4 e0       	ldi	r31, 0x04	; 4
    1128:	ff 15       	cp	r31, r15
    112a:	58 f5       	brcc	.+86     	; 0x1182 <vfprintf+0x6bc>
    112c:	84 e0       	ldi	r24, 0x04	; 4
    112e:	f8 1a       	sub	r15, r24
    1130:	33 fe       	sbrs	r3, 3
    1132:	1e c0       	rjmp	.+60     	; 0x1170 <vfprintf+0x6aa>
    1134:	21 10       	cpse	r2, r1
    1136:	26 c0       	rjmp	.+76     	; 0x1184 <vfprintf+0x6be>
    1138:	03 ff       	sbrs	r16, 3
    113a:	2a c0       	rjmp	.+84     	; 0x1190 <vfprintf+0x6ca>
    113c:	06 e9       	ldi	r16, 0x96	; 150
    113e:	10 e0       	ldi	r17, 0x00	; 0
    1140:	f3 2d       	mov	r31, r3
    1142:	f0 71       	andi	r31, 0x10	; 16
    1144:	3f 2e       	mov	r3, r31
    1146:	f8 01       	movw	r30, r16
    1148:	84 91       	lpm	r24, Z
    114a:	81 11       	cpse	r24, r1
    114c:	24 c0       	rjmp	.+72     	; 0x1196 <vfprintf+0x6d0>
    114e:	ff 20       	and	r15, r15
    1150:	09 f4       	brne	.+2      	; 0x1154 <vfprintf+0x68e>
    1152:	e5 cc       	rjmp	.-1590   	; 0xb1e <vfprintf+0x58>
    1154:	b6 01       	movw	r22, r12
    1156:	80 e2       	ldi	r24, 0x20	; 32
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    115e:	fa 94       	dec	r15
    1160:	f6 cf       	rjmp	.-20     	; 0x114e <vfprintf+0x688>
    1162:	f6 01       	movw	r30, r12
    1164:	86 81       	ldd	r24, Z+6	; 0x06
    1166:	97 81       	ldd	r25, Z+7	; 0x07
    1168:	26 c0       	rjmp	.+76     	; 0x11b6 <vfprintf+0x6f0>
    116a:	8f ef       	ldi	r24, 0xFF	; 255
    116c:	9f ef       	ldi	r25, 0xFF	; 255
    116e:	23 c0       	rjmp	.+70     	; 0x11b6 <vfprintf+0x6f0>
    1170:	b6 01       	movw	r22, r12
    1172:	80 e2       	ldi	r24, 0x20	; 32
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    117a:	fa 94       	dec	r15
    117c:	f1 10       	cpse	r15, r1
    117e:	f8 cf       	rjmp	.-16     	; 0x1170 <vfprintf+0x6aa>
    1180:	d9 cf       	rjmp	.-78     	; 0x1134 <vfprintf+0x66e>
    1182:	f1 2c       	mov	r15, r1
    1184:	b6 01       	movw	r22, r12
    1186:	82 2d       	mov	r24, r2
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    118e:	d4 cf       	rjmp	.-88     	; 0x1138 <vfprintf+0x672>
    1190:	0a e9       	ldi	r16, 0x9A	; 154
    1192:	10 e0       	ldi	r17, 0x00	; 0
    1194:	d5 cf       	rjmp	.-86     	; 0x1140 <vfprintf+0x67a>
    1196:	31 10       	cpse	r3, r1
    1198:	80 52       	subi	r24, 0x20	; 32
    119a:	b6 01       	movw	r22, r12
    119c:	90 e0       	ldi	r25, 0x00	; 0
    119e:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    11a2:	0f 5f       	subi	r16, 0xFF	; 255
    11a4:	1f 4f       	sbci	r17, 0xFF	; 255
    11a6:	cf cf       	rjmp	.-98     	; 0x1146 <vfprintf+0x680>
    11a8:	23 e0       	ldi	r18, 0x03	; 3
    11aa:	2f 15       	cp	r18, r15
    11ac:	10 f4       	brcc	.+4      	; 0x11b2 <vfprintf+0x6ec>
    11ae:	83 e0       	ldi	r24, 0x03	; 3
    11b0:	be cf       	rjmp	.-132    	; 0x112e <vfprintf+0x668>
    11b2:	f1 2c       	mov	r15, r1
    11b4:	c1 cf       	rjmp	.-126    	; 0x1138 <vfprintf+0x672>
    11b6:	63 96       	adiw	r28, 0x13	; 19
    11b8:	e2 e1       	ldi	r30, 0x12	; 18
    11ba:	0c 94 fb 08 	jmp	0x11f6	; 0x11f6 <__epilogue_restores__>

000011be <__prologue_saves__>:
    11be:	2f 92       	push	r2
    11c0:	3f 92       	push	r3
    11c2:	4f 92       	push	r4
    11c4:	5f 92       	push	r5
    11c6:	6f 92       	push	r6
    11c8:	7f 92       	push	r7
    11ca:	8f 92       	push	r8
    11cc:	9f 92       	push	r9
    11ce:	af 92       	push	r10
    11d0:	bf 92       	push	r11
    11d2:	cf 92       	push	r12
    11d4:	df 92       	push	r13
    11d6:	ef 92       	push	r14
    11d8:	ff 92       	push	r15
    11da:	0f 93       	push	r16
    11dc:	1f 93       	push	r17
    11de:	cf 93       	push	r28
    11e0:	df 93       	push	r29
    11e2:	cd b7       	in	r28, 0x3d	; 61
    11e4:	de b7       	in	r29, 0x3e	; 62
    11e6:	ca 1b       	sub	r28, r26
    11e8:	db 0b       	sbc	r29, r27
    11ea:	0f b6       	in	r0, 0x3f	; 63
    11ec:	f8 94       	cli
    11ee:	de bf       	out	0x3e, r29	; 62
    11f0:	0f be       	out	0x3f, r0	; 63
    11f2:	cd bf       	out	0x3d, r28	; 61
    11f4:	09 94       	ijmp

000011f6 <__epilogue_restores__>:
    11f6:	2a 88       	ldd	r2, Y+18	; 0x12
    11f8:	39 88       	ldd	r3, Y+17	; 0x11
    11fa:	48 88       	ldd	r4, Y+16	; 0x10
    11fc:	5f 84       	ldd	r5, Y+15	; 0x0f
    11fe:	6e 84       	ldd	r6, Y+14	; 0x0e
    1200:	7d 84       	ldd	r7, Y+13	; 0x0d
    1202:	8c 84       	ldd	r8, Y+12	; 0x0c
    1204:	9b 84       	ldd	r9, Y+11	; 0x0b
    1206:	aa 84       	ldd	r10, Y+10	; 0x0a
    1208:	b9 84       	ldd	r11, Y+9	; 0x09
    120a:	c8 84       	ldd	r12, Y+8	; 0x08
    120c:	df 80       	ldd	r13, Y+7	; 0x07
    120e:	ee 80       	ldd	r14, Y+6	; 0x06
    1210:	fd 80       	ldd	r15, Y+5	; 0x05
    1212:	0c 81       	ldd	r16, Y+4	; 0x04
    1214:	1b 81       	ldd	r17, Y+3	; 0x03
    1216:	aa 81       	ldd	r26, Y+2	; 0x02
    1218:	b9 81       	ldd	r27, Y+1	; 0x01
    121a:	ce 0f       	add	r28, r30
    121c:	d1 1d       	adc	r29, r1
    121e:	0f b6       	in	r0, 0x3f	; 63
    1220:	f8 94       	cli
    1222:	de bf       	out	0x3e, r29	; 62
    1224:	0f be       	out	0x3f, r0	; 63
    1226:	cd bf       	out	0x3d, r28	; 61
    1228:	ed 01       	movw	r28, r26
    122a:	08 95       	ret

0000122c <__ftoa_engine>:
    122c:	28 30       	cpi	r18, 0x08	; 8
    122e:	08 f0       	brcs	.+2      	; 0x1232 <__ftoa_engine+0x6>
    1230:	27 e0       	ldi	r18, 0x07	; 7
    1232:	33 27       	eor	r19, r19
    1234:	da 01       	movw	r26, r20
    1236:	99 0f       	add	r25, r25
    1238:	31 1d       	adc	r19, r1
    123a:	87 fd       	sbrc	r24, 7
    123c:	91 60       	ori	r25, 0x01	; 1
    123e:	00 96       	adiw	r24, 0x00	; 0
    1240:	61 05       	cpc	r22, r1
    1242:	71 05       	cpc	r23, r1
    1244:	39 f4       	brne	.+14     	; 0x1254 <__ftoa_engine+0x28>
    1246:	32 60       	ori	r19, 0x02	; 2
    1248:	2e 5f       	subi	r18, 0xFE	; 254
    124a:	3d 93       	st	X+, r19
    124c:	30 e3       	ldi	r19, 0x30	; 48
    124e:	2a 95       	dec	r18
    1250:	e1 f7       	brne	.-8      	; 0x124a <__ftoa_engine+0x1e>
    1252:	08 95       	ret
    1254:	9f 3f       	cpi	r25, 0xFF	; 255
    1256:	30 f0       	brcs	.+12     	; 0x1264 <__ftoa_engine+0x38>
    1258:	80 38       	cpi	r24, 0x80	; 128
    125a:	71 05       	cpc	r23, r1
    125c:	61 05       	cpc	r22, r1
    125e:	09 f0       	breq	.+2      	; 0x1262 <__ftoa_engine+0x36>
    1260:	3c 5f       	subi	r19, 0xFC	; 252
    1262:	3c 5f       	subi	r19, 0xFC	; 252
    1264:	3d 93       	st	X+, r19
    1266:	91 30       	cpi	r25, 0x01	; 1
    1268:	08 f0       	brcs	.+2      	; 0x126c <__ftoa_engine+0x40>
    126a:	80 68       	ori	r24, 0x80	; 128
    126c:	91 1d       	adc	r25, r1
    126e:	df 93       	push	r29
    1270:	cf 93       	push	r28
    1272:	1f 93       	push	r17
    1274:	0f 93       	push	r16
    1276:	ff 92       	push	r15
    1278:	ef 92       	push	r14
    127a:	19 2f       	mov	r17, r25
    127c:	98 7f       	andi	r25, 0xF8	; 248
    127e:	96 95       	lsr	r25
    1280:	e9 2f       	mov	r30, r25
    1282:	96 95       	lsr	r25
    1284:	96 95       	lsr	r25
    1286:	e9 0f       	add	r30, r25
    1288:	ff 27       	eor	r31, r31
    128a:	e8 50       	subi	r30, 0x08	; 8
    128c:	ff 4f       	sbci	r31, 0xFF	; 255
    128e:	99 27       	eor	r25, r25
    1290:	33 27       	eor	r19, r19
    1292:	ee 24       	eor	r14, r14
    1294:	ff 24       	eor	r15, r15
    1296:	a7 01       	movw	r20, r14
    1298:	e7 01       	movw	r28, r14
    129a:	05 90       	lpm	r0, Z+
    129c:	08 94       	sec
    129e:	07 94       	ror	r0
    12a0:	28 f4       	brcc	.+10     	; 0x12ac <__ftoa_engine+0x80>
    12a2:	36 0f       	add	r19, r22
    12a4:	e7 1e       	adc	r14, r23
    12a6:	f8 1e       	adc	r15, r24
    12a8:	49 1f       	adc	r20, r25
    12aa:	51 1d       	adc	r21, r1
    12ac:	66 0f       	add	r22, r22
    12ae:	77 1f       	adc	r23, r23
    12b0:	88 1f       	adc	r24, r24
    12b2:	99 1f       	adc	r25, r25
    12b4:	06 94       	lsr	r0
    12b6:	a1 f7       	brne	.-24     	; 0x12a0 <__ftoa_engine+0x74>
    12b8:	05 90       	lpm	r0, Z+
    12ba:	07 94       	ror	r0
    12bc:	28 f4       	brcc	.+10     	; 0x12c8 <__ftoa_engine+0x9c>
    12be:	e7 0e       	add	r14, r23
    12c0:	f8 1e       	adc	r15, r24
    12c2:	49 1f       	adc	r20, r25
    12c4:	56 1f       	adc	r21, r22
    12c6:	c1 1d       	adc	r28, r1
    12c8:	77 0f       	add	r23, r23
    12ca:	88 1f       	adc	r24, r24
    12cc:	99 1f       	adc	r25, r25
    12ce:	66 1f       	adc	r22, r22
    12d0:	06 94       	lsr	r0
    12d2:	a1 f7       	brne	.-24     	; 0x12bc <__ftoa_engine+0x90>
    12d4:	05 90       	lpm	r0, Z+
    12d6:	07 94       	ror	r0
    12d8:	28 f4       	brcc	.+10     	; 0x12e4 <__ftoa_engine+0xb8>
    12da:	f8 0e       	add	r15, r24
    12dc:	49 1f       	adc	r20, r25
    12de:	56 1f       	adc	r21, r22
    12e0:	c7 1f       	adc	r28, r23
    12e2:	d1 1d       	adc	r29, r1
    12e4:	88 0f       	add	r24, r24
    12e6:	99 1f       	adc	r25, r25
    12e8:	66 1f       	adc	r22, r22
    12ea:	77 1f       	adc	r23, r23
    12ec:	06 94       	lsr	r0
    12ee:	a1 f7       	brne	.-24     	; 0x12d8 <__ftoa_engine+0xac>
    12f0:	05 90       	lpm	r0, Z+
    12f2:	07 94       	ror	r0
    12f4:	20 f4       	brcc	.+8      	; 0x12fe <__ftoa_engine+0xd2>
    12f6:	49 0f       	add	r20, r25
    12f8:	56 1f       	adc	r21, r22
    12fa:	c7 1f       	adc	r28, r23
    12fc:	d8 1f       	adc	r29, r24
    12fe:	99 0f       	add	r25, r25
    1300:	66 1f       	adc	r22, r22
    1302:	77 1f       	adc	r23, r23
    1304:	88 1f       	adc	r24, r24
    1306:	06 94       	lsr	r0
    1308:	a9 f7       	brne	.-22     	; 0x12f4 <__ftoa_engine+0xc8>
    130a:	84 91       	lpm	r24, Z
    130c:	10 95       	com	r17
    130e:	17 70       	andi	r17, 0x07	; 7
    1310:	41 f0       	breq	.+16     	; 0x1322 <__ftoa_engine+0xf6>
    1312:	d6 95       	lsr	r29
    1314:	c7 95       	ror	r28
    1316:	57 95       	ror	r21
    1318:	47 95       	ror	r20
    131a:	f7 94       	ror	r15
    131c:	e7 94       	ror	r14
    131e:	1a 95       	dec	r17
    1320:	c1 f7       	brne	.-16     	; 0x1312 <__ftoa_engine+0xe6>
    1322:	ee e9       	ldi	r30, 0x9E	; 158
    1324:	f0 e0       	ldi	r31, 0x00	; 0
    1326:	68 94       	set
    1328:	15 90       	lpm	r1, Z+
    132a:	15 91       	lpm	r17, Z+
    132c:	35 91       	lpm	r19, Z+
    132e:	65 91       	lpm	r22, Z+
    1330:	95 91       	lpm	r25, Z+
    1332:	05 90       	lpm	r0, Z+
    1334:	7f e2       	ldi	r23, 0x2F	; 47
    1336:	73 95       	inc	r23
    1338:	e1 18       	sub	r14, r1
    133a:	f1 0a       	sbc	r15, r17
    133c:	43 0b       	sbc	r20, r19
    133e:	56 0b       	sbc	r21, r22
    1340:	c9 0b       	sbc	r28, r25
    1342:	d0 09       	sbc	r29, r0
    1344:	c0 f7       	brcc	.-16     	; 0x1336 <__ftoa_engine+0x10a>
    1346:	e1 0c       	add	r14, r1
    1348:	f1 1e       	adc	r15, r17
    134a:	43 1f       	adc	r20, r19
    134c:	56 1f       	adc	r21, r22
    134e:	c9 1f       	adc	r28, r25
    1350:	d0 1d       	adc	r29, r0
    1352:	7e f4       	brtc	.+30     	; 0x1372 <__ftoa_engine+0x146>
    1354:	70 33       	cpi	r23, 0x30	; 48
    1356:	11 f4       	brne	.+4      	; 0x135c <__ftoa_engine+0x130>
    1358:	8a 95       	dec	r24
    135a:	e6 cf       	rjmp	.-52     	; 0x1328 <__ftoa_engine+0xfc>
    135c:	e8 94       	clt
    135e:	01 50       	subi	r16, 0x01	; 1
    1360:	30 f0       	brcs	.+12     	; 0x136e <__ftoa_engine+0x142>
    1362:	08 0f       	add	r16, r24
    1364:	0a f4       	brpl	.+2      	; 0x1368 <__ftoa_engine+0x13c>
    1366:	00 27       	eor	r16, r16
    1368:	02 17       	cp	r16, r18
    136a:	08 f4       	brcc	.+2      	; 0x136e <__ftoa_engine+0x142>
    136c:	20 2f       	mov	r18, r16
    136e:	23 95       	inc	r18
    1370:	02 2f       	mov	r16, r18
    1372:	7a 33       	cpi	r23, 0x3A	; 58
    1374:	28 f0       	brcs	.+10     	; 0x1380 <__ftoa_engine+0x154>
    1376:	79 e3       	ldi	r23, 0x39	; 57
    1378:	7d 93       	st	X+, r23
    137a:	2a 95       	dec	r18
    137c:	e9 f7       	brne	.-6      	; 0x1378 <__ftoa_engine+0x14c>
    137e:	10 c0       	rjmp	.+32     	; 0x13a0 <__ftoa_engine+0x174>
    1380:	7d 93       	st	X+, r23
    1382:	2a 95       	dec	r18
    1384:	89 f6       	brne	.-94     	; 0x1328 <__ftoa_engine+0xfc>
    1386:	06 94       	lsr	r0
    1388:	97 95       	ror	r25
    138a:	67 95       	ror	r22
    138c:	37 95       	ror	r19
    138e:	17 95       	ror	r17
    1390:	17 94       	ror	r1
    1392:	e1 18       	sub	r14, r1
    1394:	f1 0a       	sbc	r15, r17
    1396:	43 0b       	sbc	r20, r19
    1398:	56 0b       	sbc	r21, r22
    139a:	c9 0b       	sbc	r28, r25
    139c:	d0 09       	sbc	r29, r0
    139e:	98 f0       	brcs	.+38     	; 0x13c6 <__ftoa_engine+0x19a>
    13a0:	23 95       	inc	r18
    13a2:	7e 91       	ld	r23, -X
    13a4:	73 95       	inc	r23
    13a6:	7a 33       	cpi	r23, 0x3A	; 58
    13a8:	08 f0       	brcs	.+2      	; 0x13ac <__ftoa_engine+0x180>
    13aa:	70 e3       	ldi	r23, 0x30	; 48
    13ac:	7c 93       	st	X, r23
    13ae:	20 13       	cpse	r18, r16
    13b0:	b8 f7       	brcc	.-18     	; 0x13a0 <__ftoa_engine+0x174>
    13b2:	7e 91       	ld	r23, -X
    13b4:	70 61       	ori	r23, 0x10	; 16
    13b6:	7d 93       	st	X+, r23
    13b8:	30 f0       	brcs	.+12     	; 0x13c6 <__ftoa_engine+0x19a>
    13ba:	83 95       	inc	r24
    13bc:	71 e3       	ldi	r23, 0x31	; 49
    13be:	7d 93       	st	X+, r23
    13c0:	70 e3       	ldi	r23, 0x30	; 48
    13c2:	2a 95       	dec	r18
    13c4:	e1 f7       	brne	.-8      	; 0x13be <__ftoa_engine+0x192>
    13c6:	11 24       	eor	r1, r1
    13c8:	ef 90       	pop	r14
    13ca:	ff 90       	pop	r15
    13cc:	0f 91       	pop	r16
    13ce:	1f 91       	pop	r17
    13d0:	cf 91       	pop	r28
    13d2:	df 91       	pop	r29
    13d4:	99 27       	eor	r25, r25
    13d6:	87 fd       	sbrc	r24, 7
    13d8:	90 95       	com	r25
    13da:	08 95       	ret

000013dc <strnlen_P>:
    13dc:	fc 01       	movw	r30, r24
    13de:	05 90       	lpm	r0, Z+
    13e0:	61 50       	subi	r22, 0x01	; 1
    13e2:	70 40       	sbci	r23, 0x00	; 0
    13e4:	01 10       	cpse	r0, r1
    13e6:	d8 f7       	brcc	.-10     	; 0x13de <strnlen_P+0x2>
    13e8:	80 95       	com	r24
    13ea:	90 95       	com	r25
    13ec:	8e 0f       	add	r24, r30
    13ee:	9f 1f       	adc	r25, r31
    13f0:	08 95       	ret

000013f2 <strnlen>:
    13f2:	fc 01       	movw	r30, r24
    13f4:	61 50       	subi	r22, 0x01	; 1
    13f6:	70 40       	sbci	r23, 0x00	; 0
    13f8:	01 90       	ld	r0, Z+
    13fa:	01 10       	cpse	r0, r1
    13fc:	d8 f7       	brcc	.-10     	; 0x13f4 <strnlen+0x2>
    13fe:	80 95       	com	r24
    1400:	90 95       	com	r25
    1402:	8e 0f       	add	r24, r30
    1404:	9f 1f       	adc	r25, r31
    1406:	08 95       	ret

00001408 <fputc>:
    1408:	0f 93       	push	r16
    140a:	1f 93       	push	r17
    140c:	cf 93       	push	r28
    140e:	df 93       	push	r29
    1410:	fb 01       	movw	r30, r22
    1412:	23 81       	ldd	r18, Z+3	; 0x03
    1414:	21 fd       	sbrc	r18, 1
    1416:	03 c0       	rjmp	.+6      	; 0x141e <fputc+0x16>
    1418:	8f ef       	ldi	r24, 0xFF	; 255
    141a:	9f ef       	ldi	r25, 0xFF	; 255
    141c:	28 c0       	rjmp	.+80     	; 0x146e <fputc+0x66>
    141e:	22 ff       	sbrs	r18, 2
    1420:	16 c0       	rjmp	.+44     	; 0x144e <fputc+0x46>
    1422:	46 81       	ldd	r20, Z+6	; 0x06
    1424:	57 81       	ldd	r21, Z+7	; 0x07
    1426:	24 81       	ldd	r18, Z+4	; 0x04
    1428:	35 81       	ldd	r19, Z+5	; 0x05
    142a:	42 17       	cp	r20, r18
    142c:	53 07       	cpc	r21, r19
    142e:	44 f4       	brge	.+16     	; 0x1440 <fputc+0x38>
    1430:	a0 81       	ld	r26, Z
    1432:	b1 81       	ldd	r27, Z+1	; 0x01
    1434:	9d 01       	movw	r18, r26
    1436:	2f 5f       	subi	r18, 0xFF	; 255
    1438:	3f 4f       	sbci	r19, 0xFF	; 255
    143a:	31 83       	std	Z+1, r19	; 0x01
    143c:	20 83       	st	Z, r18
    143e:	8c 93       	st	X, r24
    1440:	26 81       	ldd	r18, Z+6	; 0x06
    1442:	37 81       	ldd	r19, Z+7	; 0x07
    1444:	2f 5f       	subi	r18, 0xFF	; 255
    1446:	3f 4f       	sbci	r19, 0xFF	; 255
    1448:	37 83       	std	Z+7, r19	; 0x07
    144a:	26 83       	std	Z+6, r18	; 0x06
    144c:	10 c0       	rjmp	.+32     	; 0x146e <fputc+0x66>
    144e:	eb 01       	movw	r28, r22
    1450:	09 2f       	mov	r16, r25
    1452:	18 2f       	mov	r17, r24
    1454:	00 84       	ldd	r0, Z+8	; 0x08
    1456:	f1 85       	ldd	r31, Z+9	; 0x09
    1458:	e0 2d       	mov	r30, r0
    145a:	09 95       	icall
    145c:	89 2b       	or	r24, r25
    145e:	e1 f6       	brne	.-72     	; 0x1418 <fputc+0x10>
    1460:	8e 81       	ldd	r24, Y+6	; 0x06
    1462:	9f 81       	ldd	r25, Y+7	; 0x07
    1464:	01 96       	adiw	r24, 0x01	; 1
    1466:	9f 83       	std	Y+7, r25	; 0x07
    1468:	8e 83       	std	Y+6, r24	; 0x06
    146a:	81 2f       	mov	r24, r17
    146c:	90 2f       	mov	r25, r16
    146e:	df 91       	pop	r29
    1470:	cf 91       	pop	r28
    1472:	1f 91       	pop	r17
    1474:	0f 91       	pop	r16
    1476:	08 95       	ret

00001478 <printf>:
    1478:	a0 e0       	ldi	r26, 0x00	; 0
    147a:	b0 e0       	ldi	r27, 0x00	; 0
    147c:	e2 e4       	ldi	r30, 0x42	; 66
    147e:	fa e0       	ldi	r31, 0x0A	; 10
    1480:	0c 94 ef 08 	jmp	0x11de	; 0x11de <__prologue_saves__+0x20>
    1484:	ae 01       	movw	r20, r28
    1486:	4b 5f       	subi	r20, 0xFB	; 251
    1488:	5f 4f       	sbci	r21, 0xFF	; 255
    148a:	fa 01       	movw	r30, r20
    148c:	61 91       	ld	r22, Z+
    148e:	71 91       	ld	r23, Z+
    1490:	af 01       	movw	r20, r30
    1492:	80 91 6a 01 	lds	r24, 0x016A
    1496:	90 91 6b 01 	lds	r25, 0x016B
    149a:	0e 94 63 05 	call	0xac6	; 0xac6 <vfprintf>
    149e:	e2 e0       	ldi	r30, 0x02	; 2
    14a0:	0c 94 0b 09 	jmp	0x1216	; 0x1216 <__epilogue_restores__+0x20>

000014a4 <__ultoa_invert>:
    14a4:	fa 01       	movw	r30, r20
    14a6:	aa 27       	eor	r26, r26
    14a8:	28 30       	cpi	r18, 0x08	; 8
    14aa:	51 f1       	breq	.+84     	; 0x1500 <__ultoa_invert+0x5c>
    14ac:	20 31       	cpi	r18, 0x10	; 16
    14ae:	81 f1       	breq	.+96     	; 0x1510 <__ultoa_invert+0x6c>
    14b0:	e8 94       	clt
    14b2:	6f 93       	push	r22
    14b4:	6e 7f       	andi	r22, 0xFE	; 254
    14b6:	6e 5f       	subi	r22, 0xFE	; 254
    14b8:	7f 4f       	sbci	r23, 0xFF	; 255
    14ba:	8f 4f       	sbci	r24, 0xFF	; 255
    14bc:	9f 4f       	sbci	r25, 0xFF	; 255
    14be:	af 4f       	sbci	r26, 0xFF	; 255
    14c0:	b1 e0       	ldi	r27, 0x01	; 1
    14c2:	3e d0       	rcall	.+124    	; 0x1540 <__ultoa_invert+0x9c>
    14c4:	b4 e0       	ldi	r27, 0x04	; 4
    14c6:	3c d0       	rcall	.+120    	; 0x1540 <__ultoa_invert+0x9c>
    14c8:	67 0f       	add	r22, r23
    14ca:	78 1f       	adc	r23, r24
    14cc:	89 1f       	adc	r24, r25
    14ce:	9a 1f       	adc	r25, r26
    14d0:	a1 1d       	adc	r26, r1
    14d2:	68 0f       	add	r22, r24
    14d4:	79 1f       	adc	r23, r25
    14d6:	8a 1f       	adc	r24, r26
    14d8:	91 1d       	adc	r25, r1
    14da:	a1 1d       	adc	r26, r1
    14dc:	6a 0f       	add	r22, r26
    14de:	71 1d       	adc	r23, r1
    14e0:	81 1d       	adc	r24, r1
    14e2:	91 1d       	adc	r25, r1
    14e4:	a1 1d       	adc	r26, r1
    14e6:	20 d0       	rcall	.+64     	; 0x1528 <__ultoa_invert+0x84>
    14e8:	09 f4       	brne	.+2      	; 0x14ec <__ultoa_invert+0x48>
    14ea:	68 94       	set
    14ec:	3f 91       	pop	r19
    14ee:	2a e0       	ldi	r18, 0x0A	; 10
    14f0:	26 9f       	mul	r18, r22
    14f2:	11 24       	eor	r1, r1
    14f4:	30 19       	sub	r19, r0
    14f6:	30 5d       	subi	r19, 0xD0	; 208
    14f8:	31 93       	st	Z+, r19
    14fa:	de f6       	brtc	.-74     	; 0x14b2 <__ultoa_invert+0xe>
    14fc:	cf 01       	movw	r24, r30
    14fe:	08 95       	ret
    1500:	46 2f       	mov	r20, r22
    1502:	47 70       	andi	r20, 0x07	; 7
    1504:	40 5d       	subi	r20, 0xD0	; 208
    1506:	41 93       	st	Z+, r20
    1508:	b3 e0       	ldi	r27, 0x03	; 3
    150a:	0f d0       	rcall	.+30     	; 0x152a <__ultoa_invert+0x86>
    150c:	c9 f7       	brne	.-14     	; 0x1500 <__ultoa_invert+0x5c>
    150e:	f6 cf       	rjmp	.-20     	; 0x14fc <__ultoa_invert+0x58>
    1510:	46 2f       	mov	r20, r22
    1512:	4f 70       	andi	r20, 0x0F	; 15
    1514:	40 5d       	subi	r20, 0xD0	; 208
    1516:	4a 33       	cpi	r20, 0x3A	; 58
    1518:	18 f0       	brcs	.+6      	; 0x1520 <__ultoa_invert+0x7c>
    151a:	49 5d       	subi	r20, 0xD9	; 217
    151c:	31 fd       	sbrc	r19, 1
    151e:	40 52       	subi	r20, 0x20	; 32
    1520:	41 93       	st	Z+, r20
    1522:	02 d0       	rcall	.+4      	; 0x1528 <__ultoa_invert+0x84>
    1524:	a9 f7       	brne	.-22     	; 0x1510 <__ultoa_invert+0x6c>
    1526:	ea cf       	rjmp	.-44     	; 0x14fc <__ultoa_invert+0x58>
    1528:	b4 e0       	ldi	r27, 0x04	; 4
    152a:	a6 95       	lsr	r26
    152c:	97 95       	ror	r25
    152e:	87 95       	ror	r24
    1530:	77 95       	ror	r23
    1532:	67 95       	ror	r22
    1534:	ba 95       	dec	r27
    1536:	c9 f7       	brne	.-14     	; 0x152a <__ultoa_invert+0x86>
    1538:	00 97       	sbiw	r24, 0x00	; 0
    153a:	61 05       	cpc	r22, r1
    153c:	71 05       	cpc	r23, r1
    153e:	08 95       	ret
    1540:	9b 01       	movw	r18, r22
    1542:	ac 01       	movw	r20, r24
    1544:	0a 2e       	mov	r0, r26
    1546:	06 94       	lsr	r0
    1548:	57 95       	ror	r21
    154a:	47 95       	ror	r20
    154c:	37 95       	ror	r19
    154e:	27 95       	ror	r18
    1550:	ba 95       	dec	r27
    1552:	c9 f7       	brne	.-14     	; 0x1546 <__ultoa_invert+0xa2>
    1554:	62 0f       	add	r22, r18
    1556:	73 1f       	adc	r23, r19
    1558:	84 1f       	adc	r24, r20
    155a:	95 1f       	adc	r25, r21
    155c:	a0 1d       	adc	r26, r0
    155e:	08 95       	ret

00001560 <_exit>:
    1560:	f8 94       	cli

00001562 <__stop_program>:
    1562:	ff cf       	rjmp	.-2      	; 0x1562 <__stop_program>
