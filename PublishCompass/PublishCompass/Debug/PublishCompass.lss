
PublishCompass.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  0000199c  00001a30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000199c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800128  00800128  00001a58  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a58  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ab4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00001af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000071a  00000000  00000000  00001bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000335  00000000  00000000  000022d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000468  00000000  00000000  0000260b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002dc  00000000  00000000  00002a74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000347  00000000  00000000  00002d50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005e4  00000000  00000000  00003097  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  0000367b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cc 00 	jmp	0x198	; 0x198 <__ctors_end>
       4:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
       8:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
       c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      10:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      14:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      18:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      1c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      20:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      24:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      28:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      2c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      30:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      34:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      38:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      3c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      40:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      44:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      48:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      4c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      50:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      54:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      58:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      5c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      60:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      64:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 00       	.word	0x003f	; ????

00000096 <__trampolines_end>:
      96:	6e 61       	ori	r22, 0x1E	; 30
      98:	6e 00       	.word	0x006e	; ????

0000009a <__c.2177>:
      9a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      aa:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      ba:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      ca:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      da:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      ea:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      fa:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     10a:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     11a:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     12a:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     13a:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     14a:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     15a:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     16a:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     17a:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     18a:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000198 <__ctors_end>:
     198:	11 24       	eor	r1, r1
     19a:	1f be       	out	0x3f, r1	; 63
     19c:	cf ef       	ldi	r28, 0xFF	; 255
     19e:	d8 e0       	ldi	r29, 0x08	; 8
     1a0:	de bf       	out	0x3e, r29	; 62
     1a2:	cd bf       	out	0x3d, r28	; 61

000001a4 <__do_copy_data>:
     1a4:	11 e0       	ldi	r17, 0x01	; 1
     1a6:	a0 e0       	ldi	r26, 0x00	; 0
     1a8:	b1 e0       	ldi	r27, 0x01	; 1
     1aa:	ec e9       	ldi	r30, 0x9C	; 156
     1ac:	f9 e1       	ldi	r31, 0x19	; 25
     1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <__do_copy_data+0x10>
     1b0:	05 90       	lpm	r0, Z+
     1b2:	0d 92       	st	X+, r0
     1b4:	a8 32       	cpi	r26, 0x28	; 40
     1b6:	b1 07       	cpc	r27, r17
     1b8:	d9 f7       	brne	.-10     	; 0x1b0 <__do_copy_data+0xc>

000001ba <__do_clear_bss>:
     1ba:	21 e0       	ldi	r18, 0x01	; 1
     1bc:	a8 e2       	ldi	r26, 0x28	; 40
     1be:	b1 e0       	ldi	r27, 0x01	; 1
     1c0:	01 c0       	rjmp	.+2      	; 0x1c4 <.do_clear_bss_start>

000001c2 <.do_clear_bss_loop>:
     1c2:	1d 92       	st	X+, r1

000001c4 <.do_clear_bss_start>:
     1c4:	ae 32       	cpi	r26, 0x2E	; 46
     1c6:	b2 07       	cpc	r27, r18
     1c8:	e1 f7       	brne	.-8      	; 0x1c2 <.do_clear_bss_loop>
     1ca:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <main>
     1ce:	0c 94 cc 0c 	jmp	0x1998	; 0x1998 <_exit>

000001d2 <__bad_interrupt>:
     1d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d6 <i2c_init>:

/*************************************************************************
 Initialization of the I2C bus interface. Need to be called only once
*************************************************************************/
void i2c_init(void)
{
     1d6:	cf 93       	push	r28
     1d8:	df 93       	push	r29
     1da:	cd b7       	in	r28, 0x3d	; 61
     1dc:	de b7       	in	r29, 0x3e	; 62
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
     1de:	89 eb       	ldi	r24, 0xB9	; 185
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	fc 01       	movw	r30, r24
     1e4:	10 82       	st	Z, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     1e6:	88 eb       	ldi	r24, 0xB8	; 184
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	22 e0       	ldi	r18, 0x02	; 2
     1ec:	fc 01       	movw	r30, r24
     1ee:	20 83       	st	Z, r18

}/* i2c_init */
     1f0:	df 91       	pop	r29
     1f2:	cf 91       	pop	r28
     1f4:	08 95       	ret

000001f6 <i2c_start>:
/*************************************************************************	
  Issues a start condition and sends address and transfer direction.
  return 0 = device accessible, 1= failed to access device
*************************************************************************/
unsigned char i2c_start(unsigned char address)
{
     1f6:	cf 93       	push	r28
     1f8:	df 93       	push	r29
     1fa:	00 d0       	rcall	.+0      	; 0x1fc <i2c_start+0x6>
     1fc:	cd b7       	in	r28, 0x3d	; 61
     1fe:	de b7       	in	r29, 0x3e	; 62
     200:	8a 83       	std	Y+2, r24	; 0x02
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     202:	8c eb       	ldi	r24, 0xBC	; 188
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	24 ea       	ldi	r18, 0xA4	; 164
     208:	fc 01       	movw	r30, r24
     20a:	20 83       	st	Z, r18

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     20c:	00 00       	nop
     20e:	8c eb       	ldi	r24, 0xBC	; 188
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	fc 01       	movw	r30, r24
     214:	80 81       	ld	r24, Z
     216:	88 23       	and	r24, r24
     218:	d4 f7       	brge	.-12     	; 0x20e <i2c_start+0x18>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     21a:	89 eb       	ldi	r24, 0xB9	; 185
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	fc 01       	movw	r30, r24
     220:	80 81       	ld	r24, Z
     222:	88 7f       	andi	r24, 0xF8	; 248
     224:	89 83       	std	Y+1, r24	; 0x01
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     226:	89 81       	ldd	r24, Y+1	; 0x01
     228:	88 30       	cpi	r24, 0x08	; 8
     22a:	29 f0       	breq	.+10     	; 0x236 <i2c_start+0x40>
     22c:	89 81       	ldd	r24, Y+1	; 0x01
     22e:	80 31       	cpi	r24, 0x10	; 16
     230:	11 f0       	breq	.+4      	; 0x236 <i2c_start+0x40>
     232:	81 e0       	ldi	r24, 0x01	; 1
     234:	20 c0       	rjmp	.+64     	; 0x276 <i2c_start+0x80>

	// send device address
	TWDR = address;
     236:	8b eb       	ldi	r24, 0xBB	; 187
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	2a 81       	ldd	r18, Y+2	; 0x02
     23c:	fc 01       	movw	r30, r24
     23e:	20 83       	st	Z, r18
	TWCR = (1<<TWINT) | (1<<TWEN);
     240:	8c eb       	ldi	r24, 0xBC	; 188
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	24 e8       	ldi	r18, 0x84	; 132
     246:	fc 01       	movw	r30, r24
     248:	20 83       	st	Z, r18

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     24a:	00 00       	nop
     24c:	8c eb       	ldi	r24, 0xBC	; 188
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	fc 01       	movw	r30, r24
     252:	80 81       	ld	r24, Z
     254:	88 23       	and	r24, r24
     256:	d4 f7       	brge	.-12     	; 0x24c <i2c_start+0x56>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     258:	89 eb       	ldi	r24, 0xB9	; 185
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	fc 01       	movw	r30, r24
     25e:	80 81       	ld	r24, Z
     260:	88 7f       	andi	r24, 0xF8	; 248
     262:	89 83       	std	Y+1, r24	; 0x01
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     264:	89 81       	ldd	r24, Y+1	; 0x01
     266:	88 31       	cpi	r24, 0x18	; 24
     268:	29 f0       	breq	.+10     	; 0x274 <i2c_start+0x7e>
     26a:	89 81       	ldd	r24, Y+1	; 0x01
     26c:	80 34       	cpi	r24, 0x40	; 64
     26e:	11 f0       	breq	.+4      	; 0x274 <i2c_start+0x7e>
     270:	81 e0       	ldi	r24, 0x01	; 1
     272:	01 c0       	rjmp	.+2      	; 0x276 <i2c_start+0x80>

	return 0;
     274:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     276:	0f 90       	pop	r0
     278:	0f 90       	pop	r0
     27a:	df 91       	pop	r29
     27c:	cf 91       	pop	r28
     27e:	08 95       	ret

00000280 <i2c_start_wait>:
 If device is busy, use ack polling to wait until device is ready
 
 Input:   address and transfer direction of I2C device
*************************************************************************/
void i2c_start_wait(unsigned char address)
{
     280:	cf 93       	push	r28
     282:	df 93       	push	r29
     284:	00 d0       	rcall	.+0      	; 0x286 <i2c_start_wait+0x6>
     286:	cd b7       	in	r28, 0x3d	; 61
     288:	de b7       	in	r29, 0x3e	; 62
     28a:	8a 83       	std	Y+2, r24	; 0x02


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     28c:	8c eb       	ldi	r24, 0xBC	; 188
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	24 ea       	ldi	r18, 0xA4	; 164
     292:	fc 01       	movw	r30, r24
     294:	20 83       	st	Z, r18
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     296:	00 00       	nop
     298:	8c eb       	ldi	r24, 0xBC	; 188
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	fc 01       	movw	r30, r24
     29e:	80 81       	ld	r24, Z
     2a0:	88 23       	and	r24, r24
     2a2:	d4 f7       	brge	.-12     	; 0x298 <i2c_start_wait+0x18>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     2a4:	89 eb       	ldi	r24, 0xB9	; 185
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	fc 01       	movw	r30, r24
     2aa:	80 81       	ld	r24, Z
     2ac:	88 7f       	andi	r24, 0xF8	; 248
     2ae:	89 83       	std	Y+1, r24	; 0x01
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
     2b0:	89 81       	ldd	r24, Y+1	; 0x01
     2b2:	88 30       	cpi	r24, 0x08	; 8
     2b4:	21 f0       	breq	.+8      	; 0x2be <i2c_start_wait+0x3e>
     2b6:	89 81       	ldd	r24, Y+1	; 0x01
     2b8:	80 31       	cpi	r24, 0x10	; 16
     2ba:	09 f0       	breq	.+2      	; 0x2be <i2c_start_wait+0x3e>
     2bc:	2f c0       	rjmp	.+94     	; 0x31c <i2c_start_wait+0x9c>
    
    	// send device address
    	TWDR = address;
     2be:	8b eb       	ldi	r24, 0xBB	; 187
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	2a 81       	ldd	r18, Y+2	; 0x02
     2c4:	fc 01       	movw	r30, r24
     2c6:	20 83       	st	Z, r18
    	TWCR = (1<<TWINT) | (1<<TWEN);
     2c8:	8c eb       	ldi	r24, 0xBC	; 188
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	24 e8       	ldi	r18, 0x84	; 132
     2ce:	fc 01       	movw	r30, r24
     2d0:	20 83       	st	Z, r18
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     2d2:	00 00       	nop
     2d4:	8c eb       	ldi	r24, 0xBC	; 188
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	fc 01       	movw	r30, r24
     2da:	80 81       	ld	r24, Z
     2dc:	88 23       	and	r24, r24
     2de:	d4 f7       	brge	.-12     	; 0x2d4 <i2c_start_wait+0x54>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     2e0:	89 eb       	ldi	r24, 0xB9	; 185
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	fc 01       	movw	r30, r24
     2e6:	80 81       	ld	r24, Z
     2e8:	88 7f       	andi	r24, 0xF8	; 248
     2ea:	89 83       	std	Y+1, r24	; 0x01
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
     2ec:	89 81       	ldd	r24, Y+1	; 0x01
     2ee:	80 32       	cpi	r24, 0x20	; 32
     2f0:	19 f0       	breq	.+6      	; 0x2f8 <i2c_start_wait+0x78>
     2f2:	89 81       	ldd	r24, Y+1	; 0x01
     2f4:	88 35       	cpi	r24, 0x58	; 88
     2f6:	89 f4       	brne	.+34     	; 0x31a <i2c_start_wait+0x9a>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     2f8:	8c eb       	ldi	r24, 0xBC	; 188
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	24 e9       	ldi	r18, 0x94	; 148
     2fe:	fc 01       	movw	r30, r24
     300:	20 83       	st	Z, r18
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
     302:	00 00       	nop
     304:	8c eb       	ldi	r24, 0xBC	; 188
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	fc 01       	movw	r30, r24
     30a:	80 81       	ld	r24, Z
     30c:	88 2f       	mov	r24, r24
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	80 71       	andi	r24, 0x10	; 16
     312:	99 27       	eor	r25, r25
     314:	89 2b       	or	r24, r25
     316:	b1 f7       	brne	.-20     	; 0x304 <i2c_start_wait+0x84>
	        
    	    continue;
     318:	01 c0       	rjmp	.+2      	; 0x31c <i2c_start_wait+0x9c>
    	}
    	//if( twst != TW_MT_SLA_ACK) return 1;
    	break;
     31a:	01 c0       	rjmp	.+2      	; 0x31e <i2c_start_wait+0x9e>
     }
     31c:	b7 cf       	rjmp	.-146    	; 0x28c <i2c_start_wait+0xc>

}/* i2c_start_wait */
     31e:	0f 90       	pop	r0
     320:	0f 90       	pop	r0
     322:	df 91       	pop	r29
     324:	cf 91       	pop	r28
     326:	08 95       	ret

00000328 <i2c_stop>:

/*************************************************************************
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
     328:	cf 93       	push	r28
     32a:	df 93       	push	r29
     32c:	cd b7       	in	r28, 0x3d	; 61
     32e:	de b7       	in	r29, 0x3e	; 62
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     330:	8c eb       	ldi	r24, 0xBC	; 188
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	24 e9       	ldi	r18, 0x94	; 148
     336:	fc 01       	movw	r30, r24
     338:	20 83       	st	Z, r18
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     33a:	00 00       	nop
     33c:	8c eb       	ldi	r24, 0xBC	; 188
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	fc 01       	movw	r30, r24
     342:	80 81       	ld	r24, Z
     344:	88 2f       	mov	r24, r24
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	80 71       	andi	r24, 0x10	; 16
     34a:	99 27       	eor	r25, r25
     34c:	89 2b       	or	r24, r25
     34e:	b1 f7       	brne	.-20     	; 0x33c <i2c_stop+0x14>

}/* i2c_stop */
     350:	df 91       	pop	r29
     352:	cf 91       	pop	r28
     354:	08 95       	ret

00000356 <i2c_write>:
  Input:    byte to be transfered
  Return:   0 write successful 
            1 write failed
*************************************************************************/
unsigned char i2c_write( unsigned char data )
{	
     356:	cf 93       	push	r28
     358:	df 93       	push	r29
     35a:	00 d0       	rcall	.+0      	; 0x35c <i2c_write+0x6>
     35c:	cd b7       	in	r28, 0x3d	; 61
     35e:	de b7       	in	r29, 0x3e	; 62
     360:	8a 83       	std	Y+2, r24	; 0x02
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     362:	8b eb       	ldi	r24, 0xBB	; 187
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	2a 81       	ldd	r18, Y+2	; 0x02
     368:	fc 01       	movw	r30, r24
     36a:	20 83       	st	Z, r18
	TWCR = (1<<TWINT) | (1<<TWEN);
     36c:	8c eb       	ldi	r24, 0xBC	; 188
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	24 e8       	ldi	r18, 0x84	; 132
     372:	fc 01       	movw	r30, r24
     374:	20 83       	st	Z, r18

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     376:	00 00       	nop
     378:	8c eb       	ldi	r24, 0xBC	; 188
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	fc 01       	movw	r30, r24
     37e:	80 81       	ld	r24, Z
     380:	88 23       	and	r24, r24
     382:	d4 f7       	brge	.-12     	; 0x378 <i2c_write+0x22>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     384:	89 eb       	ldi	r24, 0xB9	; 185
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	fc 01       	movw	r30, r24
     38a:	80 81       	ld	r24, Z
     38c:	88 7f       	andi	r24, 0xF8	; 248
     38e:	89 83       	std	Y+1, r24	; 0x01
	if( twst != TW_MT_DATA_ACK) return 1;
     390:	89 81       	ldd	r24, Y+1	; 0x01
     392:	88 32       	cpi	r24, 0x28	; 40
     394:	11 f0       	breq	.+4      	; 0x39a <i2c_write+0x44>
     396:	81 e0       	ldi	r24, 0x01	; 1
     398:	01 c0       	rjmp	.+2      	; 0x39c <i2c_write+0x46>
	return 0;
     39a:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_write */
     39c:	0f 90       	pop	r0
     39e:	0f 90       	pop	r0
     3a0:	df 91       	pop	r29
     3a2:	cf 91       	pop	r28
     3a4:	08 95       	ret

000003a6 <i2c_readAck>:
 Read one byte from the I2C device, request more data from device 
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	cd b7       	in	r28, 0x3d	; 61
     3ac:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     3ae:	8c eb       	ldi	r24, 0xBC	; 188
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	24 ec       	ldi	r18, 0xC4	; 196
     3b4:	fc 01       	movw	r30, r24
     3b6:	20 83       	st	Z, r18
	while(!(TWCR & (1<<TWINT)));    
     3b8:	00 00       	nop
     3ba:	8c eb       	ldi	r24, 0xBC	; 188
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	fc 01       	movw	r30, r24
     3c0:	80 81       	ld	r24, Z
     3c2:	88 23       	and	r24, r24
     3c4:	d4 f7       	brge	.-12     	; 0x3ba <i2c_readAck+0x14>

    return TWDR;
     3c6:	8b eb       	ldi	r24, 0xBB	; 187
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	fc 01       	movw	r30, r24
     3cc:	80 81       	ld	r24, Z

}/* i2c_readAck */
     3ce:	df 91       	pop	r29
     3d0:	cf 91       	pop	r28
     3d2:	08 95       	ret

000003d4 <i2c_readNak>:
 Read one byte from the I2C device, read is followed by a stop condition 
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
     3d4:	cf 93       	push	r28
     3d6:	df 93       	push	r29
     3d8:	cd b7       	in	r28, 0x3d	; 61
     3da:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1<<TWINT) | (1<<TWEN);
     3dc:	8c eb       	ldi	r24, 0xBC	; 188
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	24 e8       	ldi	r18, 0x84	; 132
     3e2:	fc 01       	movw	r30, r24
     3e4:	20 83       	st	Z, r18
	while(!(TWCR & (1<<TWINT)));
     3e6:	00 00       	nop
     3e8:	8c eb       	ldi	r24, 0xBC	; 188
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	fc 01       	movw	r30, r24
     3ee:	80 81       	ld	r24, Z
     3f0:	88 23       	and	r24, r24
     3f2:	d4 f7       	brge	.-12     	; 0x3e8 <i2c_readNak+0x14>
	
    return TWDR;
     3f4:	8b eb       	ldi	r24, 0xBB	; 187
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	fc 01       	movw	r30, r24
     3fa:	80 81       	ld	r24, Z

}/* i2c_readNak */
     3fc:	df 91       	pop	r29
     3fe:	cf 91       	pop	r28
     400:	08 95       	ret

00000402 <HMC5883L_init>:
#define		X_LSB_REG		0x03
#define		Y_LSB_REG		0x07
#define		Z_LSB_REG		0x05

void HMC5883L_init()
{
     402:	cf 93       	push	r28
     404:	df 93       	push	r29
     406:	cd b7       	in	r28, 0x3d	; 61
     408:	de b7       	in	r29, 0x3e	; 62
     40a:	2e 97       	sbiw	r28, 0x0e	; 14
     40c:	0f b6       	in	r0, 0x3f	; 63
     40e:	f8 94       	cli
     410:	de bf       	out	0x3e, r29	; 62
     412:	0f be       	out	0x3f, r0	; 63
     414:	cd bf       	out	0x3d, r28	; 61
	// Write 0x70 to HMC5883L register  A
	//	"	 0x20 to	"		"		B
	//	"	 0x00 to	"		"		Mode
	i2c_start(HMC5883L_ADDR+I2C_WRITE);
     416:	8c e3       	ldi	r24, 0x3C	; 60
     418:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <i2c_start>
	i2c_write(CONF_A_REG);
     41c:	80 e0       	ldi	r24, 0x00	; 0
     41e:	0e 94 ab 01 	call	0x356	; 0x356 <i2c_write>
	i2c_write(0x70);	// avg 8 samples, 15Hz, Normal measurement
     422:	80 e7       	ldi	r24, 0x70	; 112
     424:	0e 94 ab 01 	call	0x356	; 0x356 <i2c_write>
	i2c_write(0x20);
     428:	80 e2       	ldi	r24, 0x20	; 32
     42a:	0e 94 ab 01 	call	0x356	; 0x356 <i2c_write>
	i2c_write(0x00);
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	0e 94 ab 01 	call	0x356	; 0x356 <i2c_write>
	i2c_stop();			// Release the bus. 
     434:	0e 94 94 01 	call	0x328	; 0x328 <i2c_stop>
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	90 e0       	ldi	r25, 0x00	; 0
     43c:	a0 e8       	ldi	r26, 0x80	; 128
     43e:	bf e3       	ldi	r27, 0x3F	; 63
     440:	89 83       	std	Y+1, r24	; 0x01
     442:	9a 83       	std	Y+2, r25	; 0x02
     444:	ab 83       	std	Y+3, r26	; 0x03
     446:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     448:	20 e0       	ldi	r18, 0x00	; 0
     44a:	30 e0       	ldi	r19, 0x00	; 0
     44c:	4a ef       	ldi	r20, 0xFA	; 250
     44e:	54 e4       	ldi	r21, 0x44	; 68
     450:	69 81       	ldd	r22, Y+1	; 0x01
     452:	7a 81       	ldd	r23, Y+2	; 0x02
     454:	8b 81       	ldd	r24, Y+3	; 0x03
     456:	9c 81       	ldd	r25, Y+4	; 0x04
     458:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     45c:	dc 01       	movw	r26, r24
     45e:	cb 01       	movw	r24, r22
     460:	8d 83       	std	Y+5, r24	; 0x05
     462:	9e 83       	std	Y+6, r25	; 0x06
     464:	af 83       	std	Y+7, r26	; 0x07
     466:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     468:	20 e0       	ldi	r18, 0x00	; 0
     46a:	30 e0       	ldi	r19, 0x00	; 0
     46c:	40 e8       	ldi	r20, 0x80	; 128
     46e:	5f e3       	ldi	r21, 0x3F	; 63
     470:	6d 81       	ldd	r22, Y+5	; 0x05
     472:	7e 81       	ldd	r23, Y+6	; 0x06
     474:	8f 81       	ldd	r24, Y+7	; 0x07
     476:	98 85       	ldd	r25, Y+8	; 0x08
     478:	0e 94 4b 05 	call	0xa96	; 0xa96 <__cmpsf2>
     47c:	88 23       	and	r24, r24
     47e:	2c f4       	brge	.+10     	; 0x48a <HMC5883L_init+0x88>
		__ticks = 1;
     480:	81 e0       	ldi	r24, 0x01	; 1
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	9a 87       	std	Y+10, r25	; 0x0a
     486:	89 87       	std	Y+9, r24	; 0x09
     488:	3f c0       	rjmp	.+126    	; 0x508 <HMC5883L_init+0x106>
	else if (__tmp > 65535)
     48a:	20 e0       	ldi	r18, 0x00	; 0
     48c:	3f ef       	ldi	r19, 0xFF	; 255
     48e:	4f e7       	ldi	r20, 0x7F	; 127
     490:	57 e4       	ldi	r21, 0x47	; 71
     492:	6d 81       	ldd	r22, Y+5	; 0x05
     494:	7e 81       	ldd	r23, Y+6	; 0x06
     496:	8f 81       	ldd	r24, Y+7	; 0x07
     498:	98 85       	ldd	r25, Y+8	; 0x08
     49a:	0e 94 d1 06 	call	0xda2	; 0xda2 <__gesf2>
     49e:	18 16       	cp	r1, r24
     4a0:	4c f5       	brge	.+82     	; 0x4f4 <HMC5883L_init+0xf2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4a2:	20 e0       	ldi	r18, 0x00	; 0
     4a4:	30 e0       	ldi	r19, 0x00	; 0
     4a6:	40 e2       	ldi	r20, 0x20	; 32
     4a8:	51 e4       	ldi	r21, 0x41	; 65
     4aa:	69 81       	ldd	r22, Y+1	; 0x01
     4ac:	7a 81       	ldd	r23, Y+2	; 0x02
     4ae:	8b 81       	ldd	r24, Y+3	; 0x03
     4b0:	9c 81       	ldd	r25, Y+4	; 0x04
     4b2:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     4b6:	dc 01       	movw	r26, r24
     4b8:	cb 01       	movw	r24, r22
     4ba:	bc 01       	movw	r22, r24
     4bc:	cd 01       	movw	r24, r26
     4be:	0e 94 c9 05 	call	0xb92	; 0xb92 <__fixunssfsi>
     4c2:	dc 01       	movw	r26, r24
     4c4:	cb 01       	movw	r24, r22
     4c6:	9a 87       	std	Y+10, r25	; 0x0a
     4c8:	89 87       	std	Y+9, r24	; 0x09
     4ca:	0f c0       	rjmp	.+30     	; 0x4ea <HMC5883L_init+0xe8>
     4cc:	88 ec       	ldi	r24, 0xC8	; 200
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	9c 87       	std	Y+12, r25	; 0x0c
     4d2:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     4d4:	8b 85       	ldd	r24, Y+11	; 0x0b
     4d6:	9c 85       	ldd	r25, Y+12	; 0x0c
     4d8:	01 97       	sbiw	r24, 0x01	; 1
     4da:	f1 f7       	brne	.-4      	; 0x4d8 <HMC5883L_init+0xd6>
     4dc:	9c 87       	std	Y+12, r25	; 0x0c
     4de:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4e0:	89 85       	ldd	r24, Y+9	; 0x09
     4e2:	9a 85       	ldd	r25, Y+10	; 0x0a
     4e4:	01 97       	sbiw	r24, 0x01	; 1
     4e6:	9a 87       	std	Y+10, r25	; 0x0a
     4e8:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4ea:	89 85       	ldd	r24, Y+9	; 0x09
     4ec:	9a 85       	ldd	r25, Y+10	; 0x0a
     4ee:	89 2b       	or	r24, r25
     4f0:	69 f7       	brne	.-38     	; 0x4cc <HMC5883L_init+0xca>
     4f2:	14 c0       	rjmp	.+40     	; 0x51c <HMC5883L_init+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4f4:	6d 81       	ldd	r22, Y+5	; 0x05
     4f6:	7e 81       	ldd	r23, Y+6	; 0x06
     4f8:	8f 81       	ldd	r24, Y+7	; 0x07
     4fa:	98 85       	ldd	r25, Y+8	; 0x08
     4fc:	0e 94 c9 05 	call	0xb92	; 0xb92 <__fixunssfsi>
     500:	dc 01       	movw	r26, r24
     502:	cb 01       	movw	r24, r22
     504:	9a 87       	std	Y+10, r25	; 0x0a
     506:	89 87       	std	Y+9, r24	; 0x09
     508:	89 85       	ldd	r24, Y+9	; 0x09
     50a:	9a 85       	ldd	r25, Y+10	; 0x0a
     50c:	9e 87       	std	Y+14, r25	; 0x0e
     50e:	8d 87       	std	Y+13, r24	; 0x0d
     510:	8d 85       	ldd	r24, Y+13	; 0x0d
     512:	9e 85       	ldd	r25, Y+14	; 0x0e
     514:	01 97       	sbiw	r24, 0x01	; 1
     516:	f1 f7       	brne	.-4      	; 0x514 <HMC5883L_init+0x112>
     518:	9e 87       	std	Y+14, r25	; 0x0e
     51a:	8d 87       	std	Y+13, r24	; 0x0d
// 	// Write 0x00 to HMC5883L Mode register
// 	i2c_start_wait(WRITE_ADDRESS);
// 	i2c_write(CONF_M_REG);
// 	i2c_write(0x00);	// slow I2C, continuous measurement mode
// 	i2c_stop();			// release bus
}
     51c:	2e 96       	adiw	r28, 0x0e	; 14
     51e:	0f b6       	in	r0, 0x3f	; 63
     520:	f8 94       	cli
     522:	de bf       	out	0x3e, r29	; 62
     524:	0f be       	out	0x3f, r0	; 63
     526:	cd bf       	out	0x3d, r28	; 61
     528:	df 91       	pop	r29
     52a:	cf 91       	pop	r28
     52c:	08 95       	ret

0000052e <readCompass>:

void readCompass(int16_t *value) 
{
     52e:	0f 93       	push	r16
     530:	1f 93       	push	r17
     532:	cf 93       	push	r28
     534:	df 93       	push	r29
     536:	00 d0       	rcall	.+0      	; 0x538 <readCompass+0xa>
     538:	00 d0       	rcall	.+0      	; 0x53a <readCompass+0xc>
     53a:	cd b7       	in	r28, 0x3d	; 61
     53c:	de b7       	in	r29, 0x3e	; 62
     53e:	9c 83       	std	Y+4, r25	; 0x04
     540:	8b 83       	std	Y+3, r24	; 0x03
	int16_t temp;
	//i2c_start_wait(WRITE_ADDRESS);
	i2c_start(WRITE_ADDRESS);
     542:	8c e3       	ldi	r24, 0x3C	; 60
     544:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <i2c_start>
	i2c_write(0x03);
     548:	83 e0       	ldi	r24, 0x03	; 3
     54a:	0e 94 ab 01 	call	0x356	; 0x356 <i2c_write>
	i2c_start_wait(READ_ADDRESS);
     54e:	8d e3       	ldi	r24, 0x3D	; 61
     550:	0e 94 40 01 	call	0x280	; 0x280 <i2c_start_wait>
	// Read x axis
	temp = i2c_readAck();
     554:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <i2c_readAck>
     558:	88 2f       	mov	r24, r24
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	9a 83       	std	Y+2, r25	; 0x02
     55e:	89 83       	std	Y+1, r24	; 0x01
	temp = (temp << 8) | i2c_readAck();
     560:	89 81       	ldd	r24, Y+1	; 0x01
     562:	9a 81       	ldd	r25, Y+2	; 0x02
     564:	18 2f       	mov	r17, r24
     566:	00 27       	eor	r16, r16
     568:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <i2c_readAck>
     56c:	88 2f       	mov	r24, r24
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	80 2b       	or	r24, r16
     572:	91 2b       	or	r25, r17
     574:	9a 83       	std	Y+2, r25	; 0x02
     576:	89 83       	std	Y+1, r24	; 0x01
	value[0] = temp;
     578:	8b 81       	ldd	r24, Y+3	; 0x03
     57a:	9c 81       	ldd	r25, Y+4	; 0x04
     57c:	29 81       	ldd	r18, Y+1	; 0x01
     57e:	3a 81       	ldd	r19, Y+2	; 0x02
     580:	fc 01       	movw	r30, r24
     582:	31 83       	std	Z+1, r19	; 0x01
     584:	20 83       	st	Z, r18
	
	// Read z
	temp = i2c_readAck();
     586:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <i2c_readAck>
     58a:	88 2f       	mov	r24, r24
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	9a 83       	std	Y+2, r25	; 0x02
     590:	89 83       	std	Y+1, r24	; 0x01
	temp = (temp << 8) | i2c_readAck();
     592:	89 81       	ldd	r24, Y+1	; 0x01
     594:	9a 81       	ldd	r25, Y+2	; 0x02
     596:	18 2f       	mov	r17, r24
     598:	00 27       	eor	r16, r16
     59a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <i2c_readAck>
     59e:	88 2f       	mov	r24, r24
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	80 2b       	or	r24, r16
     5a4:	91 2b       	or	r25, r17
     5a6:	9a 83       	std	Y+2, r25	; 0x02
     5a8:	89 83       	std	Y+1, r24	; 0x01
	value[2] = temp;
     5aa:	8b 81       	ldd	r24, Y+3	; 0x03
     5ac:	9c 81       	ldd	r25, Y+4	; 0x04
     5ae:	04 96       	adiw	r24, 0x04	; 4
     5b0:	29 81       	ldd	r18, Y+1	; 0x01
     5b2:	3a 81       	ldd	r19, Y+2	; 0x02
     5b4:	fc 01       	movw	r30, r24
     5b6:	31 83       	std	Z+1, r19	; 0x01
     5b8:	20 83       	st	Z, r18
	
	// Read y axis
	temp = i2c_readAck();
     5ba:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <i2c_readAck>
     5be:	88 2f       	mov	r24, r24
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	9a 83       	std	Y+2, r25	; 0x02
     5c4:	89 83       	std	Y+1, r24	; 0x01
	temp = (temp << 8) | i2c_readNak();
     5c6:	89 81       	ldd	r24, Y+1	; 0x01
     5c8:	9a 81       	ldd	r25, Y+2	; 0x02
     5ca:	18 2f       	mov	r17, r24
     5cc:	00 27       	eor	r16, r16
     5ce:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <i2c_readNak>
     5d2:	88 2f       	mov	r24, r24
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	80 2b       	or	r24, r16
     5d8:	91 2b       	or	r25, r17
     5da:	9a 83       	std	Y+2, r25	; 0x02
     5dc:	89 83       	std	Y+1, r24	; 0x01
	value[1] = temp;
     5de:	8b 81       	ldd	r24, Y+3	; 0x03
     5e0:	9c 81       	ldd	r25, Y+4	; 0x04
     5e2:	02 96       	adiw	r24, 0x02	; 2
     5e4:	29 81       	ldd	r18, Y+1	; 0x01
     5e6:	3a 81       	ldd	r19, Y+2	; 0x02
     5e8:	fc 01       	movw	r30, r24
     5ea:	31 83       	std	Z+1, r19	; 0x01
     5ec:	20 83       	st	Z, r18

	i2c_stop();
     5ee:	0e 94 94 01 	call	0x328	; 0x328 <i2c_stop>
     5f2:	0f 90       	pop	r0
     5f4:	0f 90       	pop	r0
     5f6:	0f 90       	pop	r0
     5f8:	0f 90       	pop	r0
     5fa:	df 91       	pop	r29
     5fc:	cf 91       	pop	r28
     5fe:	1f 91       	pop	r17
     600:	0f 91       	pop	r16
     602:	08 95       	ret

00000604 <USART0_sendChar>:
/*
 * Procedure to send a single character over USART0. If character is linefeed, reset 
 * line. 
 * Assumes ASCII code. 
 */ 
{
     604:	cf 93       	push	r28
     606:	df 93       	push	r29
     608:	00 d0       	rcall	.+0      	; 0x60a <USART0_sendChar+0x6>
     60a:	1f 92       	push	r1
     60c:	cd b7       	in	r28, 0x3d	; 61
     60e:	de b7       	in	r29, 0x3e	; 62
     610:	89 83       	std	Y+1, r24	; 0x01
     612:	7b 83       	std	Y+3, r23	; 0x03
     614:	6a 83       	std	Y+2, r22	; 0x02
	if(data == '\n')
     616:	89 81       	ldd	r24, Y+1	; 0x01
     618:	8a 30       	cpi	r24, 0x0A	; 10
     61a:	81 f4       	brne	.+32     	; 0x63c <USART0_sendChar+0x38>
	{
		while(! (UCSR0A & (1<<UDRE0)) );
     61c:	00 00       	nop
     61e:	80 ec       	ldi	r24, 0xC0	; 192
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	fc 01       	movw	r30, r24
     624:	80 81       	ld	r24, Z
     626:	88 2f       	mov	r24, r24
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	80 72       	andi	r24, 0x20	; 32
     62c:	99 27       	eor	r25, r25
     62e:	89 2b       	or	r24, r25
     630:	b1 f3       	breq	.-20     	; 0x61e <USART0_sendChar+0x1a>
		UDR0 = '\r';
     632:	86 ec       	ldi	r24, 0xC6	; 198
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	2d e0       	ldi	r18, 0x0D	; 13
     638:	fc 01       	movw	r30, r24
     63a:	20 83       	st	Z, r18
	}
	while(! (UCSR0A & (1<<UDRE0)) );
     63c:	00 00       	nop
     63e:	80 ec       	ldi	r24, 0xC0	; 192
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	fc 01       	movw	r30, r24
     644:	80 81       	ld	r24, Z
     646:	88 2f       	mov	r24, r24
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	80 72       	andi	r24, 0x20	; 32
     64c:	99 27       	eor	r25, r25
     64e:	89 2b       	or	r24, r25
     650:	b1 f3       	breq	.-20     	; 0x63e <USART0_sendChar+0x3a>
	UDR0 = data;
     652:	86 ec       	ldi	r24, 0xC6	; 198
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	29 81       	ldd	r18, Y+1	; 0x01
     658:	fc 01       	movw	r30, r24
     65a:	20 83       	st	Z, r18
	return 0;
     65c:	80 e0       	ldi	r24, 0x00	; 0
     65e:	90 e0       	ldi	r25, 0x00	; 0
}
     660:	0f 90       	pop	r0
     662:	0f 90       	pop	r0
     664:	0f 90       	pop	r0
     666:	df 91       	pop	r29
     668:	cf 91       	pop	r28
     66a:	08 95       	ret

0000066c <USART0_init>:
void USART0_init (void)
/*
 * Procedure to initialize USART0 asynchronous with enabled RX/TX, 8 bit data,
 * no parity, and 1 stop bit. 
*/
{
     66c:	cf 93       	push	r28
     66e:	df 93       	push	r29
     670:	cd b7       	in	r28, 0x3d	; 61
     672:	de b7       	in	r29, 0x3e	; 62
	UCSR0B = (1<<TXEN0)  | (1<<RXEN0);	// enable transmit/receive
     674:	81 ec       	ldi	r24, 0xC1	; 193
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	28 e1       	ldi	r18, 0x18	; 24
     67a:	fc 01       	movw	r30, r24
     67c:	20 83       	st	Z, r18
	UCSR0C = (1<<UCSZ01) | (1<<UCSZ00);	// asynchronous, 8N1
     67e:	82 ec       	ldi	r24, 0xC2	; 194
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	26 e0       	ldi	r18, 0x06	; 6
     684:	fc 01       	movw	r30, r24
     686:	20 83       	st	Z, r18
	UBRR0 = ASYNCH_NORM_PRESCALER;		// To set 9600 baud rate with 8MHz clock
     688:	84 ec       	ldi	r24, 0xC4	; 196
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	23 e3       	ldi	r18, 0x33	; 51
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	fc 01       	movw	r30, r24
     692:	31 83       	std	Z+1, r19	; 0x01
     694:	20 83       	st	Z, r18
}
     696:	df 91       	pop	r29
     698:	cf 91       	pop	r28
     69a:	08 95       	ret

0000069c <USART0_ReceiveChar>:

int USART0_ReceiveChar(FILE *stream)
{
     69c:	cf 93       	push	r28
     69e:	df 93       	push	r29
     6a0:	00 d0       	rcall	.+0      	; 0x6a2 <USART0_ReceiveChar+0x6>
     6a2:	1f 92       	push	r1
     6a4:	cd b7       	in	r28, 0x3d	; 61
     6a6:	de b7       	in	r29, 0x3e	; 62
     6a8:	9b 83       	std	Y+3, r25	; 0x03
     6aa:	8a 83       	std	Y+2, r24	; 0x02
	uint8_t u8Data;
	// Wait for byte to be received
	while(!(UCSR0A&(1<<RXC0))){};
     6ac:	00 00       	nop
     6ae:	80 ec       	ldi	r24, 0xC0	; 192
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	fc 01       	movw	r30, r24
     6b4:	80 81       	ld	r24, Z
     6b6:	88 23       	and	r24, r24
     6b8:	d4 f7       	brge	.-12     	; 0x6ae <USART0_ReceiveChar+0x12>
	u8Data=UDR0;
     6ba:	86 ec       	ldi	r24, 0xC6	; 198
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	fc 01       	movw	r30, r24
     6c0:	80 81       	ld	r24, Z
     6c2:	89 83       	std	Y+1, r24	; 0x01
	//echo input data
	//USART0SendByte(u8Data,stream);
	// Return received data
	return u8Data;
     6c4:	89 81       	ldd	r24, Y+1	; 0x01
     6c6:	88 2f       	mov	r24, r24
     6c8:	90 e0       	ldi	r25, 0x00	; 0
}
     6ca:	0f 90       	pop	r0
     6cc:	0f 90       	pop	r0
     6ce:	0f 90       	pop	r0
     6d0:	df 91       	pop	r29
     6d2:	cf 91       	pop	r28
     6d4:	08 95       	ret

000006d6 <main>:

//set stream pointer
FILE usart0_str = FDEV_SETUP_STREAM(USART0_sendChar, USART0_ReceiveChar, _FDEV_SETUP_RW);

int main(void)
{
     6d6:	cf 92       	push	r12
     6d8:	df 92       	push	r13
     6da:	ef 92       	push	r14
     6dc:	ff 92       	push	r15
     6de:	cf 93       	push	r28
     6e0:	df 93       	push	r29
     6e2:	cd b7       	in	r28, 0x3d	; 61
     6e4:	de b7       	in	r29, 0x3e	; 62
     6e6:	68 97       	sbiw	r28, 0x18	; 24
     6e8:	0f b6       	in	r0, 0x3f	; 63
     6ea:	f8 94       	cli
     6ec:	de bf       	out	0x3e, r29	; 62
     6ee:	0f be       	out	0x3f, r0	; 63
     6f0:	cd bf       	out	0x3d, r28	; 61
	int16_t values[3];
	double  direction;
	
	stdin = stdout = &usart0_str;
     6f2:	80 e0       	ldi	r24, 0x00	; 0
     6f4:	91 e0       	ldi	r25, 0x01	; 1
     6f6:	90 93 2b 01 	sts	0x012B, r25
     6fa:	80 93 2a 01 	sts	0x012A, r24
     6fe:	80 91 2a 01 	lds	r24, 0x012A
     702:	90 91 2b 01 	lds	r25, 0x012B
     706:	90 93 29 01 	sts	0x0129, r25
     70a:	80 93 28 01 	sts	0x0128, r24
	
	USART0_init();
     70e:	0e 94 36 03 	call	0x66c	; 0x66c <USART0_init>
	i2c_init();
     712:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <i2c_init>
	HMC5883L_init();
     716:	0e 94 01 02 	call	0x402	; 0x402 <HMC5883L_init>

	printf("Hello world!\n");
     71a:	8e e0       	ldi	r24, 0x0E	; 14
     71c:	91 e0       	ldi	r25, 0x01	; 1
     71e:	0e 94 3e 0c 	call	0x187c	; 0x187c <puts>
    while (1)
    {
		readCompass(values);
     722:	ce 01       	movw	r24, r28
     724:	43 96       	adiw	r24, 0x13	; 19
     726:	0e 94 97 02 	call	0x52e	; 0x52e <readCompass>
		//magnitude = (uint32_t)sqrt(values[0]*values[0] + values[1]*values[1] + values[2]*values[2]);
		// Get direction on the xz-plane
		direction = atan2(values[2], values[0]) * 180 / M_PI;
     72a:	8b 89       	ldd	r24, Y+19	; 0x13
     72c:	9c 89       	ldd	r25, Y+20	; 0x14
     72e:	09 2e       	mov	r0, r25
     730:	00 0c       	add	r0, r0
     732:	aa 0b       	sbc	r26, r26
     734:	bb 0b       	sbc	r27, r27
     736:	bc 01       	movw	r22, r24
     738:	cd 01       	movw	r24, r26
     73a:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__floatsisf>
     73e:	6b 01       	movw	r12, r22
     740:	7c 01       	movw	r14, r24
     742:	8f 89       	ldd	r24, Y+23	; 0x17
     744:	98 8d       	ldd	r25, Y+24	; 0x18
     746:	09 2e       	mov	r0, r25
     748:	00 0c       	add	r0, r0
     74a:	aa 0b       	sbc	r26, r26
     74c:	bb 0b       	sbc	r27, r27
     74e:	bc 01       	movw	r22, r24
     750:	cd 01       	movw	r24, r26
     752:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__floatsisf>
     756:	dc 01       	movw	r26, r24
     758:	cb 01       	movw	r24, r22
     75a:	a7 01       	movw	r20, r14
     75c:	96 01       	movw	r18, r12
     75e:	bc 01       	movw	r22, r24
     760:	cd 01       	movw	r24, r26
     762:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <atan2>
     766:	dc 01       	movw	r26, r24
     768:	cb 01       	movw	r24, r22
     76a:	20 e0       	ldi	r18, 0x00	; 0
     76c:	30 e0       	ldi	r19, 0x00	; 0
     76e:	44 e3       	ldi	r20, 0x34	; 52
     770:	53 e4       	ldi	r21, 0x43	; 67
     772:	bc 01       	movw	r22, r24
     774:	cd 01       	movw	r24, r26
     776:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     77a:	dc 01       	movw	r26, r24
     77c:	cb 01       	movw	r24, r22
     77e:	2b ed       	ldi	r18, 0xDB	; 219
     780:	3f e0       	ldi	r19, 0x0F	; 15
     782:	49 e4       	ldi	r20, 0x49	; 73
     784:	50 e4       	ldi	r21, 0x40	; 64
     786:	bc 01       	movw	r22, r24
     788:	cd 01       	movw	r24, r26
     78a:	0e 94 50 05 	call	0xaa0	; 0xaa0 <__divsf3>
     78e:	dc 01       	movw	r26, r24
     790:	cb 01       	movw	r24, r22
     792:	89 83       	std	Y+1, r24	; 0x01
     794:	9a 83       	std	Y+2, r25	; 0x02
     796:	ab 83       	std	Y+3, r26	; 0x03
     798:	bc 83       	std	Y+4, r27	; 0x04
		printf("%d\t%d\t%d\t%d\n", values[0], values[1], values[2], (int)direction);
     79a:	69 81       	ldd	r22, Y+1	; 0x01
     79c:	7a 81       	ldd	r23, Y+2	; 0x02
     79e:	8b 81       	ldd	r24, Y+3	; 0x03
     7a0:	9c 81       	ldd	r25, Y+4	; 0x04
     7a2:	0e 94 c2 05 	call	0xb84	; 0xb84 <__fixsfsi>
     7a6:	dc 01       	movw	r26, r24
     7a8:	cb 01       	movw	r24, r22
     7aa:	bc 01       	movw	r22, r24
     7ac:	4f 89       	ldd	r20, Y+23	; 0x17
     7ae:	58 8d       	ldd	r21, Y+24	; 0x18
     7b0:	2d 89       	ldd	r18, Y+21	; 0x15
     7b2:	3e 89       	ldd	r19, Y+22	; 0x16
     7b4:	8b 89       	ldd	r24, Y+19	; 0x13
     7b6:	9c 89       	ldd	r25, Y+20	; 0x14
     7b8:	e7 2f       	mov	r30, r23
     7ba:	ef 93       	push	r30
     7bc:	6f 93       	push	r22
     7be:	65 2f       	mov	r22, r21
     7c0:	6f 93       	push	r22
     7c2:	4f 93       	push	r20
     7c4:	43 2f       	mov	r20, r19
     7c6:	4f 93       	push	r20
     7c8:	2f 93       	push	r18
     7ca:	29 2f       	mov	r18, r25
     7cc:	2f 93       	push	r18
     7ce:	8f 93       	push	r24
     7d0:	8b e1       	ldi	r24, 0x1B	; 27
     7d2:	91 e0       	ldi	r25, 0x01	; 1
     7d4:	89 2f       	mov	r24, r25
     7d6:	8f 93       	push	r24
     7d8:	8b e1       	ldi	r24, 0x1B	; 27
     7da:	91 e0       	ldi	r25, 0x01	; 1
     7dc:	8f 93       	push	r24
     7de:	0e 94 28 0c 	call	0x1850	; 0x1850 <printf>
     7e2:	8d b7       	in	r24, 0x3d	; 61
     7e4:	9e b7       	in	r25, 0x3e	; 62
     7e6:	0a 96       	adiw	r24, 0x0a	; 10
     7e8:	0f b6       	in	r0, 0x3f	; 63
     7ea:	f8 94       	cli
     7ec:	de bf       	out	0x3e, r29	; 62
     7ee:	0f be       	out	0x3f, r0	; 63
     7f0:	cd bf       	out	0x3d, r28	; 61
     7f2:	80 e0       	ldi	r24, 0x00	; 0
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	a1 e6       	ldi	r26, 0x61	; 97
     7f8:	b4 e4       	ldi	r27, 0x44	; 68
     7fa:	8d 83       	std	Y+5, r24	; 0x05
     7fc:	9e 83       	std	Y+6, r25	; 0x06
     7fe:	af 83       	std	Y+7, r26	; 0x07
     800:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     802:	20 e0       	ldi	r18, 0x00	; 0
     804:	30 e0       	ldi	r19, 0x00	; 0
     806:	4a ef       	ldi	r20, 0xFA	; 250
     808:	54 e4       	ldi	r21, 0x44	; 68
     80a:	6d 81       	ldd	r22, Y+5	; 0x05
     80c:	7e 81       	ldd	r23, Y+6	; 0x06
     80e:	8f 81       	ldd	r24, Y+7	; 0x07
     810:	98 85       	ldd	r25, Y+8	; 0x08
     812:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     816:	dc 01       	movw	r26, r24
     818:	cb 01       	movw	r24, r22
     81a:	89 87       	std	Y+9, r24	; 0x09
     81c:	9a 87       	std	Y+10, r25	; 0x0a
     81e:	ab 87       	std	Y+11, r26	; 0x0b
     820:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     822:	20 e0       	ldi	r18, 0x00	; 0
     824:	30 e0       	ldi	r19, 0x00	; 0
     826:	40 e8       	ldi	r20, 0x80	; 128
     828:	5f e3       	ldi	r21, 0x3F	; 63
     82a:	69 85       	ldd	r22, Y+9	; 0x09
     82c:	7a 85       	ldd	r23, Y+10	; 0x0a
     82e:	8b 85       	ldd	r24, Y+11	; 0x0b
     830:	9c 85       	ldd	r25, Y+12	; 0x0c
     832:	0e 94 4b 05 	call	0xa96	; 0xa96 <__cmpsf2>
     836:	88 23       	and	r24, r24
     838:	2c f4       	brge	.+10     	; 0x844 <main+0x16e>
		__ticks = 1;
     83a:	81 e0       	ldi	r24, 0x01	; 1
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	9e 87       	std	Y+14, r25	; 0x0e
     840:	8d 87       	std	Y+13, r24	; 0x0d
     842:	3f c0       	rjmp	.+126    	; 0x8c2 <main+0x1ec>
	else if (__tmp > 65535)
     844:	20 e0       	ldi	r18, 0x00	; 0
     846:	3f ef       	ldi	r19, 0xFF	; 255
     848:	4f e7       	ldi	r20, 0x7F	; 127
     84a:	57 e4       	ldi	r21, 0x47	; 71
     84c:	69 85       	ldd	r22, Y+9	; 0x09
     84e:	7a 85       	ldd	r23, Y+10	; 0x0a
     850:	8b 85       	ldd	r24, Y+11	; 0x0b
     852:	9c 85       	ldd	r25, Y+12	; 0x0c
     854:	0e 94 d1 06 	call	0xda2	; 0xda2 <__gesf2>
     858:	18 16       	cp	r1, r24
     85a:	4c f5       	brge	.+82     	; 0x8ae <main+0x1d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     85c:	20 e0       	ldi	r18, 0x00	; 0
     85e:	30 e0       	ldi	r19, 0x00	; 0
     860:	40 e2       	ldi	r20, 0x20	; 32
     862:	51 e4       	ldi	r21, 0x41	; 65
     864:	6d 81       	ldd	r22, Y+5	; 0x05
     866:	7e 81       	ldd	r23, Y+6	; 0x06
     868:	8f 81       	ldd	r24, Y+7	; 0x07
     86a:	98 85       	ldd	r25, Y+8	; 0x08
     86c:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     870:	dc 01       	movw	r26, r24
     872:	cb 01       	movw	r24, r22
     874:	bc 01       	movw	r22, r24
     876:	cd 01       	movw	r24, r26
     878:	0e 94 c9 05 	call	0xb92	; 0xb92 <__fixunssfsi>
     87c:	dc 01       	movw	r26, r24
     87e:	cb 01       	movw	r24, r22
     880:	9e 87       	std	Y+14, r25	; 0x0e
     882:	8d 87       	std	Y+13, r24	; 0x0d
     884:	0f c0       	rjmp	.+30     	; 0x8a4 <main+0x1ce>
     886:	88 ec       	ldi	r24, 0xC8	; 200
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	98 8b       	std	Y+16, r25	; 0x10
     88c:	8f 87       	std	Y+15, r24	; 0x0f
     88e:	8f 85       	ldd	r24, Y+15	; 0x0f
     890:	98 89       	ldd	r25, Y+16	; 0x10
     892:	01 97       	sbiw	r24, 0x01	; 1
     894:	f1 f7       	brne	.-4      	; 0x892 <main+0x1bc>
     896:	98 8b       	std	Y+16, r25	; 0x10
     898:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     89a:	8d 85       	ldd	r24, Y+13	; 0x0d
     89c:	9e 85       	ldd	r25, Y+14	; 0x0e
     89e:	01 97       	sbiw	r24, 0x01	; 1
     8a0:	9e 87       	std	Y+14, r25	; 0x0e
     8a2:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8a4:	8d 85       	ldd	r24, Y+13	; 0x0d
     8a6:	9e 85       	ldd	r25, Y+14	; 0x0e
     8a8:	89 2b       	or	r24, r25
     8aa:	69 f7       	brne	.-38     	; 0x886 <main+0x1b0>
     8ac:	14 c0       	rjmp	.+40     	; 0x8d6 <main+0x200>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8ae:	69 85       	ldd	r22, Y+9	; 0x09
     8b0:	7a 85       	ldd	r23, Y+10	; 0x0a
     8b2:	8b 85       	ldd	r24, Y+11	; 0x0b
     8b4:	9c 85       	ldd	r25, Y+12	; 0x0c
     8b6:	0e 94 c9 05 	call	0xb92	; 0xb92 <__fixunssfsi>
     8ba:	dc 01       	movw	r26, r24
     8bc:	cb 01       	movw	r24, r22
     8be:	9e 87       	std	Y+14, r25	; 0x0e
     8c0:	8d 87       	std	Y+13, r24	; 0x0d
     8c2:	8d 85       	ldd	r24, Y+13	; 0x0d
     8c4:	9e 85       	ldd	r25, Y+14	; 0x0e
     8c6:	9a 8b       	std	Y+18, r25	; 0x12
     8c8:	89 8b       	std	Y+17, r24	; 0x11
     8ca:	89 89       	ldd	r24, Y+17	; 0x11
     8cc:	9a 89       	ldd	r25, Y+18	; 0x12
     8ce:	01 97       	sbiw	r24, 0x01	; 1
     8d0:	f1 f7       	brne	.-4      	; 0x8ce <main+0x1f8>
     8d2:	9a 8b       	std	Y+18, r25	; 0x12
     8d4:	89 8b       	std	Y+17, r24	; 0x11
		_delay_ms(900);
    }
     8d6:	25 cf       	rjmp	.-438    	; 0x722 <main+0x4c>

000008d8 <__subsf3>:
     8d8:	50 58       	subi	r21, 0x80	; 128

000008da <__addsf3>:
     8da:	bb 27       	eor	r27, r27
     8dc:	aa 27       	eor	r26, r26
     8de:	0e 94 84 04 	call	0x908	; 0x908 <__addsf3x>
     8e2:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_round>
     8e6:	0e 94 89 06 	call	0xd12	; 0xd12 <__fp_pscA>
     8ea:	38 f0       	brcs	.+14     	; 0x8fa <__addsf3+0x20>
     8ec:	0e 94 90 06 	call	0xd20	; 0xd20 <__fp_pscB>
     8f0:	20 f0       	brcs	.+8      	; 0x8fa <__addsf3+0x20>
     8f2:	39 f4       	brne	.+14     	; 0x902 <__stack+0x3>
     8f4:	9f 3f       	cpi	r25, 0xFF	; 255
     8f6:	19 f4       	brne	.+6      	; 0x8fe <__addsf3+0x24>
     8f8:	26 f4       	brtc	.+8      	; 0x902 <__stack+0x3>
     8fa:	0c 94 5f 06 	jmp	0xcbe	; 0xcbe <__fp_nan>
     8fe:	0e f4       	brtc	.+2      	; 0x902 <__stack+0x3>
     900:	e0 95       	com	r30
     902:	e7 fb       	bst	r30, 7
     904:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__fp_inf>

00000908 <__addsf3x>:
     908:	e9 2f       	mov	r30, r25
     90a:	0e 94 a8 06 	call	0xd50	; 0xd50 <__fp_split3>
     90e:	58 f3       	brcs	.-42     	; 0x8e6 <__addsf3+0xc>
     910:	ba 17       	cp	r27, r26
     912:	62 07       	cpc	r22, r18
     914:	73 07       	cpc	r23, r19
     916:	84 07       	cpc	r24, r20
     918:	95 07       	cpc	r25, r21
     91a:	20 f0       	brcs	.+8      	; 0x924 <__addsf3x+0x1c>
     91c:	79 f4       	brne	.+30     	; 0x93c <__addsf3x+0x34>
     91e:	a6 f5       	brtc	.+104    	; 0x988 <__addsf3x+0x80>
     920:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__fp_zero>
     924:	0e f4       	brtc	.+2      	; 0x928 <__addsf3x+0x20>
     926:	e0 95       	com	r30
     928:	0b 2e       	mov	r0, r27
     92a:	ba 2f       	mov	r27, r26
     92c:	a0 2d       	mov	r26, r0
     92e:	0b 01       	movw	r0, r22
     930:	b9 01       	movw	r22, r18
     932:	90 01       	movw	r18, r0
     934:	0c 01       	movw	r0, r24
     936:	ca 01       	movw	r24, r20
     938:	a0 01       	movw	r20, r0
     93a:	11 24       	eor	r1, r1
     93c:	ff 27       	eor	r31, r31
     93e:	59 1b       	sub	r21, r25
     940:	99 f0       	breq	.+38     	; 0x968 <__addsf3x+0x60>
     942:	59 3f       	cpi	r21, 0xF9	; 249
     944:	50 f4       	brcc	.+20     	; 0x95a <__addsf3x+0x52>
     946:	50 3e       	cpi	r21, 0xE0	; 224
     948:	68 f1       	brcs	.+90     	; 0x9a4 <__addsf3x+0x9c>
     94a:	1a 16       	cp	r1, r26
     94c:	f0 40       	sbci	r31, 0x00	; 0
     94e:	a2 2f       	mov	r26, r18
     950:	23 2f       	mov	r18, r19
     952:	34 2f       	mov	r19, r20
     954:	44 27       	eor	r20, r20
     956:	58 5f       	subi	r21, 0xF8	; 248
     958:	f3 cf       	rjmp	.-26     	; 0x940 <__addsf3x+0x38>
     95a:	46 95       	lsr	r20
     95c:	37 95       	ror	r19
     95e:	27 95       	ror	r18
     960:	a7 95       	ror	r26
     962:	f0 40       	sbci	r31, 0x00	; 0
     964:	53 95       	inc	r21
     966:	c9 f7       	brne	.-14     	; 0x95a <__addsf3x+0x52>
     968:	7e f4       	brtc	.+30     	; 0x988 <__addsf3x+0x80>
     96a:	1f 16       	cp	r1, r31
     96c:	ba 0b       	sbc	r27, r26
     96e:	62 0b       	sbc	r22, r18
     970:	73 0b       	sbc	r23, r19
     972:	84 0b       	sbc	r24, r20
     974:	ba f0       	brmi	.+46     	; 0x9a4 <__addsf3x+0x9c>
     976:	91 50       	subi	r25, 0x01	; 1
     978:	a1 f0       	breq	.+40     	; 0x9a2 <__addsf3x+0x9a>
     97a:	ff 0f       	add	r31, r31
     97c:	bb 1f       	adc	r27, r27
     97e:	66 1f       	adc	r22, r22
     980:	77 1f       	adc	r23, r23
     982:	88 1f       	adc	r24, r24
     984:	c2 f7       	brpl	.-16     	; 0x976 <__addsf3x+0x6e>
     986:	0e c0       	rjmp	.+28     	; 0x9a4 <__addsf3x+0x9c>
     988:	ba 0f       	add	r27, r26
     98a:	62 1f       	adc	r22, r18
     98c:	73 1f       	adc	r23, r19
     98e:	84 1f       	adc	r24, r20
     990:	48 f4       	brcc	.+18     	; 0x9a4 <__addsf3x+0x9c>
     992:	87 95       	ror	r24
     994:	77 95       	ror	r23
     996:	67 95       	ror	r22
     998:	b7 95       	ror	r27
     99a:	f7 95       	ror	r31
     99c:	9e 3f       	cpi	r25, 0xFE	; 254
     99e:	08 f0       	brcs	.+2      	; 0x9a2 <__addsf3x+0x9a>
     9a0:	b0 cf       	rjmp	.-160    	; 0x902 <__stack+0x3>
     9a2:	93 95       	inc	r25
     9a4:	88 0f       	add	r24, r24
     9a6:	08 f0       	brcs	.+2      	; 0x9aa <__addsf3x+0xa2>
     9a8:	99 27       	eor	r25, r25
     9aa:	ee 0f       	add	r30, r30
     9ac:	97 95       	ror	r25
     9ae:	87 95       	ror	r24
     9b0:	08 95       	ret
     9b2:	0e 94 89 06 	call	0xd12	; 0xd12 <__fp_pscA>
     9b6:	60 f0       	brcs	.+24     	; 0x9d0 <__addsf3x+0xc8>
     9b8:	80 e8       	ldi	r24, 0x80	; 128
     9ba:	91 e0       	ldi	r25, 0x01	; 1
     9bc:	09 f4       	brne	.+2      	; 0x9c0 <__addsf3x+0xb8>
     9be:	9e ef       	ldi	r25, 0xFE	; 254
     9c0:	0e 94 90 06 	call	0xd20	; 0xd20 <__fp_pscB>
     9c4:	28 f0       	brcs	.+10     	; 0x9d0 <__addsf3x+0xc8>
     9c6:	40 e8       	ldi	r20, 0x80	; 128
     9c8:	51 e0       	ldi	r21, 0x01	; 1
     9ca:	71 f4       	brne	.+28     	; 0x9e8 <atan2+0x10>
     9cc:	5e ef       	ldi	r21, 0xFE	; 254
     9ce:	0c c0       	rjmp	.+24     	; 0x9e8 <atan2+0x10>
     9d0:	0c 94 5f 06 	jmp	0xcbe	; 0xcbe <__fp_nan>
     9d4:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__fp_zero>

000009d8 <atan2>:
     9d8:	e9 2f       	mov	r30, r25
     9da:	e0 78       	andi	r30, 0x80	; 128
     9dc:	0e 94 a8 06 	call	0xd50	; 0xd50 <__fp_split3>
     9e0:	40 f3       	brcs	.-48     	; 0x9b2 <__addsf3x+0xaa>
     9e2:	09 2e       	mov	r0, r25
     9e4:	05 2a       	or	r0, r21
     9e6:	b1 f3       	breq	.-20     	; 0x9d4 <__addsf3x+0xcc>
     9e8:	26 17       	cp	r18, r22
     9ea:	37 07       	cpc	r19, r23
     9ec:	48 07       	cpc	r20, r24
     9ee:	59 07       	cpc	r21, r25
     9f0:	38 f0       	brcs	.+14     	; 0xa00 <atan2+0x28>
     9f2:	0e 2e       	mov	r0, r30
     9f4:	07 f8       	bld	r0, 7
     9f6:	e0 25       	eor	r30, r0
     9f8:	69 f0       	breq	.+26     	; 0xa14 <atan2+0x3c>
     9fa:	e0 25       	eor	r30, r0
     9fc:	e0 64       	ori	r30, 0x40	; 64
     9fe:	0a c0       	rjmp	.+20     	; 0xa14 <atan2+0x3c>
     a00:	ef 63       	ori	r30, 0x3F	; 63
     a02:	07 f8       	bld	r0, 7
     a04:	00 94       	com	r0
     a06:	07 fa       	bst	r0, 7
     a08:	db 01       	movw	r26, r22
     a0a:	b9 01       	movw	r22, r18
     a0c:	9d 01       	movw	r18, r26
     a0e:	dc 01       	movw	r26, r24
     a10:	ca 01       	movw	r24, r20
     a12:	ad 01       	movw	r20, r26
     a14:	ef 93       	push	r30
     a16:	0e 94 67 05 	call	0xace	; 0xace <__divsf3_pse>
     a1a:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fp_round>
     a1e:	0e 94 1c 05 	call	0xa38	; 0xa38 <atan>
     a22:	5f 91       	pop	r21
     a24:	55 23       	and	r21, r21
     a26:	39 f0       	breq	.+14     	; 0xa36 <atan2+0x5e>
     a28:	2b ed       	ldi	r18, 0xDB	; 219
     a2a:	3f e0       	ldi	r19, 0x0F	; 15
     a2c:	49 e4       	ldi	r20, 0x49	; 73
     a2e:	50 fd       	sbrc	r21, 0
     a30:	49 ec       	ldi	r20, 0xC9	; 201
     a32:	0c 94 6d 04 	jmp	0x8da	; 0x8da <__addsf3>
     a36:	08 95       	ret

00000a38 <atan>:
     a38:	df 93       	push	r29
     a3a:	dd 27       	eor	r29, r29
     a3c:	b9 2f       	mov	r27, r25
     a3e:	bf 77       	andi	r27, 0x7F	; 127
     a40:	40 e8       	ldi	r20, 0x80	; 128
     a42:	5f e3       	ldi	r21, 0x3F	; 63
     a44:	16 16       	cp	r1, r22
     a46:	17 06       	cpc	r1, r23
     a48:	48 07       	cpc	r20, r24
     a4a:	5b 07       	cpc	r21, r27
     a4c:	18 f4       	brcc	.+6      	; 0xa54 <atan+0x1c>
     a4e:	d9 2f       	mov	r29, r25
     a50:	0e 94 d6 06 	call	0xdac	; 0xdac <inverse>
     a54:	9f 93       	push	r25
     a56:	8f 93       	push	r24
     a58:	7f 93       	push	r23
     a5a:	6f 93       	push	r22
     a5c:	0e 94 4b 07 	call	0xe96	; 0xe96 <square>
     a60:	e8 e6       	ldi	r30, 0x68	; 104
     a62:	f0 e0       	ldi	r31, 0x00	; 0
     a64:	0e 94 62 06 	call	0xcc4	; 0xcc4 <__fp_powser>
     a68:	0e 94 97 06 	call	0xd2e	; 0xd2e <__fp_round>
     a6c:	2f 91       	pop	r18
     a6e:	3f 91       	pop	r19
     a70:	4f 91       	pop	r20
     a72:	5f 91       	pop	r21
     a74:	0e 94 f1 06 	call	0xde2	; 0xde2 <__mulsf3x>
     a78:	dd 23       	and	r29, r29
     a7a:	51 f0       	breq	.+20     	; 0xa90 <atan+0x58>
     a7c:	90 58       	subi	r25, 0x80	; 128
     a7e:	a2 ea       	ldi	r26, 0xA2	; 162
     a80:	2a ed       	ldi	r18, 0xDA	; 218
     a82:	3f e0       	ldi	r19, 0x0F	; 15
     a84:	49 ec       	ldi	r20, 0xC9	; 201
     a86:	5f e3       	ldi	r21, 0x3F	; 63
     a88:	d0 78       	andi	r29, 0x80	; 128
     a8a:	5d 27       	eor	r21, r29
     a8c:	0e 94 84 04 	call	0x908	; 0x908 <__addsf3x>
     a90:	df 91       	pop	r29
     a92:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_round>

00000a96 <__cmpsf2>:
     a96:	0e 94 35 06 	call	0xc6a	; 0xc6a <__fp_cmp>
     a9a:	08 f4       	brcc	.+2      	; 0xa9e <__cmpsf2+0x8>
     a9c:	81 e0       	ldi	r24, 0x01	; 1
     a9e:	08 95       	ret

00000aa0 <__divsf3>:
     aa0:	0e 94 64 05 	call	0xac8	; 0xac8 <__divsf3x>
     aa4:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_round>
     aa8:	0e 94 90 06 	call	0xd20	; 0xd20 <__fp_pscB>
     aac:	58 f0       	brcs	.+22     	; 0xac4 <__divsf3+0x24>
     aae:	0e 94 89 06 	call	0xd12	; 0xd12 <__fp_pscA>
     ab2:	40 f0       	brcs	.+16     	; 0xac4 <__divsf3+0x24>
     ab4:	29 f4       	brne	.+10     	; 0xac0 <__divsf3+0x20>
     ab6:	5f 3f       	cpi	r21, 0xFF	; 255
     ab8:	29 f0       	breq	.+10     	; 0xac4 <__divsf3+0x24>
     aba:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__fp_inf>
     abe:	51 11       	cpse	r21, r1
     ac0:	0c 94 cb 06 	jmp	0xd96	; 0xd96 <__fp_szero>
     ac4:	0c 94 5f 06 	jmp	0xcbe	; 0xcbe <__fp_nan>

00000ac8 <__divsf3x>:
     ac8:	0e 94 a8 06 	call	0xd50	; 0xd50 <__fp_split3>
     acc:	68 f3       	brcs	.-38     	; 0xaa8 <__divsf3+0x8>

00000ace <__divsf3_pse>:
     ace:	99 23       	and	r25, r25
     ad0:	b1 f3       	breq	.-20     	; 0xabe <__divsf3+0x1e>
     ad2:	55 23       	and	r21, r21
     ad4:	91 f3       	breq	.-28     	; 0xaba <__divsf3+0x1a>
     ad6:	95 1b       	sub	r25, r21
     ad8:	55 0b       	sbc	r21, r21
     ada:	bb 27       	eor	r27, r27
     adc:	aa 27       	eor	r26, r26
     ade:	62 17       	cp	r22, r18
     ae0:	73 07       	cpc	r23, r19
     ae2:	84 07       	cpc	r24, r20
     ae4:	38 f0       	brcs	.+14     	; 0xaf4 <__divsf3_pse+0x26>
     ae6:	9f 5f       	subi	r25, 0xFF	; 255
     ae8:	5f 4f       	sbci	r21, 0xFF	; 255
     aea:	22 0f       	add	r18, r18
     aec:	33 1f       	adc	r19, r19
     aee:	44 1f       	adc	r20, r20
     af0:	aa 1f       	adc	r26, r26
     af2:	a9 f3       	breq	.-22     	; 0xade <__divsf3_pse+0x10>
     af4:	35 d0       	rcall	.+106    	; 0xb60 <__divsf3_pse+0x92>
     af6:	0e 2e       	mov	r0, r30
     af8:	3a f0       	brmi	.+14     	; 0xb08 <__divsf3_pse+0x3a>
     afa:	e0 e8       	ldi	r30, 0x80	; 128
     afc:	32 d0       	rcall	.+100    	; 0xb62 <__divsf3_pse+0x94>
     afe:	91 50       	subi	r25, 0x01	; 1
     b00:	50 40       	sbci	r21, 0x00	; 0
     b02:	e6 95       	lsr	r30
     b04:	00 1c       	adc	r0, r0
     b06:	ca f7       	brpl	.-14     	; 0xafa <__divsf3_pse+0x2c>
     b08:	2b d0       	rcall	.+86     	; 0xb60 <__divsf3_pse+0x92>
     b0a:	fe 2f       	mov	r31, r30
     b0c:	29 d0       	rcall	.+82     	; 0xb60 <__divsf3_pse+0x92>
     b0e:	66 0f       	add	r22, r22
     b10:	77 1f       	adc	r23, r23
     b12:	88 1f       	adc	r24, r24
     b14:	bb 1f       	adc	r27, r27
     b16:	26 17       	cp	r18, r22
     b18:	37 07       	cpc	r19, r23
     b1a:	48 07       	cpc	r20, r24
     b1c:	ab 07       	cpc	r26, r27
     b1e:	b0 e8       	ldi	r27, 0x80	; 128
     b20:	09 f0       	breq	.+2      	; 0xb24 <__divsf3_pse+0x56>
     b22:	bb 0b       	sbc	r27, r27
     b24:	80 2d       	mov	r24, r0
     b26:	bf 01       	movw	r22, r30
     b28:	ff 27       	eor	r31, r31
     b2a:	93 58       	subi	r25, 0x83	; 131
     b2c:	5f 4f       	sbci	r21, 0xFF	; 255
     b2e:	3a f0       	brmi	.+14     	; 0xb3e <__divsf3_pse+0x70>
     b30:	9e 3f       	cpi	r25, 0xFE	; 254
     b32:	51 05       	cpc	r21, r1
     b34:	78 f0       	brcs	.+30     	; 0xb54 <__divsf3_pse+0x86>
     b36:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__fp_inf>
     b3a:	0c 94 cb 06 	jmp	0xd96	; 0xd96 <__fp_szero>
     b3e:	5f 3f       	cpi	r21, 0xFF	; 255
     b40:	e4 f3       	brlt	.-8      	; 0xb3a <__divsf3_pse+0x6c>
     b42:	98 3e       	cpi	r25, 0xE8	; 232
     b44:	d4 f3       	brlt	.-12     	; 0xb3a <__divsf3_pse+0x6c>
     b46:	86 95       	lsr	r24
     b48:	77 95       	ror	r23
     b4a:	67 95       	ror	r22
     b4c:	b7 95       	ror	r27
     b4e:	f7 95       	ror	r31
     b50:	9f 5f       	subi	r25, 0xFF	; 255
     b52:	c9 f7       	brne	.-14     	; 0xb46 <__divsf3_pse+0x78>
     b54:	88 0f       	add	r24, r24
     b56:	91 1d       	adc	r25, r1
     b58:	96 95       	lsr	r25
     b5a:	87 95       	ror	r24
     b5c:	97 f9       	bld	r25, 7
     b5e:	08 95       	ret
     b60:	e1 e0       	ldi	r30, 0x01	; 1
     b62:	66 0f       	add	r22, r22
     b64:	77 1f       	adc	r23, r23
     b66:	88 1f       	adc	r24, r24
     b68:	bb 1f       	adc	r27, r27
     b6a:	62 17       	cp	r22, r18
     b6c:	73 07       	cpc	r23, r19
     b6e:	84 07       	cpc	r24, r20
     b70:	ba 07       	cpc	r27, r26
     b72:	20 f0       	brcs	.+8      	; 0xb7c <__divsf3_pse+0xae>
     b74:	62 1b       	sub	r22, r18
     b76:	73 0b       	sbc	r23, r19
     b78:	84 0b       	sbc	r24, r20
     b7a:	ba 0b       	sbc	r27, r26
     b7c:	ee 1f       	adc	r30, r30
     b7e:	88 f7       	brcc	.-30     	; 0xb62 <__divsf3_pse+0x94>
     b80:	e0 95       	com	r30
     b82:	08 95       	ret

00000b84 <__fixsfsi>:
     b84:	0e 94 c9 05 	call	0xb92	; 0xb92 <__fixunssfsi>
     b88:	68 94       	set
     b8a:	b1 11       	cpse	r27, r1
     b8c:	0c 94 cb 06 	jmp	0xd96	; 0xd96 <__fp_szero>
     b90:	08 95       	ret

00000b92 <__fixunssfsi>:
     b92:	0e 94 b0 06 	call	0xd60	; 0xd60 <__fp_splitA>
     b96:	88 f0       	brcs	.+34     	; 0xbba <__fixunssfsi+0x28>
     b98:	9f 57       	subi	r25, 0x7F	; 127
     b9a:	98 f0       	brcs	.+38     	; 0xbc2 <__fixunssfsi+0x30>
     b9c:	b9 2f       	mov	r27, r25
     b9e:	99 27       	eor	r25, r25
     ba0:	b7 51       	subi	r27, 0x17	; 23
     ba2:	b0 f0       	brcs	.+44     	; 0xbd0 <__fixunssfsi+0x3e>
     ba4:	e1 f0       	breq	.+56     	; 0xbde <__fixunssfsi+0x4c>
     ba6:	66 0f       	add	r22, r22
     ba8:	77 1f       	adc	r23, r23
     baa:	88 1f       	adc	r24, r24
     bac:	99 1f       	adc	r25, r25
     bae:	1a f0       	brmi	.+6      	; 0xbb6 <__fixunssfsi+0x24>
     bb0:	ba 95       	dec	r27
     bb2:	c9 f7       	brne	.-14     	; 0xba6 <__fixunssfsi+0x14>
     bb4:	14 c0       	rjmp	.+40     	; 0xbde <__fixunssfsi+0x4c>
     bb6:	b1 30       	cpi	r27, 0x01	; 1
     bb8:	91 f0       	breq	.+36     	; 0xbde <__fixunssfsi+0x4c>
     bba:	0e 94 ca 06 	call	0xd94	; 0xd94 <__fp_zero>
     bbe:	b1 e0       	ldi	r27, 0x01	; 1
     bc0:	08 95       	ret
     bc2:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__fp_zero>
     bc6:	67 2f       	mov	r22, r23
     bc8:	78 2f       	mov	r23, r24
     bca:	88 27       	eor	r24, r24
     bcc:	b8 5f       	subi	r27, 0xF8	; 248
     bce:	39 f0       	breq	.+14     	; 0xbde <__fixunssfsi+0x4c>
     bd0:	b9 3f       	cpi	r27, 0xF9	; 249
     bd2:	cc f3       	brlt	.-14     	; 0xbc6 <__fixunssfsi+0x34>
     bd4:	86 95       	lsr	r24
     bd6:	77 95       	ror	r23
     bd8:	67 95       	ror	r22
     bda:	b3 95       	inc	r27
     bdc:	d9 f7       	brne	.-10     	; 0xbd4 <__fixunssfsi+0x42>
     bde:	3e f4       	brtc	.+14     	; 0xbee <__fixunssfsi+0x5c>
     be0:	90 95       	com	r25
     be2:	80 95       	com	r24
     be4:	70 95       	com	r23
     be6:	61 95       	neg	r22
     be8:	7f 4f       	sbci	r23, 0xFF	; 255
     bea:	8f 4f       	sbci	r24, 0xFF	; 255
     bec:	9f 4f       	sbci	r25, 0xFF	; 255
     bee:	08 95       	ret

00000bf0 <__floatunsisf>:
     bf0:	e8 94       	clt
     bf2:	09 c0       	rjmp	.+18     	; 0xc06 <__floatsisf+0x12>

00000bf4 <__floatsisf>:
     bf4:	97 fb       	bst	r25, 7
     bf6:	3e f4       	brtc	.+14     	; 0xc06 <__floatsisf+0x12>
     bf8:	90 95       	com	r25
     bfa:	80 95       	com	r24
     bfc:	70 95       	com	r23
     bfe:	61 95       	neg	r22
     c00:	7f 4f       	sbci	r23, 0xFF	; 255
     c02:	8f 4f       	sbci	r24, 0xFF	; 255
     c04:	9f 4f       	sbci	r25, 0xFF	; 255
     c06:	99 23       	and	r25, r25
     c08:	a9 f0       	breq	.+42     	; 0xc34 <__floatsisf+0x40>
     c0a:	f9 2f       	mov	r31, r25
     c0c:	96 e9       	ldi	r25, 0x96	; 150
     c0e:	bb 27       	eor	r27, r27
     c10:	93 95       	inc	r25
     c12:	f6 95       	lsr	r31
     c14:	87 95       	ror	r24
     c16:	77 95       	ror	r23
     c18:	67 95       	ror	r22
     c1a:	b7 95       	ror	r27
     c1c:	f1 11       	cpse	r31, r1
     c1e:	f8 cf       	rjmp	.-16     	; 0xc10 <__floatsisf+0x1c>
     c20:	fa f4       	brpl	.+62     	; 0xc60 <__floatsisf+0x6c>
     c22:	bb 0f       	add	r27, r27
     c24:	11 f4       	brne	.+4      	; 0xc2a <__floatsisf+0x36>
     c26:	60 ff       	sbrs	r22, 0
     c28:	1b c0       	rjmp	.+54     	; 0xc60 <__floatsisf+0x6c>
     c2a:	6f 5f       	subi	r22, 0xFF	; 255
     c2c:	7f 4f       	sbci	r23, 0xFF	; 255
     c2e:	8f 4f       	sbci	r24, 0xFF	; 255
     c30:	9f 4f       	sbci	r25, 0xFF	; 255
     c32:	16 c0       	rjmp	.+44     	; 0xc60 <__floatsisf+0x6c>
     c34:	88 23       	and	r24, r24
     c36:	11 f0       	breq	.+4      	; 0xc3c <__floatsisf+0x48>
     c38:	96 e9       	ldi	r25, 0x96	; 150
     c3a:	11 c0       	rjmp	.+34     	; 0xc5e <__floatsisf+0x6a>
     c3c:	77 23       	and	r23, r23
     c3e:	21 f0       	breq	.+8      	; 0xc48 <__floatsisf+0x54>
     c40:	9e e8       	ldi	r25, 0x8E	; 142
     c42:	87 2f       	mov	r24, r23
     c44:	76 2f       	mov	r23, r22
     c46:	05 c0       	rjmp	.+10     	; 0xc52 <__floatsisf+0x5e>
     c48:	66 23       	and	r22, r22
     c4a:	71 f0       	breq	.+28     	; 0xc68 <__floatsisf+0x74>
     c4c:	96 e8       	ldi	r25, 0x86	; 134
     c4e:	86 2f       	mov	r24, r22
     c50:	70 e0       	ldi	r23, 0x00	; 0
     c52:	60 e0       	ldi	r22, 0x00	; 0
     c54:	2a f0       	brmi	.+10     	; 0xc60 <__floatsisf+0x6c>
     c56:	9a 95       	dec	r25
     c58:	66 0f       	add	r22, r22
     c5a:	77 1f       	adc	r23, r23
     c5c:	88 1f       	adc	r24, r24
     c5e:	da f7       	brpl	.-10     	; 0xc56 <__floatsisf+0x62>
     c60:	88 0f       	add	r24, r24
     c62:	96 95       	lsr	r25
     c64:	87 95       	ror	r24
     c66:	97 f9       	bld	r25, 7
     c68:	08 95       	ret

00000c6a <__fp_cmp>:
     c6a:	99 0f       	add	r25, r25
     c6c:	00 08       	sbc	r0, r0
     c6e:	55 0f       	add	r21, r21
     c70:	aa 0b       	sbc	r26, r26
     c72:	e0 e8       	ldi	r30, 0x80	; 128
     c74:	fe ef       	ldi	r31, 0xFE	; 254
     c76:	16 16       	cp	r1, r22
     c78:	17 06       	cpc	r1, r23
     c7a:	e8 07       	cpc	r30, r24
     c7c:	f9 07       	cpc	r31, r25
     c7e:	c0 f0       	brcs	.+48     	; 0xcb0 <__fp_cmp+0x46>
     c80:	12 16       	cp	r1, r18
     c82:	13 06       	cpc	r1, r19
     c84:	e4 07       	cpc	r30, r20
     c86:	f5 07       	cpc	r31, r21
     c88:	98 f0       	brcs	.+38     	; 0xcb0 <__fp_cmp+0x46>
     c8a:	62 1b       	sub	r22, r18
     c8c:	73 0b       	sbc	r23, r19
     c8e:	84 0b       	sbc	r24, r20
     c90:	95 0b       	sbc	r25, r21
     c92:	39 f4       	brne	.+14     	; 0xca2 <__fp_cmp+0x38>
     c94:	0a 26       	eor	r0, r26
     c96:	61 f0       	breq	.+24     	; 0xcb0 <__fp_cmp+0x46>
     c98:	23 2b       	or	r18, r19
     c9a:	24 2b       	or	r18, r20
     c9c:	25 2b       	or	r18, r21
     c9e:	21 f4       	brne	.+8      	; 0xca8 <__fp_cmp+0x3e>
     ca0:	08 95       	ret
     ca2:	0a 26       	eor	r0, r26
     ca4:	09 f4       	brne	.+2      	; 0xca8 <__fp_cmp+0x3e>
     ca6:	a1 40       	sbci	r26, 0x01	; 1
     ca8:	a6 95       	lsr	r26
     caa:	8f ef       	ldi	r24, 0xFF	; 255
     cac:	81 1d       	adc	r24, r1
     cae:	81 1d       	adc	r24, r1
     cb0:	08 95       	ret

00000cb2 <__fp_inf>:
     cb2:	97 f9       	bld	r25, 7
     cb4:	9f 67       	ori	r25, 0x7F	; 127
     cb6:	80 e8       	ldi	r24, 0x80	; 128
     cb8:	70 e0       	ldi	r23, 0x00	; 0
     cba:	60 e0       	ldi	r22, 0x00	; 0
     cbc:	08 95       	ret

00000cbe <__fp_nan>:
     cbe:	9f ef       	ldi	r25, 0xFF	; 255
     cc0:	80 ec       	ldi	r24, 0xC0	; 192
     cc2:	08 95       	ret

00000cc4 <__fp_powser>:
     cc4:	df 93       	push	r29
     cc6:	cf 93       	push	r28
     cc8:	1f 93       	push	r17
     cca:	0f 93       	push	r16
     ccc:	ff 92       	push	r15
     cce:	ef 92       	push	r14
     cd0:	df 92       	push	r13
     cd2:	7b 01       	movw	r14, r22
     cd4:	8c 01       	movw	r16, r24
     cd6:	68 94       	set
     cd8:	06 c0       	rjmp	.+12     	; 0xce6 <__fp_powser+0x22>
     cda:	da 2e       	mov	r13, r26
     cdc:	ef 01       	movw	r28, r30
     cde:	0e 94 f1 06 	call	0xde2	; 0xde2 <__mulsf3x>
     ce2:	fe 01       	movw	r30, r28
     ce4:	e8 94       	clt
     ce6:	a5 91       	lpm	r26, Z+
     ce8:	25 91       	lpm	r18, Z+
     cea:	35 91       	lpm	r19, Z+
     cec:	45 91       	lpm	r20, Z+
     cee:	55 91       	lpm	r21, Z+
     cf0:	a6 f3       	brts	.-24     	; 0xcda <__fp_powser+0x16>
     cf2:	ef 01       	movw	r28, r30
     cf4:	0e 94 84 04 	call	0x908	; 0x908 <__addsf3x>
     cf8:	fe 01       	movw	r30, r28
     cfa:	97 01       	movw	r18, r14
     cfc:	a8 01       	movw	r20, r16
     cfe:	da 94       	dec	r13
     d00:	69 f7       	brne	.-38     	; 0xcdc <__fp_powser+0x18>
     d02:	df 90       	pop	r13
     d04:	ef 90       	pop	r14
     d06:	ff 90       	pop	r15
     d08:	0f 91       	pop	r16
     d0a:	1f 91       	pop	r17
     d0c:	cf 91       	pop	r28
     d0e:	df 91       	pop	r29
     d10:	08 95       	ret

00000d12 <__fp_pscA>:
     d12:	00 24       	eor	r0, r0
     d14:	0a 94       	dec	r0
     d16:	16 16       	cp	r1, r22
     d18:	17 06       	cpc	r1, r23
     d1a:	18 06       	cpc	r1, r24
     d1c:	09 06       	cpc	r0, r25
     d1e:	08 95       	ret

00000d20 <__fp_pscB>:
     d20:	00 24       	eor	r0, r0
     d22:	0a 94       	dec	r0
     d24:	12 16       	cp	r1, r18
     d26:	13 06       	cpc	r1, r19
     d28:	14 06       	cpc	r1, r20
     d2a:	05 06       	cpc	r0, r21
     d2c:	08 95       	ret

00000d2e <__fp_round>:
     d2e:	09 2e       	mov	r0, r25
     d30:	03 94       	inc	r0
     d32:	00 0c       	add	r0, r0
     d34:	11 f4       	brne	.+4      	; 0xd3a <__fp_round+0xc>
     d36:	88 23       	and	r24, r24
     d38:	52 f0       	brmi	.+20     	; 0xd4e <__fp_round+0x20>
     d3a:	bb 0f       	add	r27, r27
     d3c:	40 f4       	brcc	.+16     	; 0xd4e <__fp_round+0x20>
     d3e:	bf 2b       	or	r27, r31
     d40:	11 f4       	brne	.+4      	; 0xd46 <__fp_round+0x18>
     d42:	60 ff       	sbrs	r22, 0
     d44:	04 c0       	rjmp	.+8      	; 0xd4e <__fp_round+0x20>
     d46:	6f 5f       	subi	r22, 0xFF	; 255
     d48:	7f 4f       	sbci	r23, 0xFF	; 255
     d4a:	8f 4f       	sbci	r24, 0xFF	; 255
     d4c:	9f 4f       	sbci	r25, 0xFF	; 255
     d4e:	08 95       	ret

00000d50 <__fp_split3>:
     d50:	57 fd       	sbrc	r21, 7
     d52:	90 58       	subi	r25, 0x80	; 128
     d54:	44 0f       	add	r20, r20
     d56:	55 1f       	adc	r21, r21
     d58:	59 f0       	breq	.+22     	; 0xd70 <__fp_splitA+0x10>
     d5a:	5f 3f       	cpi	r21, 0xFF	; 255
     d5c:	71 f0       	breq	.+28     	; 0xd7a <__fp_splitA+0x1a>
     d5e:	47 95       	ror	r20

00000d60 <__fp_splitA>:
     d60:	88 0f       	add	r24, r24
     d62:	97 fb       	bst	r25, 7
     d64:	99 1f       	adc	r25, r25
     d66:	61 f0       	breq	.+24     	; 0xd80 <__fp_splitA+0x20>
     d68:	9f 3f       	cpi	r25, 0xFF	; 255
     d6a:	79 f0       	breq	.+30     	; 0xd8a <__fp_splitA+0x2a>
     d6c:	87 95       	ror	r24
     d6e:	08 95       	ret
     d70:	12 16       	cp	r1, r18
     d72:	13 06       	cpc	r1, r19
     d74:	14 06       	cpc	r1, r20
     d76:	55 1f       	adc	r21, r21
     d78:	f2 cf       	rjmp	.-28     	; 0xd5e <__fp_split3+0xe>
     d7a:	46 95       	lsr	r20
     d7c:	f1 df       	rcall	.-30     	; 0xd60 <__fp_splitA>
     d7e:	08 c0       	rjmp	.+16     	; 0xd90 <__fp_splitA+0x30>
     d80:	16 16       	cp	r1, r22
     d82:	17 06       	cpc	r1, r23
     d84:	18 06       	cpc	r1, r24
     d86:	99 1f       	adc	r25, r25
     d88:	f1 cf       	rjmp	.-30     	; 0xd6c <__fp_splitA+0xc>
     d8a:	86 95       	lsr	r24
     d8c:	71 05       	cpc	r23, r1
     d8e:	61 05       	cpc	r22, r1
     d90:	08 94       	sec
     d92:	08 95       	ret

00000d94 <__fp_zero>:
     d94:	e8 94       	clt

00000d96 <__fp_szero>:
     d96:	bb 27       	eor	r27, r27
     d98:	66 27       	eor	r22, r22
     d9a:	77 27       	eor	r23, r23
     d9c:	cb 01       	movw	r24, r22
     d9e:	97 f9       	bld	r25, 7
     da0:	08 95       	ret

00000da2 <__gesf2>:
     da2:	0e 94 35 06 	call	0xc6a	; 0xc6a <__fp_cmp>
     da6:	08 f4       	brcc	.+2      	; 0xdaa <__gesf2+0x8>
     da8:	8f ef       	ldi	r24, 0xFF	; 255
     daa:	08 95       	ret

00000dac <inverse>:
     dac:	9b 01       	movw	r18, r22
     dae:	ac 01       	movw	r20, r24
     db0:	60 e0       	ldi	r22, 0x00	; 0
     db2:	70 e0       	ldi	r23, 0x00	; 0
     db4:	80 e8       	ldi	r24, 0x80	; 128
     db6:	9f e3       	ldi	r25, 0x3F	; 63
     db8:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__divsf3>

00000dbc <__mulsf3>:
     dbc:	0e 94 f1 06 	call	0xde2	; 0xde2 <__mulsf3x>
     dc0:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_round>
     dc4:	0e 94 89 06 	call	0xd12	; 0xd12 <__fp_pscA>
     dc8:	38 f0       	brcs	.+14     	; 0xdd8 <__mulsf3+0x1c>
     dca:	0e 94 90 06 	call	0xd20	; 0xd20 <__fp_pscB>
     dce:	20 f0       	brcs	.+8      	; 0xdd8 <__mulsf3+0x1c>
     dd0:	95 23       	and	r25, r21
     dd2:	11 f0       	breq	.+4      	; 0xdd8 <__mulsf3+0x1c>
     dd4:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__fp_inf>
     dd8:	0c 94 5f 06 	jmp	0xcbe	; 0xcbe <__fp_nan>
     ddc:	11 24       	eor	r1, r1
     dde:	0c 94 cb 06 	jmp	0xd96	; 0xd96 <__fp_szero>

00000de2 <__mulsf3x>:
     de2:	0e 94 a8 06 	call	0xd50	; 0xd50 <__fp_split3>
     de6:	70 f3       	brcs	.-36     	; 0xdc4 <__mulsf3+0x8>

00000de8 <__mulsf3_pse>:
     de8:	95 9f       	mul	r25, r21
     dea:	c1 f3       	breq	.-16     	; 0xddc <__mulsf3+0x20>
     dec:	95 0f       	add	r25, r21
     dee:	50 e0       	ldi	r21, 0x00	; 0
     df0:	55 1f       	adc	r21, r21
     df2:	62 9f       	mul	r22, r18
     df4:	f0 01       	movw	r30, r0
     df6:	72 9f       	mul	r23, r18
     df8:	bb 27       	eor	r27, r27
     dfa:	f0 0d       	add	r31, r0
     dfc:	b1 1d       	adc	r27, r1
     dfe:	63 9f       	mul	r22, r19
     e00:	aa 27       	eor	r26, r26
     e02:	f0 0d       	add	r31, r0
     e04:	b1 1d       	adc	r27, r1
     e06:	aa 1f       	adc	r26, r26
     e08:	64 9f       	mul	r22, r20
     e0a:	66 27       	eor	r22, r22
     e0c:	b0 0d       	add	r27, r0
     e0e:	a1 1d       	adc	r26, r1
     e10:	66 1f       	adc	r22, r22
     e12:	82 9f       	mul	r24, r18
     e14:	22 27       	eor	r18, r18
     e16:	b0 0d       	add	r27, r0
     e18:	a1 1d       	adc	r26, r1
     e1a:	62 1f       	adc	r22, r18
     e1c:	73 9f       	mul	r23, r19
     e1e:	b0 0d       	add	r27, r0
     e20:	a1 1d       	adc	r26, r1
     e22:	62 1f       	adc	r22, r18
     e24:	83 9f       	mul	r24, r19
     e26:	a0 0d       	add	r26, r0
     e28:	61 1d       	adc	r22, r1
     e2a:	22 1f       	adc	r18, r18
     e2c:	74 9f       	mul	r23, r20
     e2e:	33 27       	eor	r19, r19
     e30:	a0 0d       	add	r26, r0
     e32:	61 1d       	adc	r22, r1
     e34:	23 1f       	adc	r18, r19
     e36:	84 9f       	mul	r24, r20
     e38:	60 0d       	add	r22, r0
     e3a:	21 1d       	adc	r18, r1
     e3c:	82 2f       	mov	r24, r18
     e3e:	76 2f       	mov	r23, r22
     e40:	6a 2f       	mov	r22, r26
     e42:	11 24       	eor	r1, r1
     e44:	9f 57       	subi	r25, 0x7F	; 127
     e46:	50 40       	sbci	r21, 0x00	; 0
     e48:	9a f0       	brmi	.+38     	; 0xe70 <__mulsf3_pse+0x88>
     e4a:	f1 f0       	breq	.+60     	; 0xe88 <__mulsf3_pse+0xa0>
     e4c:	88 23       	and	r24, r24
     e4e:	4a f0       	brmi	.+18     	; 0xe62 <__mulsf3_pse+0x7a>
     e50:	ee 0f       	add	r30, r30
     e52:	ff 1f       	adc	r31, r31
     e54:	bb 1f       	adc	r27, r27
     e56:	66 1f       	adc	r22, r22
     e58:	77 1f       	adc	r23, r23
     e5a:	88 1f       	adc	r24, r24
     e5c:	91 50       	subi	r25, 0x01	; 1
     e5e:	50 40       	sbci	r21, 0x00	; 0
     e60:	a9 f7       	brne	.-22     	; 0xe4c <__mulsf3_pse+0x64>
     e62:	9e 3f       	cpi	r25, 0xFE	; 254
     e64:	51 05       	cpc	r21, r1
     e66:	80 f0       	brcs	.+32     	; 0xe88 <__mulsf3_pse+0xa0>
     e68:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__fp_inf>
     e6c:	0c 94 cb 06 	jmp	0xd96	; 0xd96 <__fp_szero>
     e70:	5f 3f       	cpi	r21, 0xFF	; 255
     e72:	e4 f3       	brlt	.-8      	; 0xe6c <__mulsf3_pse+0x84>
     e74:	98 3e       	cpi	r25, 0xE8	; 232
     e76:	d4 f3       	brlt	.-12     	; 0xe6c <__mulsf3_pse+0x84>
     e78:	86 95       	lsr	r24
     e7a:	77 95       	ror	r23
     e7c:	67 95       	ror	r22
     e7e:	b7 95       	ror	r27
     e80:	f7 95       	ror	r31
     e82:	e7 95       	ror	r30
     e84:	9f 5f       	subi	r25, 0xFF	; 255
     e86:	c1 f7       	brne	.-16     	; 0xe78 <__mulsf3_pse+0x90>
     e88:	fe 2b       	or	r31, r30
     e8a:	88 0f       	add	r24, r24
     e8c:	91 1d       	adc	r25, r1
     e8e:	96 95       	lsr	r25
     e90:	87 95       	ror	r24
     e92:	97 f9       	bld	r25, 7
     e94:	08 95       	ret

00000e96 <square>:
     e96:	9b 01       	movw	r18, r22
     e98:	ac 01       	movw	r20, r24
     e9a:	0c 94 de 06 	jmp	0xdbc	; 0xdbc <__mulsf3>

00000e9e <vfprintf>:
     e9e:	a3 e1       	ldi	r26, 0x13	; 19
     ea0:	b0 e0       	ldi	r27, 0x00	; 0
     ea2:	e5 e5       	ldi	r30, 0x55	; 85
     ea4:	f7 e0       	ldi	r31, 0x07	; 7
     ea6:	0c 94 cb 0a 	jmp	0x1596	; 0x1596 <__prologue_saves__>
     eaa:	6c 01       	movw	r12, r24
     eac:	4b 01       	movw	r8, r22
     eae:	2a 01       	movw	r4, r20
     eb0:	fc 01       	movw	r30, r24
     eb2:	17 82       	std	Z+7, r1	; 0x07
     eb4:	16 82       	std	Z+6, r1	; 0x06
     eb6:	83 81       	ldd	r24, Z+3	; 0x03
     eb8:	81 ff       	sbrs	r24, 1
     eba:	43 c3       	rjmp	.+1670   	; 0x1542 <vfprintf+0x6a4>
     ebc:	ae 01       	movw	r20, r28
     ebe:	4f 5f       	subi	r20, 0xFF	; 255
     ec0:	5f 4f       	sbci	r21, 0xFF	; 255
     ec2:	3a 01       	movw	r6, r20
     ec4:	f6 01       	movw	r30, r12
     ec6:	93 81       	ldd	r25, Z+3	; 0x03
     ec8:	f4 01       	movw	r30, r8
     eca:	93 fd       	sbrc	r25, 3
     ecc:	85 91       	lpm	r24, Z+
     ece:	93 ff       	sbrs	r25, 3
     ed0:	81 91       	ld	r24, Z+
     ed2:	4f 01       	movw	r8, r30
     ed4:	88 23       	and	r24, r24
     ed6:	09 f4       	brne	.+2      	; 0xeda <vfprintf+0x3c>
     ed8:	30 c3       	rjmp	.+1632   	; 0x153a <vfprintf+0x69c>
     eda:	85 32       	cpi	r24, 0x25	; 37
     edc:	39 f4       	brne	.+14     	; 0xeec <vfprintf+0x4e>
     ede:	93 fd       	sbrc	r25, 3
     ee0:	85 91       	lpm	r24, Z+
     ee2:	93 ff       	sbrs	r25, 3
     ee4:	81 91       	ld	r24, Z+
     ee6:	4f 01       	movw	r8, r30
     ee8:	85 32       	cpi	r24, 0x25	; 37
     eea:	39 f4       	brne	.+14     	; 0xefa <vfprintf+0x5c>
     eec:	b6 01       	movw	r22, r12
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
     ef4:	52 01       	movw	r10, r4
     ef6:	25 01       	movw	r4, r10
     ef8:	e5 cf       	rjmp	.-54     	; 0xec4 <vfprintf+0x26>
     efa:	10 e0       	ldi	r17, 0x00	; 0
     efc:	f1 2c       	mov	r15, r1
     efe:	20 e0       	ldi	r18, 0x00	; 0
     f00:	20 32       	cpi	r18, 0x20	; 32
     f02:	a0 f4       	brcc	.+40     	; 0xf2c <vfprintf+0x8e>
     f04:	8b 32       	cpi	r24, 0x2B	; 43
     f06:	69 f0       	breq	.+26     	; 0xf22 <vfprintf+0x84>
     f08:	30 f4       	brcc	.+12     	; 0xf16 <vfprintf+0x78>
     f0a:	80 32       	cpi	r24, 0x20	; 32
     f0c:	59 f0       	breq	.+22     	; 0xf24 <vfprintf+0x86>
     f0e:	83 32       	cpi	r24, 0x23	; 35
     f10:	69 f4       	brne	.+26     	; 0xf2c <vfprintf+0x8e>
     f12:	20 61       	ori	r18, 0x10	; 16
     f14:	2c c0       	rjmp	.+88     	; 0xf6e <vfprintf+0xd0>
     f16:	8d 32       	cpi	r24, 0x2D	; 45
     f18:	39 f0       	breq	.+14     	; 0xf28 <vfprintf+0x8a>
     f1a:	80 33       	cpi	r24, 0x30	; 48
     f1c:	39 f4       	brne	.+14     	; 0xf2c <vfprintf+0x8e>
     f1e:	21 60       	ori	r18, 0x01	; 1
     f20:	26 c0       	rjmp	.+76     	; 0xf6e <vfprintf+0xd0>
     f22:	22 60       	ori	r18, 0x02	; 2
     f24:	24 60       	ori	r18, 0x04	; 4
     f26:	23 c0       	rjmp	.+70     	; 0xf6e <vfprintf+0xd0>
     f28:	28 60       	ori	r18, 0x08	; 8
     f2a:	21 c0       	rjmp	.+66     	; 0xf6e <vfprintf+0xd0>
     f2c:	27 fd       	sbrc	r18, 7
     f2e:	27 c0       	rjmp	.+78     	; 0xf7e <vfprintf+0xe0>
     f30:	30 ed       	ldi	r19, 0xD0	; 208
     f32:	38 0f       	add	r19, r24
     f34:	3a 30       	cpi	r19, 0x0A	; 10
     f36:	78 f4       	brcc	.+30     	; 0xf56 <vfprintf+0xb8>
     f38:	26 ff       	sbrs	r18, 6
     f3a:	06 c0       	rjmp	.+12     	; 0xf48 <vfprintf+0xaa>
     f3c:	fa e0       	ldi	r31, 0x0A	; 10
     f3e:	1f 9f       	mul	r17, r31
     f40:	30 0d       	add	r19, r0
     f42:	11 24       	eor	r1, r1
     f44:	13 2f       	mov	r17, r19
     f46:	13 c0       	rjmp	.+38     	; 0xf6e <vfprintf+0xd0>
     f48:	4a e0       	ldi	r20, 0x0A	; 10
     f4a:	f4 9e       	mul	r15, r20
     f4c:	30 0d       	add	r19, r0
     f4e:	11 24       	eor	r1, r1
     f50:	f3 2e       	mov	r15, r19
     f52:	20 62       	ori	r18, 0x20	; 32
     f54:	0c c0       	rjmp	.+24     	; 0xf6e <vfprintf+0xd0>
     f56:	8e 32       	cpi	r24, 0x2E	; 46
     f58:	21 f4       	brne	.+8      	; 0xf62 <vfprintf+0xc4>
     f5a:	26 fd       	sbrc	r18, 6
     f5c:	ee c2       	rjmp	.+1500   	; 0x153a <vfprintf+0x69c>
     f5e:	20 64       	ori	r18, 0x40	; 64
     f60:	06 c0       	rjmp	.+12     	; 0xf6e <vfprintf+0xd0>
     f62:	8c 36       	cpi	r24, 0x6C	; 108
     f64:	11 f4       	brne	.+4      	; 0xf6a <vfprintf+0xcc>
     f66:	20 68       	ori	r18, 0x80	; 128
     f68:	02 c0       	rjmp	.+4      	; 0xf6e <vfprintf+0xd0>
     f6a:	88 36       	cpi	r24, 0x68	; 104
     f6c:	41 f4       	brne	.+16     	; 0xf7e <vfprintf+0xe0>
     f6e:	f4 01       	movw	r30, r8
     f70:	93 fd       	sbrc	r25, 3
     f72:	85 91       	lpm	r24, Z+
     f74:	93 ff       	sbrs	r25, 3
     f76:	81 91       	ld	r24, Z+
     f78:	4f 01       	movw	r8, r30
     f7a:	81 11       	cpse	r24, r1
     f7c:	c1 cf       	rjmp	.-126    	; 0xf00 <vfprintf+0x62>
     f7e:	9b eb       	ldi	r25, 0xBB	; 187
     f80:	98 0f       	add	r25, r24
     f82:	93 30       	cpi	r25, 0x03	; 3
     f84:	18 f4       	brcc	.+6      	; 0xf8c <vfprintf+0xee>
     f86:	20 61       	ori	r18, 0x10	; 16
     f88:	80 5e       	subi	r24, 0xE0	; 224
     f8a:	06 c0       	rjmp	.+12     	; 0xf98 <vfprintf+0xfa>
     f8c:	9b e9       	ldi	r25, 0x9B	; 155
     f8e:	98 0f       	add	r25, r24
     f90:	93 30       	cpi	r25, 0x03	; 3
     f92:	08 f0       	brcs	.+2      	; 0xf96 <vfprintf+0xf8>
     f94:	71 c1       	rjmp	.+738    	; 0x1278 <vfprintf+0x3da>
     f96:	2f 7e       	andi	r18, 0xEF	; 239
     f98:	26 ff       	sbrs	r18, 6
     f9a:	16 e0       	ldi	r17, 0x06	; 6
     f9c:	2f 73       	andi	r18, 0x3F	; 63
     f9e:	32 2e       	mov	r3, r18
     fa0:	85 36       	cpi	r24, 0x65	; 101
     fa2:	19 f4       	brne	.+6      	; 0xfaa <vfprintf+0x10c>
     fa4:	20 64       	ori	r18, 0x40	; 64
     fa6:	32 2e       	mov	r3, r18
     fa8:	08 c0       	rjmp	.+16     	; 0xfba <vfprintf+0x11c>
     faa:	86 36       	cpi	r24, 0x66	; 102
     fac:	21 f4       	brne	.+8      	; 0xfb6 <vfprintf+0x118>
     fae:	f2 2f       	mov	r31, r18
     fb0:	f0 68       	ori	r31, 0x80	; 128
     fb2:	3f 2e       	mov	r3, r31
     fb4:	02 c0       	rjmp	.+4      	; 0xfba <vfprintf+0x11c>
     fb6:	11 11       	cpse	r17, r1
     fb8:	11 50       	subi	r17, 0x01	; 1
     fba:	37 fe       	sbrs	r3, 7
     fbc:	07 c0       	rjmp	.+14     	; 0xfcc <vfprintf+0x12e>
     fbe:	1c 33       	cpi	r17, 0x3C	; 60
     fc0:	50 f4       	brcc	.+20     	; 0xfd6 <vfprintf+0x138>
     fc2:	ee 24       	eor	r14, r14
     fc4:	e3 94       	inc	r14
     fc6:	e1 0e       	add	r14, r17
     fc8:	27 e0       	ldi	r18, 0x07	; 7
     fca:	0b c0       	rjmp	.+22     	; 0xfe2 <vfprintf+0x144>
     fcc:	18 30       	cpi	r17, 0x08	; 8
     fce:	38 f0       	brcs	.+14     	; 0xfde <vfprintf+0x140>
     fd0:	27 e0       	ldi	r18, 0x07	; 7
     fd2:	17 e0       	ldi	r17, 0x07	; 7
     fd4:	05 c0       	rjmp	.+10     	; 0xfe0 <vfprintf+0x142>
     fd6:	27 e0       	ldi	r18, 0x07	; 7
     fd8:	4c e3       	ldi	r20, 0x3C	; 60
     fda:	e4 2e       	mov	r14, r20
     fdc:	02 c0       	rjmp	.+4      	; 0xfe2 <vfprintf+0x144>
     fde:	21 2f       	mov	r18, r17
     fe0:	e1 2c       	mov	r14, r1
     fe2:	52 01       	movw	r10, r4
     fe4:	44 e0       	ldi	r20, 0x04	; 4
     fe6:	a4 0e       	add	r10, r20
     fe8:	b1 1c       	adc	r11, r1
     fea:	f2 01       	movw	r30, r4
     fec:	60 81       	ld	r22, Z
     fee:	71 81       	ldd	r23, Z+1	; 0x01
     ff0:	82 81       	ldd	r24, Z+2	; 0x02
     ff2:	93 81       	ldd	r25, Z+3	; 0x03
     ff4:	0e 2d       	mov	r16, r14
     ff6:	a3 01       	movw	r20, r6
     ff8:	0e 94 02 0b 	call	0x1604	; 0x1604 <__ftoa_engine>
     ffc:	2c 01       	movw	r4, r24
     ffe:	09 81       	ldd	r16, Y+1	; 0x01
    1000:	00 ff       	sbrs	r16, 0
    1002:	02 c0       	rjmp	.+4      	; 0x1008 <vfprintf+0x16a>
    1004:	03 ff       	sbrs	r16, 3
    1006:	07 c0       	rjmp	.+14     	; 0x1016 <vfprintf+0x178>
    1008:	31 fc       	sbrc	r3, 1
    100a:	08 c0       	rjmp	.+16     	; 0x101c <vfprintf+0x17e>
    100c:	32 fe       	sbrs	r3, 2
    100e:	09 c0       	rjmp	.+18     	; 0x1022 <vfprintf+0x184>
    1010:	30 e2       	ldi	r19, 0x20	; 32
    1012:	23 2e       	mov	r2, r19
    1014:	07 c0       	rjmp	.+14     	; 0x1024 <vfprintf+0x186>
    1016:	2d e2       	ldi	r18, 0x2D	; 45
    1018:	22 2e       	mov	r2, r18
    101a:	04 c0       	rjmp	.+8      	; 0x1024 <vfprintf+0x186>
    101c:	9b e2       	ldi	r25, 0x2B	; 43
    101e:	29 2e       	mov	r2, r25
    1020:	01 c0       	rjmp	.+2      	; 0x1024 <vfprintf+0x186>
    1022:	21 2c       	mov	r2, r1
    1024:	80 2f       	mov	r24, r16
    1026:	8c 70       	andi	r24, 0x0C	; 12
    1028:	19 f0       	breq	.+6      	; 0x1030 <vfprintf+0x192>
    102a:	21 10       	cpse	r2, r1
    102c:	68 c2       	rjmp	.+1232   	; 0x14fe <vfprintf+0x660>
    102e:	a8 c2       	rjmp	.+1360   	; 0x1580 <vfprintf+0x6e2>
    1030:	37 fe       	sbrs	r3, 7
    1032:	0f c0       	rjmp	.+30     	; 0x1052 <vfprintf+0x1b4>
    1034:	e4 0c       	add	r14, r4
    1036:	04 ff       	sbrs	r16, 4
    1038:	04 c0       	rjmp	.+8      	; 0x1042 <vfprintf+0x1a4>
    103a:	8a 81       	ldd	r24, Y+2	; 0x02
    103c:	81 33       	cpi	r24, 0x31	; 49
    103e:	09 f4       	brne	.+2      	; 0x1042 <vfprintf+0x1a4>
    1040:	ea 94       	dec	r14
    1042:	1e 14       	cp	r1, r14
    1044:	74 f5       	brge	.+92     	; 0x10a2 <vfprintf+0x204>
    1046:	f8 e0       	ldi	r31, 0x08	; 8
    1048:	fe 15       	cp	r31, r14
    104a:	78 f5       	brcc	.+94     	; 0x10aa <vfprintf+0x20c>
    104c:	88 e0       	ldi	r24, 0x08	; 8
    104e:	e8 2e       	mov	r14, r24
    1050:	2c c0       	rjmp	.+88     	; 0x10aa <vfprintf+0x20c>
    1052:	36 fc       	sbrc	r3, 6
    1054:	2a c0       	rjmp	.+84     	; 0x10aa <vfprintf+0x20c>
    1056:	81 2f       	mov	r24, r17
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	84 15       	cp	r24, r4
    105c:	95 05       	cpc	r25, r5
    105e:	9c f0       	brlt	.+38     	; 0x1086 <vfprintf+0x1e8>
    1060:	2c ef       	ldi	r18, 0xFC	; 252
    1062:	42 16       	cp	r4, r18
    1064:	2f ef       	ldi	r18, 0xFF	; 255
    1066:	52 06       	cpc	r5, r18
    1068:	74 f0       	brlt	.+28     	; 0x1086 <vfprintf+0x1e8>
    106a:	43 2d       	mov	r20, r3
    106c:	40 68       	ori	r20, 0x80	; 128
    106e:	34 2e       	mov	r3, r20
    1070:	0a c0       	rjmp	.+20     	; 0x1086 <vfprintf+0x1e8>
    1072:	e2 e0       	ldi	r30, 0x02	; 2
    1074:	f0 e0       	ldi	r31, 0x00	; 0
    1076:	ec 0f       	add	r30, r28
    1078:	fd 1f       	adc	r31, r29
    107a:	e1 0f       	add	r30, r17
    107c:	f1 1d       	adc	r31, r1
    107e:	80 81       	ld	r24, Z
    1080:	80 33       	cpi	r24, 0x30	; 48
    1082:	19 f4       	brne	.+6      	; 0x108a <vfprintf+0x1ec>
    1084:	11 50       	subi	r17, 0x01	; 1
    1086:	11 11       	cpse	r17, r1
    1088:	f4 cf       	rjmp	.-24     	; 0x1072 <vfprintf+0x1d4>
    108a:	37 fe       	sbrs	r3, 7
    108c:	0e c0       	rjmp	.+28     	; 0x10aa <vfprintf+0x20c>
    108e:	ee 24       	eor	r14, r14
    1090:	e3 94       	inc	r14
    1092:	e1 0e       	add	r14, r17
    1094:	81 2f       	mov	r24, r17
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	48 16       	cp	r4, r24
    109a:	59 06       	cpc	r5, r25
    109c:	2c f4       	brge	.+10     	; 0x10a8 <vfprintf+0x20a>
    109e:	14 19       	sub	r17, r4
    10a0:	04 c0       	rjmp	.+8      	; 0x10aa <vfprintf+0x20c>
    10a2:	ee 24       	eor	r14, r14
    10a4:	e3 94       	inc	r14
    10a6:	01 c0       	rjmp	.+2      	; 0x10aa <vfprintf+0x20c>
    10a8:	10 e0       	ldi	r17, 0x00	; 0
    10aa:	37 fe       	sbrs	r3, 7
    10ac:	06 c0       	rjmp	.+12     	; 0x10ba <vfprintf+0x21c>
    10ae:	14 14       	cp	r1, r4
    10b0:	15 04       	cpc	r1, r5
    10b2:	34 f4       	brge	.+12     	; 0x10c0 <vfprintf+0x222>
    10b4:	c2 01       	movw	r24, r4
    10b6:	01 96       	adiw	r24, 0x01	; 1
    10b8:	05 c0       	rjmp	.+10     	; 0x10c4 <vfprintf+0x226>
    10ba:	85 e0       	ldi	r24, 0x05	; 5
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <vfprintf+0x226>
    10c0:	81 e0       	ldi	r24, 0x01	; 1
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	21 10       	cpse	r2, r1
    10c6:	01 96       	adiw	r24, 0x01	; 1
    10c8:	11 23       	and	r17, r17
    10ca:	31 f0       	breq	.+12     	; 0x10d8 <vfprintf+0x23a>
    10cc:	21 2f       	mov	r18, r17
    10ce:	30 e0       	ldi	r19, 0x00	; 0
    10d0:	2f 5f       	subi	r18, 0xFF	; 255
    10d2:	3f 4f       	sbci	r19, 0xFF	; 255
    10d4:	82 0f       	add	r24, r18
    10d6:	93 1f       	adc	r25, r19
    10d8:	2f 2d       	mov	r18, r15
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	82 17       	cp	r24, r18
    10de:	93 07       	cpc	r25, r19
    10e0:	14 f4       	brge	.+4      	; 0x10e6 <vfprintf+0x248>
    10e2:	f8 1a       	sub	r15, r24
    10e4:	01 c0       	rjmp	.+2      	; 0x10e8 <vfprintf+0x24a>
    10e6:	f1 2c       	mov	r15, r1
    10e8:	83 2d       	mov	r24, r3
    10ea:	89 70       	andi	r24, 0x09	; 9
    10ec:	49 f4       	brne	.+18     	; 0x1100 <vfprintf+0x262>
    10ee:	ff 20       	and	r15, r15
    10f0:	39 f0       	breq	.+14     	; 0x1100 <vfprintf+0x262>
    10f2:	b6 01       	movw	r22, r12
    10f4:	80 e2       	ldi	r24, 0x20	; 32
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    10fc:	fa 94       	dec	r15
    10fe:	f7 cf       	rjmp	.-18     	; 0x10ee <vfprintf+0x250>
    1100:	22 20       	and	r2, r2
    1102:	29 f0       	breq	.+10     	; 0x110e <vfprintf+0x270>
    1104:	b6 01       	movw	r22, r12
    1106:	82 2d       	mov	r24, r2
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    110e:	33 fc       	sbrc	r3, 3
    1110:	09 c0       	rjmp	.+18     	; 0x1124 <vfprintf+0x286>
    1112:	ff 20       	and	r15, r15
    1114:	39 f0       	breq	.+14     	; 0x1124 <vfprintf+0x286>
    1116:	b6 01       	movw	r22, r12
    1118:	80 e3       	ldi	r24, 0x30	; 48
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    1120:	fa 94       	dec	r15
    1122:	f7 cf       	rjmp	.-18     	; 0x1112 <vfprintf+0x274>
    1124:	37 fe       	sbrs	r3, 7
    1126:	5a c0       	rjmp	.+180    	; 0x11dc <vfprintf+0x33e>
    1128:	94 2d       	mov	r25, r4
    112a:	85 2d       	mov	r24, r5
    112c:	57 fe       	sbrs	r5, 7
    112e:	02 c0       	rjmp	.+4      	; 0x1134 <vfprintf+0x296>
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	80 e0       	ldi	r24, 0x00	; 0
    1134:	29 2e       	mov	r2, r25
    1136:	38 2e       	mov	r3, r24
    1138:	20 e0       	ldi	r18, 0x00	; 0
    113a:	30 e0       	ldi	r19, 0x00	; 0
    113c:	a2 01       	movw	r20, r4
    113e:	4e 19       	sub	r20, r14
    1140:	51 09       	sbc	r21, r1
    1142:	5d 87       	std	Y+13, r21	; 0x0d
    1144:	4c 87       	std	Y+12, r20	; 0x0c
    1146:	a2 01       	movw	r20, r4
    1148:	42 19       	sub	r20, r2
    114a:	53 09       	sbc	r21, r3
    114c:	5f 87       	std	Y+15, r21	; 0x0f
    114e:	4e 87       	std	Y+14, r20	; 0x0e
    1150:	61 2f       	mov	r22, r17
    1152:	70 e0       	ldi	r23, 0x00	; 0
    1154:	44 27       	eor	r20, r20
    1156:	55 27       	eor	r21, r21
    1158:	46 1b       	sub	r20, r22
    115a:	57 0b       	sbc	r21, r23
    115c:	59 8b       	std	Y+17, r21	; 0x11
    115e:	48 8b       	std	Y+16, r20	; 0x10
    1160:	5f ef       	ldi	r21, 0xFF	; 255
    1162:	25 16       	cp	r2, r21
    1164:	35 06       	cpc	r3, r21
    1166:	49 f4       	brne	.+18     	; 0x117a <vfprintf+0x2dc>
    1168:	b6 01       	movw	r22, r12
    116a:	8e e2       	ldi	r24, 0x2E	; 46
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	2a 8b       	std	Y+18, r18	; 0x12
    1170:	3b 8b       	std	Y+19, r19	; 0x13
    1172:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    1176:	3b 89       	ldd	r19, Y+19	; 0x13
    1178:	2a 89       	ldd	r18, Y+18	; 0x12
    117a:	42 14       	cp	r4, r2
    117c:	53 04       	cpc	r5, r3
    117e:	6c f0       	brlt	.+26     	; 0x119a <vfprintf+0x2fc>
    1180:	4c 85       	ldd	r20, Y+12	; 0x0c
    1182:	5d 85       	ldd	r21, Y+13	; 0x0d
    1184:	42 15       	cp	r20, r2
    1186:	53 05       	cpc	r21, r3
    1188:	44 f4       	brge	.+16     	; 0x119a <vfprintf+0x2fc>
    118a:	ee 85       	ldd	r30, Y+14	; 0x0e
    118c:	ff 85       	ldd	r31, Y+15	; 0x0f
    118e:	e2 0f       	add	r30, r18
    1190:	f3 1f       	adc	r31, r19
    1192:	e6 0d       	add	r30, r6
    1194:	f7 1d       	adc	r31, r7
    1196:	81 81       	ldd	r24, Z+1	; 0x01
    1198:	01 c0       	rjmp	.+2      	; 0x119c <vfprintf+0x2fe>
    119a:	80 e3       	ldi	r24, 0x30	; 48
    119c:	51 e0       	ldi	r21, 0x01	; 1
    119e:	25 1a       	sub	r2, r21
    11a0:	31 08       	sbc	r3, r1
    11a2:	2f 5f       	subi	r18, 0xFF	; 255
    11a4:	3f 4f       	sbci	r19, 0xFF	; 255
    11a6:	48 89       	ldd	r20, Y+16	; 0x10
    11a8:	59 89       	ldd	r21, Y+17	; 0x11
    11aa:	24 16       	cp	r2, r20
    11ac:	35 06       	cpc	r3, r21
    11ae:	4c f0       	brlt	.+18     	; 0x11c2 <vfprintf+0x324>
    11b0:	b6 01       	movw	r22, r12
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	2a 8b       	std	Y+18, r18	; 0x12
    11b6:	3b 8b       	std	Y+19, r19	; 0x13
    11b8:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    11bc:	2a 89       	ldd	r18, Y+18	; 0x12
    11be:	3b 89       	ldd	r19, Y+19	; 0x13
    11c0:	cf cf       	rjmp	.-98     	; 0x1160 <vfprintf+0x2c2>
    11c2:	24 14       	cp	r2, r4
    11c4:	35 04       	cpc	r3, r5
    11c6:	39 f4       	brne	.+14     	; 0x11d6 <vfprintf+0x338>
    11c8:	9a 81       	ldd	r25, Y+2	; 0x02
    11ca:	96 33       	cpi	r25, 0x36	; 54
    11cc:	18 f4       	brcc	.+6      	; 0x11d4 <vfprintf+0x336>
    11ce:	95 33       	cpi	r25, 0x35	; 53
    11d0:	11 f4       	brne	.+4      	; 0x11d6 <vfprintf+0x338>
    11d2:	04 ff       	sbrs	r16, 4
    11d4:	81 e3       	ldi	r24, 0x31	; 49
    11d6:	b6 01       	movw	r22, r12
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	4b c0       	rjmp	.+150    	; 0x1272 <vfprintf+0x3d4>
    11dc:	8a 81       	ldd	r24, Y+2	; 0x02
    11de:	81 33       	cpi	r24, 0x31	; 49
    11e0:	09 f0       	breq	.+2      	; 0x11e4 <vfprintf+0x346>
    11e2:	0f 7e       	andi	r16, 0xEF	; 239
    11e4:	b6 01       	movw	r22, r12
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    11ec:	11 11       	cpse	r17, r1
    11ee:	05 c0       	rjmp	.+10     	; 0x11fa <vfprintf+0x35c>
    11f0:	34 fc       	sbrc	r3, 4
    11f2:	18 c0       	rjmp	.+48     	; 0x1224 <vfprintf+0x386>
    11f4:	85 e6       	ldi	r24, 0x65	; 101
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	17 c0       	rjmp	.+46     	; 0x1228 <vfprintf+0x38a>
    11fa:	b6 01       	movw	r22, r12
    11fc:	8e e2       	ldi	r24, 0x2E	; 46
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    1204:	82 e0       	ldi	r24, 0x02	; 2
    1206:	ee 24       	eor	r14, r14
    1208:	e3 94       	inc	r14
    120a:	e8 0e       	add	r14, r24
    120c:	f3 01       	movw	r30, r6
    120e:	e8 0f       	add	r30, r24
    1210:	f1 1d       	adc	r31, r1
    1212:	80 81       	ld	r24, Z
    1214:	b6 01       	movw	r22, r12
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    121c:	11 50       	subi	r17, 0x01	; 1
    121e:	8e 2d       	mov	r24, r14
    1220:	91 f7       	brne	.-28     	; 0x1206 <vfprintf+0x368>
    1222:	e6 cf       	rjmp	.-52     	; 0x11f0 <vfprintf+0x352>
    1224:	85 e4       	ldi	r24, 0x45	; 69
    1226:	90 e0       	ldi	r25, 0x00	; 0
    1228:	b6 01       	movw	r22, r12
    122a:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    122e:	57 fc       	sbrc	r5, 7
    1230:	05 c0       	rjmp	.+10     	; 0x123c <vfprintf+0x39e>
    1232:	41 14       	cp	r4, r1
    1234:	51 04       	cpc	r5, r1
    1236:	39 f4       	brne	.+14     	; 0x1246 <vfprintf+0x3a8>
    1238:	04 ff       	sbrs	r16, 4
    123a:	05 c0       	rjmp	.+10     	; 0x1246 <vfprintf+0x3a8>
    123c:	51 94       	neg	r5
    123e:	41 94       	neg	r4
    1240:	51 08       	sbc	r5, r1
    1242:	8d e2       	ldi	r24, 0x2D	; 45
    1244:	01 c0       	rjmp	.+2      	; 0x1248 <vfprintf+0x3aa>
    1246:	8b e2       	ldi	r24, 0x2B	; 43
    1248:	b6 01       	movw	r22, r12
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    1250:	80 e3       	ldi	r24, 0x30	; 48
    1252:	9a e0       	ldi	r25, 0x0A	; 10
    1254:	49 16       	cp	r4, r25
    1256:	51 04       	cpc	r5, r1
    1258:	2c f0       	brlt	.+10     	; 0x1264 <vfprintf+0x3c6>
    125a:	8f 5f       	subi	r24, 0xFF	; 255
    125c:	5a e0       	ldi	r21, 0x0A	; 10
    125e:	45 1a       	sub	r4, r21
    1260:	51 08       	sbc	r5, r1
    1262:	f7 cf       	rjmp	.-18     	; 0x1252 <vfprintf+0x3b4>
    1264:	b6 01       	movw	r22, r12
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    126c:	b6 01       	movw	r22, r12
    126e:	c2 01       	movw	r24, r4
    1270:	c0 96       	adiw	r24, 0x30	; 48
    1272:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    1276:	57 c1       	rjmp	.+686    	; 0x1526 <vfprintf+0x688>
    1278:	83 36       	cpi	r24, 0x63	; 99
    127a:	31 f0       	breq	.+12     	; 0x1288 <vfprintf+0x3ea>
    127c:	83 37       	cpi	r24, 0x73	; 115
    127e:	79 f0       	breq	.+30     	; 0x129e <vfprintf+0x400>
    1280:	83 35       	cpi	r24, 0x53	; 83
    1282:	09 f0       	breq	.+2      	; 0x1286 <vfprintf+0x3e8>
    1284:	58 c0       	rjmp	.+176    	; 0x1336 <vfprintf+0x498>
    1286:	21 c0       	rjmp	.+66     	; 0x12ca <vfprintf+0x42c>
    1288:	52 01       	movw	r10, r4
    128a:	e2 e0       	ldi	r30, 0x02	; 2
    128c:	ae 0e       	add	r10, r30
    128e:	b1 1c       	adc	r11, r1
    1290:	f2 01       	movw	r30, r4
    1292:	80 81       	ld	r24, Z
    1294:	89 83       	std	Y+1, r24	; 0x01
    1296:	01 e0       	ldi	r16, 0x01	; 1
    1298:	10 e0       	ldi	r17, 0x00	; 0
    129a:	23 01       	movw	r4, r6
    129c:	14 c0       	rjmp	.+40     	; 0x12c6 <vfprintf+0x428>
    129e:	52 01       	movw	r10, r4
    12a0:	f2 e0       	ldi	r31, 0x02	; 2
    12a2:	af 0e       	add	r10, r31
    12a4:	b1 1c       	adc	r11, r1
    12a6:	f2 01       	movw	r30, r4
    12a8:	40 80       	ld	r4, Z
    12aa:	51 80       	ldd	r5, Z+1	; 0x01
    12ac:	26 ff       	sbrs	r18, 6
    12ae:	03 c0       	rjmp	.+6      	; 0x12b6 <vfprintf+0x418>
    12b0:	61 2f       	mov	r22, r17
    12b2:	70 e0       	ldi	r23, 0x00	; 0
    12b4:	02 c0       	rjmp	.+4      	; 0x12ba <vfprintf+0x41c>
    12b6:	6f ef       	ldi	r22, 0xFF	; 255
    12b8:	7f ef       	ldi	r23, 0xFF	; 255
    12ba:	c2 01       	movw	r24, r4
    12bc:	2a 8b       	std	Y+18, r18	; 0x12
    12be:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <strnlen>
    12c2:	8c 01       	movw	r16, r24
    12c4:	2a 89       	ldd	r18, Y+18	; 0x12
    12c6:	2f 77       	andi	r18, 0x7F	; 127
    12c8:	15 c0       	rjmp	.+42     	; 0x12f4 <vfprintf+0x456>
    12ca:	52 01       	movw	r10, r4
    12cc:	f2 e0       	ldi	r31, 0x02	; 2
    12ce:	af 0e       	add	r10, r31
    12d0:	b1 1c       	adc	r11, r1
    12d2:	f2 01       	movw	r30, r4
    12d4:	40 80       	ld	r4, Z
    12d6:	51 80       	ldd	r5, Z+1	; 0x01
    12d8:	26 ff       	sbrs	r18, 6
    12da:	03 c0       	rjmp	.+6      	; 0x12e2 <vfprintf+0x444>
    12dc:	61 2f       	mov	r22, r17
    12de:	70 e0       	ldi	r23, 0x00	; 0
    12e0:	02 c0       	rjmp	.+4      	; 0x12e6 <vfprintf+0x448>
    12e2:	6f ef       	ldi	r22, 0xFF	; 255
    12e4:	7f ef       	ldi	r23, 0xFF	; 255
    12e6:	c2 01       	movw	r24, r4
    12e8:	2a 8b       	std	Y+18, r18	; 0x12
    12ea:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <strnlen_P>
    12ee:	8c 01       	movw	r16, r24
    12f0:	2a 89       	ldd	r18, Y+18	; 0x12
    12f2:	20 68       	ori	r18, 0x80	; 128
    12f4:	32 2e       	mov	r3, r18
    12f6:	23 fd       	sbrc	r18, 3
    12f8:	1a c0       	rjmp	.+52     	; 0x132e <vfprintf+0x490>
    12fa:	8f 2d       	mov	r24, r15
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	08 17       	cp	r16, r24
    1300:	19 07       	cpc	r17, r25
    1302:	a8 f4       	brcc	.+42     	; 0x132e <vfprintf+0x490>
    1304:	b6 01       	movw	r22, r12
    1306:	80 e2       	ldi	r24, 0x20	; 32
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    130e:	fa 94       	dec	r15
    1310:	f4 cf       	rjmp	.-24     	; 0x12fa <vfprintf+0x45c>
    1312:	f2 01       	movw	r30, r4
    1314:	37 fc       	sbrc	r3, 7
    1316:	85 91       	lpm	r24, Z+
    1318:	37 fe       	sbrs	r3, 7
    131a:	81 91       	ld	r24, Z+
    131c:	2f 01       	movw	r4, r30
    131e:	b6 01       	movw	r22, r12
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    1326:	f1 10       	cpse	r15, r1
    1328:	fa 94       	dec	r15
    132a:	01 50       	subi	r16, 0x01	; 1
    132c:	11 09       	sbc	r17, r1
    132e:	01 15       	cp	r16, r1
    1330:	11 05       	cpc	r17, r1
    1332:	79 f7       	brne	.-34     	; 0x1312 <vfprintf+0x474>
    1334:	f8 c0       	rjmp	.+496    	; 0x1526 <vfprintf+0x688>
    1336:	84 36       	cpi	r24, 0x64	; 100
    1338:	11 f0       	breq	.+4      	; 0x133e <vfprintf+0x4a0>
    133a:	89 36       	cpi	r24, 0x69	; 105
    133c:	59 f5       	brne	.+86     	; 0x1394 <vfprintf+0x4f6>
    133e:	52 01       	movw	r10, r4
    1340:	27 ff       	sbrs	r18, 7
    1342:	09 c0       	rjmp	.+18     	; 0x1356 <vfprintf+0x4b8>
    1344:	f4 e0       	ldi	r31, 0x04	; 4
    1346:	af 0e       	add	r10, r31
    1348:	b1 1c       	adc	r11, r1
    134a:	f2 01       	movw	r30, r4
    134c:	60 81       	ld	r22, Z
    134e:	71 81       	ldd	r23, Z+1	; 0x01
    1350:	82 81       	ldd	r24, Z+2	; 0x02
    1352:	93 81       	ldd	r25, Z+3	; 0x03
    1354:	0a c0       	rjmp	.+20     	; 0x136a <vfprintf+0x4cc>
    1356:	f2 e0       	ldi	r31, 0x02	; 2
    1358:	af 0e       	add	r10, r31
    135a:	b1 1c       	adc	r11, r1
    135c:	f2 01       	movw	r30, r4
    135e:	60 81       	ld	r22, Z
    1360:	71 81       	ldd	r23, Z+1	; 0x01
    1362:	07 2e       	mov	r0, r23
    1364:	00 0c       	add	r0, r0
    1366:	88 0b       	sbc	r24, r24
    1368:	99 0b       	sbc	r25, r25
    136a:	2f 76       	andi	r18, 0x6F	; 111
    136c:	32 2e       	mov	r3, r18
    136e:	97 ff       	sbrs	r25, 7
    1370:	09 c0       	rjmp	.+18     	; 0x1384 <vfprintf+0x4e6>
    1372:	90 95       	com	r25
    1374:	80 95       	com	r24
    1376:	70 95       	com	r23
    1378:	61 95       	neg	r22
    137a:	7f 4f       	sbci	r23, 0xFF	; 255
    137c:	8f 4f       	sbci	r24, 0xFF	; 255
    137e:	9f 4f       	sbci	r25, 0xFF	; 255
    1380:	20 68       	ori	r18, 0x80	; 128
    1382:	32 2e       	mov	r3, r18
    1384:	2a e0       	ldi	r18, 0x0A	; 10
    1386:	30 e0       	ldi	r19, 0x00	; 0
    1388:	a3 01       	movw	r20, r6
    138a:	0e 94 6e 0c 	call	0x18dc	; 0x18dc <__ultoa_invert>
    138e:	e8 2e       	mov	r14, r24
    1390:	e6 18       	sub	r14, r6
    1392:	3f c0       	rjmp	.+126    	; 0x1412 <vfprintf+0x574>
    1394:	02 2f       	mov	r16, r18
    1396:	85 37       	cpi	r24, 0x75	; 117
    1398:	21 f4       	brne	.+8      	; 0x13a2 <vfprintf+0x504>
    139a:	0f 7e       	andi	r16, 0xEF	; 239
    139c:	2a e0       	ldi	r18, 0x0A	; 10
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	1d c0       	rjmp	.+58     	; 0x13dc <vfprintf+0x53e>
    13a2:	09 7f       	andi	r16, 0xF9	; 249
    13a4:	8f 36       	cpi	r24, 0x6F	; 111
    13a6:	91 f0       	breq	.+36     	; 0x13cc <vfprintf+0x52e>
    13a8:	18 f4       	brcc	.+6      	; 0x13b0 <vfprintf+0x512>
    13aa:	88 35       	cpi	r24, 0x58	; 88
    13ac:	59 f0       	breq	.+22     	; 0x13c4 <vfprintf+0x526>
    13ae:	c5 c0       	rjmp	.+394    	; 0x153a <vfprintf+0x69c>
    13b0:	80 37       	cpi	r24, 0x70	; 112
    13b2:	19 f0       	breq	.+6      	; 0x13ba <vfprintf+0x51c>
    13b4:	88 37       	cpi	r24, 0x78	; 120
    13b6:	11 f0       	breq	.+4      	; 0x13bc <vfprintf+0x51e>
    13b8:	c0 c0       	rjmp	.+384    	; 0x153a <vfprintf+0x69c>
    13ba:	00 61       	ori	r16, 0x10	; 16
    13bc:	04 ff       	sbrs	r16, 4
    13be:	09 c0       	rjmp	.+18     	; 0x13d2 <vfprintf+0x534>
    13c0:	04 60       	ori	r16, 0x04	; 4
    13c2:	07 c0       	rjmp	.+14     	; 0x13d2 <vfprintf+0x534>
    13c4:	24 ff       	sbrs	r18, 4
    13c6:	08 c0       	rjmp	.+16     	; 0x13d8 <vfprintf+0x53a>
    13c8:	06 60       	ori	r16, 0x06	; 6
    13ca:	06 c0       	rjmp	.+12     	; 0x13d8 <vfprintf+0x53a>
    13cc:	28 e0       	ldi	r18, 0x08	; 8
    13ce:	30 e0       	ldi	r19, 0x00	; 0
    13d0:	05 c0       	rjmp	.+10     	; 0x13dc <vfprintf+0x53e>
    13d2:	20 e1       	ldi	r18, 0x10	; 16
    13d4:	30 e0       	ldi	r19, 0x00	; 0
    13d6:	02 c0       	rjmp	.+4      	; 0x13dc <vfprintf+0x53e>
    13d8:	20 e1       	ldi	r18, 0x10	; 16
    13da:	32 e0       	ldi	r19, 0x02	; 2
    13dc:	52 01       	movw	r10, r4
    13de:	07 ff       	sbrs	r16, 7
    13e0:	09 c0       	rjmp	.+18     	; 0x13f4 <vfprintf+0x556>
    13e2:	f4 e0       	ldi	r31, 0x04	; 4
    13e4:	af 0e       	add	r10, r31
    13e6:	b1 1c       	adc	r11, r1
    13e8:	f2 01       	movw	r30, r4
    13ea:	60 81       	ld	r22, Z
    13ec:	71 81       	ldd	r23, Z+1	; 0x01
    13ee:	82 81       	ldd	r24, Z+2	; 0x02
    13f0:	93 81       	ldd	r25, Z+3	; 0x03
    13f2:	08 c0       	rjmp	.+16     	; 0x1404 <vfprintf+0x566>
    13f4:	f2 e0       	ldi	r31, 0x02	; 2
    13f6:	af 0e       	add	r10, r31
    13f8:	b1 1c       	adc	r11, r1
    13fa:	f2 01       	movw	r30, r4
    13fc:	60 81       	ld	r22, Z
    13fe:	71 81       	ldd	r23, Z+1	; 0x01
    1400:	80 e0       	ldi	r24, 0x00	; 0
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	a3 01       	movw	r20, r6
    1406:	0e 94 6e 0c 	call	0x18dc	; 0x18dc <__ultoa_invert>
    140a:	e8 2e       	mov	r14, r24
    140c:	e6 18       	sub	r14, r6
    140e:	0f 77       	andi	r16, 0x7F	; 127
    1410:	30 2e       	mov	r3, r16
    1412:	36 fe       	sbrs	r3, 6
    1414:	0b c0       	rjmp	.+22     	; 0x142c <vfprintf+0x58e>
    1416:	33 2d       	mov	r19, r3
    1418:	3e 7f       	andi	r19, 0xFE	; 254
    141a:	e1 16       	cp	r14, r17
    141c:	50 f4       	brcc	.+20     	; 0x1432 <vfprintf+0x594>
    141e:	34 fe       	sbrs	r3, 4
    1420:	0a c0       	rjmp	.+20     	; 0x1436 <vfprintf+0x598>
    1422:	32 fc       	sbrc	r3, 2
    1424:	08 c0       	rjmp	.+16     	; 0x1436 <vfprintf+0x598>
    1426:	33 2d       	mov	r19, r3
    1428:	3e 7e       	andi	r19, 0xEE	; 238
    142a:	05 c0       	rjmp	.+10     	; 0x1436 <vfprintf+0x598>
    142c:	0e 2d       	mov	r16, r14
    142e:	33 2d       	mov	r19, r3
    1430:	03 c0       	rjmp	.+6      	; 0x1438 <vfprintf+0x59a>
    1432:	0e 2d       	mov	r16, r14
    1434:	01 c0       	rjmp	.+2      	; 0x1438 <vfprintf+0x59a>
    1436:	01 2f       	mov	r16, r17
    1438:	34 ff       	sbrs	r19, 4
    143a:	0c c0       	rjmp	.+24     	; 0x1454 <vfprintf+0x5b6>
    143c:	fe 01       	movw	r30, r28
    143e:	ee 0d       	add	r30, r14
    1440:	f1 1d       	adc	r31, r1
    1442:	80 81       	ld	r24, Z
    1444:	80 33       	cpi	r24, 0x30	; 48
    1446:	11 f4       	brne	.+4      	; 0x144c <vfprintf+0x5ae>
    1448:	39 7e       	andi	r19, 0xE9	; 233
    144a:	08 c0       	rjmp	.+16     	; 0x145c <vfprintf+0x5be>
    144c:	32 ff       	sbrs	r19, 2
    144e:	05 c0       	rjmp	.+10     	; 0x145a <vfprintf+0x5bc>
    1450:	0e 5f       	subi	r16, 0xFE	; 254
    1452:	04 c0       	rjmp	.+8      	; 0x145c <vfprintf+0x5be>
    1454:	83 2f       	mov	r24, r19
    1456:	86 78       	andi	r24, 0x86	; 134
    1458:	09 f0       	breq	.+2      	; 0x145c <vfprintf+0x5be>
    145a:	0f 5f       	subi	r16, 0xFF	; 255
    145c:	33 fd       	sbrc	r19, 3
    145e:	13 c0       	rjmp	.+38     	; 0x1486 <vfprintf+0x5e8>
    1460:	30 ff       	sbrs	r19, 0
    1462:	06 c0       	rjmp	.+12     	; 0x1470 <vfprintf+0x5d2>
    1464:	1e 2d       	mov	r17, r14
    1466:	0f 15       	cp	r16, r15
    1468:	18 f4       	brcc	.+6      	; 0x1470 <vfprintf+0x5d2>
    146a:	1f 0d       	add	r17, r15
    146c:	10 1b       	sub	r17, r16
    146e:	0f 2d       	mov	r16, r15
    1470:	0f 15       	cp	r16, r15
    1472:	68 f4       	brcc	.+26     	; 0x148e <vfprintf+0x5f0>
    1474:	b6 01       	movw	r22, r12
    1476:	80 e2       	ldi	r24, 0x20	; 32
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	3b 8b       	std	Y+19, r19	; 0x13
    147c:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    1480:	0f 5f       	subi	r16, 0xFF	; 255
    1482:	3b 89       	ldd	r19, Y+19	; 0x13
    1484:	f5 cf       	rjmp	.-22     	; 0x1470 <vfprintf+0x5d2>
    1486:	0f 15       	cp	r16, r15
    1488:	10 f4       	brcc	.+4      	; 0x148e <vfprintf+0x5f0>
    148a:	f0 1a       	sub	r15, r16
    148c:	01 c0       	rjmp	.+2      	; 0x1490 <vfprintf+0x5f2>
    148e:	f1 2c       	mov	r15, r1
    1490:	34 ff       	sbrs	r19, 4
    1492:	12 c0       	rjmp	.+36     	; 0x14b8 <vfprintf+0x61a>
    1494:	b6 01       	movw	r22, r12
    1496:	80 e3       	ldi	r24, 0x30	; 48
    1498:	90 e0       	ldi	r25, 0x00	; 0
    149a:	3b 8b       	std	Y+19, r19	; 0x13
    149c:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    14a0:	3b 89       	ldd	r19, Y+19	; 0x13
    14a2:	32 ff       	sbrs	r19, 2
    14a4:	17 c0       	rjmp	.+46     	; 0x14d4 <vfprintf+0x636>
    14a6:	31 fd       	sbrc	r19, 1
    14a8:	03 c0       	rjmp	.+6      	; 0x14b0 <vfprintf+0x612>
    14aa:	88 e7       	ldi	r24, 0x78	; 120
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	02 c0       	rjmp	.+4      	; 0x14b4 <vfprintf+0x616>
    14b0:	88 e5       	ldi	r24, 0x58	; 88
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	b6 01       	movw	r22, r12
    14b6:	0c c0       	rjmp	.+24     	; 0x14d0 <vfprintf+0x632>
    14b8:	83 2f       	mov	r24, r19
    14ba:	86 78       	andi	r24, 0x86	; 134
    14bc:	59 f0       	breq	.+22     	; 0x14d4 <vfprintf+0x636>
    14be:	31 ff       	sbrs	r19, 1
    14c0:	02 c0       	rjmp	.+4      	; 0x14c6 <vfprintf+0x628>
    14c2:	8b e2       	ldi	r24, 0x2B	; 43
    14c4:	01 c0       	rjmp	.+2      	; 0x14c8 <vfprintf+0x62a>
    14c6:	80 e2       	ldi	r24, 0x20	; 32
    14c8:	37 fd       	sbrc	r19, 7
    14ca:	8d e2       	ldi	r24, 0x2D	; 45
    14cc:	b6 01       	movw	r22, r12
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    14d4:	e1 16       	cp	r14, r17
    14d6:	38 f4       	brcc	.+14     	; 0x14e6 <vfprintf+0x648>
    14d8:	b6 01       	movw	r22, r12
    14da:	80 e3       	ldi	r24, 0x30	; 48
    14dc:	90 e0       	ldi	r25, 0x00	; 0
    14de:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    14e2:	11 50       	subi	r17, 0x01	; 1
    14e4:	f7 cf       	rjmp	.-18     	; 0x14d4 <vfprintf+0x636>
    14e6:	ea 94       	dec	r14
    14e8:	f3 01       	movw	r30, r6
    14ea:	ee 0d       	add	r30, r14
    14ec:	f1 1d       	adc	r31, r1
    14ee:	80 81       	ld	r24, Z
    14f0:	b6 01       	movw	r22, r12
    14f2:	90 e0       	ldi	r25, 0x00	; 0
    14f4:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    14f8:	e1 10       	cpse	r14, r1
    14fa:	f5 cf       	rjmp	.-22     	; 0x14e6 <vfprintf+0x648>
    14fc:	14 c0       	rjmp	.+40     	; 0x1526 <vfprintf+0x688>
    14fe:	f4 e0       	ldi	r31, 0x04	; 4
    1500:	ff 15       	cp	r31, r15
    1502:	58 f5       	brcc	.+86     	; 0x155a <vfprintf+0x6bc>
    1504:	84 e0       	ldi	r24, 0x04	; 4
    1506:	f8 1a       	sub	r15, r24
    1508:	33 fe       	sbrs	r3, 3
    150a:	1e c0       	rjmp	.+60     	; 0x1548 <vfprintf+0x6aa>
    150c:	21 10       	cpse	r2, r1
    150e:	26 c0       	rjmp	.+76     	; 0x155c <vfprintf+0x6be>
    1510:	03 ff       	sbrs	r16, 3
    1512:	2a c0       	rjmp	.+84     	; 0x1568 <vfprintf+0x6ca>
    1514:	06 e9       	ldi	r16, 0x96	; 150
    1516:	10 e0       	ldi	r17, 0x00	; 0
    1518:	f3 2d       	mov	r31, r3
    151a:	f0 71       	andi	r31, 0x10	; 16
    151c:	3f 2e       	mov	r3, r31
    151e:	f8 01       	movw	r30, r16
    1520:	84 91       	lpm	r24, Z
    1522:	81 11       	cpse	r24, r1
    1524:	24 c0       	rjmp	.+72     	; 0x156e <vfprintf+0x6d0>
    1526:	ff 20       	and	r15, r15
    1528:	09 f4       	brne	.+2      	; 0x152c <vfprintf+0x68e>
    152a:	e5 cc       	rjmp	.-1590   	; 0xef6 <vfprintf+0x58>
    152c:	b6 01       	movw	r22, r12
    152e:	80 e2       	ldi	r24, 0x20	; 32
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    1536:	fa 94       	dec	r15
    1538:	f6 cf       	rjmp	.-20     	; 0x1526 <vfprintf+0x688>
    153a:	f6 01       	movw	r30, r12
    153c:	86 81       	ldd	r24, Z+6	; 0x06
    153e:	97 81       	ldd	r25, Z+7	; 0x07
    1540:	26 c0       	rjmp	.+76     	; 0x158e <vfprintf+0x6f0>
    1542:	8f ef       	ldi	r24, 0xFF	; 255
    1544:	9f ef       	ldi	r25, 0xFF	; 255
    1546:	23 c0       	rjmp	.+70     	; 0x158e <vfprintf+0x6f0>
    1548:	b6 01       	movw	r22, r12
    154a:	80 e2       	ldi	r24, 0x20	; 32
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    1552:	fa 94       	dec	r15
    1554:	f1 10       	cpse	r15, r1
    1556:	f8 cf       	rjmp	.-16     	; 0x1548 <vfprintf+0x6aa>
    1558:	d9 cf       	rjmp	.-78     	; 0x150c <vfprintf+0x66e>
    155a:	f1 2c       	mov	r15, r1
    155c:	b6 01       	movw	r22, r12
    155e:	82 2d       	mov	r24, r2
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    1566:	d4 cf       	rjmp	.-88     	; 0x1510 <vfprintf+0x672>
    1568:	0a e9       	ldi	r16, 0x9A	; 154
    156a:	10 e0       	ldi	r17, 0x00	; 0
    156c:	d5 cf       	rjmp	.-86     	; 0x1518 <vfprintf+0x67a>
    156e:	31 10       	cpse	r3, r1
    1570:	80 52       	subi	r24, 0x20	; 32
    1572:	b6 01       	movw	r22, r12
    1574:	90 e0       	ldi	r25, 0x00	; 0
    1576:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <fputc>
    157a:	0f 5f       	subi	r16, 0xFF	; 255
    157c:	1f 4f       	sbci	r17, 0xFF	; 255
    157e:	cf cf       	rjmp	.-98     	; 0x151e <vfprintf+0x680>
    1580:	23 e0       	ldi	r18, 0x03	; 3
    1582:	2f 15       	cp	r18, r15
    1584:	10 f4       	brcc	.+4      	; 0x158a <vfprintf+0x6ec>
    1586:	83 e0       	ldi	r24, 0x03	; 3
    1588:	be cf       	rjmp	.-132    	; 0x1506 <vfprintf+0x668>
    158a:	f1 2c       	mov	r15, r1
    158c:	c1 cf       	rjmp	.-126    	; 0x1510 <vfprintf+0x672>
    158e:	63 96       	adiw	r28, 0x13	; 19
    1590:	e2 e1       	ldi	r30, 0x12	; 18
    1592:	0c 94 e7 0a 	jmp	0x15ce	; 0x15ce <__epilogue_restores__>

00001596 <__prologue_saves__>:
    1596:	2f 92       	push	r2
    1598:	3f 92       	push	r3
    159a:	4f 92       	push	r4
    159c:	5f 92       	push	r5
    159e:	6f 92       	push	r6
    15a0:	7f 92       	push	r7
    15a2:	8f 92       	push	r8
    15a4:	9f 92       	push	r9
    15a6:	af 92       	push	r10
    15a8:	bf 92       	push	r11
    15aa:	cf 92       	push	r12
    15ac:	df 92       	push	r13
    15ae:	ef 92       	push	r14
    15b0:	ff 92       	push	r15
    15b2:	0f 93       	push	r16
    15b4:	1f 93       	push	r17
    15b6:	cf 93       	push	r28
    15b8:	df 93       	push	r29
    15ba:	cd b7       	in	r28, 0x3d	; 61
    15bc:	de b7       	in	r29, 0x3e	; 62
    15be:	ca 1b       	sub	r28, r26
    15c0:	db 0b       	sbc	r29, r27
    15c2:	0f b6       	in	r0, 0x3f	; 63
    15c4:	f8 94       	cli
    15c6:	de bf       	out	0x3e, r29	; 62
    15c8:	0f be       	out	0x3f, r0	; 63
    15ca:	cd bf       	out	0x3d, r28	; 61
    15cc:	09 94       	ijmp

000015ce <__epilogue_restores__>:
    15ce:	2a 88       	ldd	r2, Y+18	; 0x12
    15d0:	39 88       	ldd	r3, Y+17	; 0x11
    15d2:	48 88       	ldd	r4, Y+16	; 0x10
    15d4:	5f 84       	ldd	r5, Y+15	; 0x0f
    15d6:	6e 84       	ldd	r6, Y+14	; 0x0e
    15d8:	7d 84       	ldd	r7, Y+13	; 0x0d
    15da:	8c 84       	ldd	r8, Y+12	; 0x0c
    15dc:	9b 84       	ldd	r9, Y+11	; 0x0b
    15de:	aa 84       	ldd	r10, Y+10	; 0x0a
    15e0:	b9 84       	ldd	r11, Y+9	; 0x09
    15e2:	c8 84       	ldd	r12, Y+8	; 0x08
    15e4:	df 80       	ldd	r13, Y+7	; 0x07
    15e6:	ee 80       	ldd	r14, Y+6	; 0x06
    15e8:	fd 80       	ldd	r15, Y+5	; 0x05
    15ea:	0c 81       	ldd	r16, Y+4	; 0x04
    15ec:	1b 81       	ldd	r17, Y+3	; 0x03
    15ee:	aa 81       	ldd	r26, Y+2	; 0x02
    15f0:	b9 81       	ldd	r27, Y+1	; 0x01
    15f2:	ce 0f       	add	r28, r30
    15f4:	d1 1d       	adc	r29, r1
    15f6:	0f b6       	in	r0, 0x3f	; 63
    15f8:	f8 94       	cli
    15fa:	de bf       	out	0x3e, r29	; 62
    15fc:	0f be       	out	0x3f, r0	; 63
    15fe:	cd bf       	out	0x3d, r28	; 61
    1600:	ed 01       	movw	r28, r26
    1602:	08 95       	ret

00001604 <__ftoa_engine>:
    1604:	28 30       	cpi	r18, 0x08	; 8
    1606:	08 f0       	brcs	.+2      	; 0x160a <__ftoa_engine+0x6>
    1608:	27 e0       	ldi	r18, 0x07	; 7
    160a:	33 27       	eor	r19, r19
    160c:	da 01       	movw	r26, r20
    160e:	99 0f       	add	r25, r25
    1610:	31 1d       	adc	r19, r1
    1612:	87 fd       	sbrc	r24, 7
    1614:	91 60       	ori	r25, 0x01	; 1
    1616:	00 96       	adiw	r24, 0x00	; 0
    1618:	61 05       	cpc	r22, r1
    161a:	71 05       	cpc	r23, r1
    161c:	39 f4       	brne	.+14     	; 0x162c <__ftoa_engine+0x28>
    161e:	32 60       	ori	r19, 0x02	; 2
    1620:	2e 5f       	subi	r18, 0xFE	; 254
    1622:	3d 93       	st	X+, r19
    1624:	30 e3       	ldi	r19, 0x30	; 48
    1626:	2a 95       	dec	r18
    1628:	e1 f7       	brne	.-8      	; 0x1622 <__ftoa_engine+0x1e>
    162a:	08 95       	ret
    162c:	9f 3f       	cpi	r25, 0xFF	; 255
    162e:	30 f0       	brcs	.+12     	; 0x163c <__ftoa_engine+0x38>
    1630:	80 38       	cpi	r24, 0x80	; 128
    1632:	71 05       	cpc	r23, r1
    1634:	61 05       	cpc	r22, r1
    1636:	09 f0       	breq	.+2      	; 0x163a <__ftoa_engine+0x36>
    1638:	3c 5f       	subi	r19, 0xFC	; 252
    163a:	3c 5f       	subi	r19, 0xFC	; 252
    163c:	3d 93       	st	X+, r19
    163e:	91 30       	cpi	r25, 0x01	; 1
    1640:	08 f0       	brcs	.+2      	; 0x1644 <__ftoa_engine+0x40>
    1642:	80 68       	ori	r24, 0x80	; 128
    1644:	91 1d       	adc	r25, r1
    1646:	df 93       	push	r29
    1648:	cf 93       	push	r28
    164a:	1f 93       	push	r17
    164c:	0f 93       	push	r16
    164e:	ff 92       	push	r15
    1650:	ef 92       	push	r14
    1652:	19 2f       	mov	r17, r25
    1654:	98 7f       	andi	r25, 0xF8	; 248
    1656:	96 95       	lsr	r25
    1658:	e9 2f       	mov	r30, r25
    165a:	96 95       	lsr	r25
    165c:	96 95       	lsr	r25
    165e:	e9 0f       	add	r30, r25
    1660:	ff 27       	eor	r31, r31
    1662:	e8 50       	subi	r30, 0x08	; 8
    1664:	ff 4f       	sbci	r31, 0xFF	; 255
    1666:	99 27       	eor	r25, r25
    1668:	33 27       	eor	r19, r19
    166a:	ee 24       	eor	r14, r14
    166c:	ff 24       	eor	r15, r15
    166e:	a7 01       	movw	r20, r14
    1670:	e7 01       	movw	r28, r14
    1672:	05 90       	lpm	r0, Z+
    1674:	08 94       	sec
    1676:	07 94       	ror	r0
    1678:	28 f4       	brcc	.+10     	; 0x1684 <__ftoa_engine+0x80>
    167a:	36 0f       	add	r19, r22
    167c:	e7 1e       	adc	r14, r23
    167e:	f8 1e       	adc	r15, r24
    1680:	49 1f       	adc	r20, r25
    1682:	51 1d       	adc	r21, r1
    1684:	66 0f       	add	r22, r22
    1686:	77 1f       	adc	r23, r23
    1688:	88 1f       	adc	r24, r24
    168a:	99 1f       	adc	r25, r25
    168c:	06 94       	lsr	r0
    168e:	a1 f7       	brne	.-24     	; 0x1678 <__ftoa_engine+0x74>
    1690:	05 90       	lpm	r0, Z+
    1692:	07 94       	ror	r0
    1694:	28 f4       	brcc	.+10     	; 0x16a0 <__ftoa_engine+0x9c>
    1696:	e7 0e       	add	r14, r23
    1698:	f8 1e       	adc	r15, r24
    169a:	49 1f       	adc	r20, r25
    169c:	56 1f       	adc	r21, r22
    169e:	c1 1d       	adc	r28, r1
    16a0:	77 0f       	add	r23, r23
    16a2:	88 1f       	adc	r24, r24
    16a4:	99 1f       	adc	r25, r25
    16a6:	66 1f       	adc	r22, r22
    16a8:	06 94       	lsr	r0
    16aa:	a1 f7       	brne	.-24     	; 0x1694 <__ftoa_engine+0x90>
    16ac:	05 90       	lpm	r0, Z+
    16ae:	07 94       	ror	r0
    16b0:	28 f4       	brcc	.+10     	; 0x16bc <__ftoa_engine+0xb8>
    16b2:	f8 0e       	add	r15, r24
    16b4:	49 1f       	adc	r20, r25
    16b6:	56 1f       	adc	r21, r22
    16b8:	c7 1f       	adc	r28, r23
    16ba:	d1 1d       	adc	r29, r1
    16bc:	88 0f       	add	r24, r24
    16be:	99 1f       	adc	r25, r25
    16c0:	66 1f       	adc	r22, r22
    16c2:	77 1f       	adc	r23, r23
    16c4:	06 94       	lsr	r0
    16c6:	a1 f7       	brne	.-24     	; 0x16b0 <__ftoa_engine+0xac>
    16c8:	05 90       	lpm	r0, Z+
    16ca:	07 94       	ror	r0
    16cc:	20 f4       	brcc	.+8      	; 0x16d6 <__ftoa_engine+0xd2>
    16ce:	49 0f       	add	r20, r25
    16d0:	56 1f       	adc	r21, r22
    16d2:	c7 1f       	adc	r28, r23
    16d4:	d8 1f       	adc	r29, r24
    16d6:	99 0f       	add	r25, r25
    16d8:	66 1f       	adc	r22, r22
    16da:	77 1f       	adc	r23, r23
    16dc:	88 1f       	adc	r24, r24
    16de:	06 94       	lsr	r0
    16e0:	a9 f7       	brne	.-22     	; 0x16cc <__ftoa_engine+0xc8>
    16e2:	84 91       	lpm	r24, Z
    16e4:	10 95       	com	r17
    16e6:	17 70       	andi	r17, 0x07	; 7
    16e8:	41 f0       	breq	.+16     	; 0x16fa <__ftoa_engine+0xf6>
    16ea:	d6 95       	lsr	r29
    16ec:	c7 95       	ror	r28
    16ee:	57 95       	ror	r21
    16f0:	47 95       	ror	r20
    16f2:	f7 94       	ror	r15
    16f4:	e7 94       	ror	r14
    16f6:	1a 95       	dec	r17
    16f8:	c1 f7       	brne	.-16     	; 0x16ea <__ftoa_engine+0xe6>
    16fa:	ee e9       	ldi	r30, 0x9E	; 158
    16fc:	f0 e0       	ldi	r31, 0x00	; 0
    16fe:	68 94       	set
    1700:	15 90       	lpm	r1, Z+
    1702:	15 91       	lpm	r17, Z+
    1704:	35 91       	lpm	r19, Z+
    1706:	65 91       	lpm	r22, Z+
    1708:	95 91       	lpm	r25, Z+
    170a:	05 90       	lpm	r0, Z+
    170c:	7f e2       	ldi	r23, 0x2F	; 47
    170e:	73 95       	inc	r23
    1710:	e1 18       	sub	r14, r1
    1712:	f1 0a       	sbc	r15, r17
    1714:	43 0b       	sbc	r20, r19
    1716:	56 0b       	sbc	r21, r22
    1718:	c9 0b       	sbc	r28, r25
    171a:	d0 09       	sbc	r29, r0
    171c:	c0 f7       	brcc	.-16     	; 0x170e <__ftoa_engine+0x10a>
    171e:	e1 0c       	add	r14, r1
    1720:	f1 1e       	adc	r15, r17
    1722:	43 1f       	adc	r20, r19
    1724:	56 1f       	adc	r21, r22
    1726:	c9 1f       	adc	r28, r25
    1728:	d0 1d       	adc	r29, r0
    172a:	7e f4       	brtc	.+30     	; 0x174a <__ftoa_engine+0x146>
    172c:	70 33       	cpi	r23, 0x30	; 48
    172e:	11 f4       	brne	.+4      	; 0x1734 <__ftoa_engine+0x130>
    1730:	8a 95       	dec	r24
    1732:	e6 cf       	rjmp	.-52     	; 0x1700 <__ftoa_engine+0xfc>
    1734:	e8 94       	clt
    1736:	01 50       	subi	r16, 0x01	; 1
    1738:	30 f0       	brcs	.+12     	; 0x1746 <__ftoa_engine+0x142>
    173a:	08 0f       	add	r16, r24
    173c:	0a f4       	brpl	.+2      	; 0x1740 <__ftoa_engine+0x13c>
    173e:	00 27       	eor	r16, r16
    1740:	02 17       	cp	r16, r18
    1742:	08 f4       	brcc	.+2      	; 0x1746 <__ftoa_engine+0x142>
    1744:	20 2f       	mov	r18, r16
    1746:	23 95       	inc	r18
    1748:	02 2f       	mov	r16, r18
    174a:	7a 33       	cpi	r23, 0x3A	; 58
    174c:	28 f0       	brcs	.+10     	; 0x1758 <__ftoa_engine+0x154>
    174e:	79 e3       	ldi	r23, 0x39	; 57
    1750:	7d 93       	st	X+, r23
    1752:	2a 95       	dec	r18
    1754:	e9 f7       	brne	.-6      	; 0x1750 <__ftoa_engine+0x14c>
    1756:	10 c0       	rjmp	.+32     	; 0x1778 <__ftoa_engine+0x174>
    1758:	7d 93       	st	X+, r23
    175a:	2a 95       	dec	r18
    175c:	89 f6       	brne	.-94     	; 0x1700 <__ftoa_engine+0xfc>
    175e:	06 94       	lsr	r0
    1760:	97 95       	ror	r25
    1762:	67 95       	ror	r22
    1764:	37 95       	ror	r19
    1766:	17 95       	ror	r17
    1768:	17 94       	ror	r1
    176a:	e1 18       	sub	r14, r1
    176c:	f1 0a       	sbc	r15, r17
    176e:	43 0b       	sbc	r20, r19
    1770:	56 0b       	sbc	r21, r22
    1772:	c9 0b       	sbc	r28, r25
    1774:	d0 09       	sbc	r29, r0
    1776:	98 f0       	brcs	.+38     	; 0x179e <__ftoa_engine+0x19a>
    1778:	23 95       	inc	r18
    177a:	7e 91       	ld	r23, -X
    177c:	73 95       	inc	r23
    177e:	7a 33       	cpi	r23, 0x3A	; 58
    1780:	08 f0       	brcs	.+2      	; 0x1784 <__ftoa_engine+0x180>
    1782:	70 e3       	ldi	r23, 0x30	; 48
    1784:	7c 93       	st	X, r23
    1786:	20 13       	cpse	r18, r16
    1788:	b8 f7       	brcc	.-18     	; 0x1778 <__ftoa_engine+0x174>
    178a:	7e 91       	ld	r23, -X
    178c:	70 61       	ori	r23, 0x10	; 16
    178e:	7d 93       	st	X+, r23
    1790:	30 f0       	brcs	.+12     	; 0x179e <__ftoa_engine+0x19a>
    1792:	83 95       	inc	r24
    1794:	71 e3       	ldi	r23, 0x31	; 49
    1796:	7d 93       	st	X+, r23
    1798:	70 e3       	ldi	r23, 0x30	; 48
    179a:	2a 95       	dec	r18
    179c:	e1 f7       	brne	.-8      	; 0x1796 <__ftoa_engine+0x192>
    179e:	11 24       	eor	r1, r1
    17a0:	ef 90       	pop	r14
    17a2:	ff 90       	pop	r15
    17a4:	0f 91       	pop	r16
    17a6:	1f 91       	pop	r17
    17a8:	cf 91       	pop	r28
    17aa:	df 91       	pop	r29
    17ac:	99 27       	eor	r25, r25
    17ae:	87 fd       	sbrc	r24, 7
    17b0:	90 95       	com	r25
    17b2:	08 95       	ret

000017b4 <strnlen_P>:
    17b4:	fc 01       	movw	r30, r24
    17b6:	05 90       	lpm	r0, Z+
    17b8:	61 50       	subi	r22, 0x01	; 1
    17ba:	70 40       	sbci	r23, 0x00	; 0
    17bc:	01 10       	cpse	r0, r1
    17be:	d8 f7       	brcc	.-10     	; 0x17b6 <strnlen_P+0x2>
    17c0:	80 95       	com	r24
    17c2:	90 95       	com	r25
    17c4:	8e 0f       	add	r24, r30
    17c6:	9f 1f       	adc	r25, r31
    17c8:	08 95       	ret

000017ca <strnlen>:
    17ca:	fc 01       	movw	r30, r24
    17cc:	61 50       	subi	r22, 0x01	; 1
    17ce:	70 40       	sbci	r23, 0x00	; 0
    17d0:	01 90       	ld	r0, Z+
    17d2:	01 10       	cpse	r0, r1
    17d4:	d8 f7       	brcc	.-10     	; 0x17cc <strnlen+0x2>
    17d6:	80 95       	com	r24
    17d8:	90 95       	com	r25
    17da:	8e 0f       	add	r24, r30
    17dc:	9f 1f       	adc	r25, r31
    17de:	08 95       	ret

000017e0 <fputc>:
    17e0:	0f 93       	push	r16
    17e2:	1f 93       	push	r17
    17e4:	cf 93       	push	r28
    17e6:	df 93       	push	r29
    17e8:	fb 01       	movw	r30, r22
    17ea:	23 81       	ldd	r18, Z+3	; 0x03
    17ec:	21 fd       	sbrc	r18, 1
    17ee:	03 c0       	rjmp	.+6      	; 0x17f6 <fputc+0x16>
    17f0:	8f ef       	ldi	r24, 0xFF	; 255
    17f2:	9f ef       	ldi	r25, 0xFF	; 255
    17f4:	28 c0       	rjmp	.+80     	; 0x1846 <fputc+0x66>
    17f6:	22 ff       	sbrs	r18, 2
    17f8:	16 c0       	rjmp	.+44     	; 0x1826 <fputc+0x46>
    17fa:	46 81       	ldd	r20, Z+6	; 0x06
    17fc:	57 81       	ldd	r21, Z+7	; 0x07
    17fe:	24 81       	ldd	r18, Z+4	; 0x04
    1800:	35 81       	ldd	r19, Z+5	; 0x05
    1802:	42 17       	cp	r20, r18
    1804:	53 07       	cpc	r21, r19
    1806:	44 f4       	brge	.+16     	; 0x1818 <fputc+0x38>
    1808:	a0 81       	ld	r26, Z
    180a:	b1 81       	ldd	r27, Z+1	; 0x01
    180c:	9d 01       	movw	r18, r26
    180e:	2f 5f       	subi	r18, 0xFF	; 255
    1810:	3f 4f       	sbci	r19, 0xFF	; 255
    1812:	31 83       	std	Z+1, r19	; 0x01
    1814:	20 83       	st	Z, r18
    1816:	8c 93       	st	X, r24
    1818:	26 81       	ldd	r18, Z+6	; 0x06
    181a:	37 81       	ldd	r19, Z+7	; 0x07
    181c:	2f 5f       	subi	r18, 0xFF	; 255
    181e:	3f 4f       	sbci	r19, 0xFF	; 255
    1820:	37 83       	std	Z+7, r19	; 0x07
    1822:	26 83       	std	Z+6, r18	; 0x06
    1824:	10 c0       	rjmp	.+32     	; 0x1846 <fputc+0x66>
    1826:	eb 01       	movw	r28, r22
    1828:	09 2f       	mov	r16, r25
    182a:	18 2f       	mov	r17, r24
    182c:	00 84       	ldd	r0, Z+8	; 0x08
    182e:	f1 85       	ldd	r31, Z+9	; 0x09
    1830:	e0 2d       	mov	r30, r0
    1832:	09 95       	icall
    1834:	89 2b       	or	r24, r25
    1836:	e1 f6       	brne	.-72     	; 0x17f0 <fputc+0x10>
    1838:	8e 81       	ldd	r24, Y+6	; 0x06
    183a:	9f 81       	ldd	r25, Y+7	; 0x07
    183c:	01 96       	adiw	r24, 0x01	; 1
    183e:	9f 83       	std	Y+7, r25	; 0x07
    1840:	8e 83       	std	Y+6, r24	; 0x06
    1842:	81 2f       	mov	r24, r17
    1844:	90 2f       	mov	r25, r16
    1846:	df 91       	pop	r29
    1848:	cf 91       	pop	r28
    184a:	1f 91       	pop	r17
    184c:	0f 91       	pop	r16
    184e:	08 95       	ret

00001850 <printf>:
    1850:	a0 e0       	ldi	r26, 0x00	; 0
    1852:	b0 e0       	ldi	r27, 0x00	; 0
    1854:	ee e2       	ldi	r30, 0x2E	; 46
    1856:	fc e0       	ldi	r31, 0x0C	; 12
    1858:	0c 94 db 0a 	jmp	0x15b6	; 0x15b6 <__prologue_saves__+0x20>
    185c:	ae 01       	movw	r20, r28
    185e:	4b 5f       	subi	r20, 0xFB	; 251
    1860:	5f 4f       	sbci	r21, 0xFF	; 255
    1862:	fa 01       	movw	r30, r20
    1864:	61 91       	ld	r22, Z+
    1866:	71 91       	ld	r23, Z+
    1868:	af 01       	movw	r20, r30
    186a:	80 91 2a 01 	lds	r24, 0x012A
    186e:	90 91 2b 01 	lds	r25, 0x012B
    1872:	0e 94 4f 07 	call	0xe9e	; 0xe9e <vfprintf>
    1876:	e2 e0       	ldi	r30, 0x02	; 2
    1878:	0c 94 f7 0a 	jmp	0x15ee	; 0x15ee <__epilogue_restores__+0x20>

0000187c <puts>:
    187c:	0f 93       	push	r16
    187e:	1f 93       	push	r17
    1880:	cf 93       	push	r28
    1882:	df 93       	push	r29
    1884:	e0 91 2a 01 	lds	r30, 0x012A
    1888:	f0 91 2b 01 	lds	r31, 0x012B
    188c:	23 81       	ldd	r18, Z+3	; 0x03
    188e:	21 ff       	sbrs	r18, 1
    1890:	1b c0       	rjmp	.+54     	; 0x18c8 <puts+0x4c>
    1892:	8c 01       	movw	r16, r24
    1894:	d0 e0       	ldi	r29, 0x00	; 0
    1896:	c0 e0       	ldi	r28, 0x00	; 0
    1898:	f8 01       	movw	r30, r16
    189a:	81 91       	ld	r24, Z+
    189c:	8f 01       	movw	r16, r30
    189e:	60 91 2a 01 	lds	r22, 0x012A
    18a2:	70 91 2b 01 	lds	r23, 0x012B
    18a6:	db 01       	movw	r26, r22
    18a8:	18 96       	adiw	r26, 0x08	; 8
    18aa:	ed 91       	ld	r30, X+
    18ac:	fc 91       	ld	r31, X
    18ae:	19 97       	sbiw	r26, 0x09	; 9
    18b0:	88 23       	and	r24, r24
    18b2:	31 f0       	breq	.+12     	; 0x18c0 <puts+0x44>
    18b4:	09 95       	icall
    18b6:	89 2b       	or	r24, r25
    18b8:	79 f3       	breq	.-34     	; 0x1898 <puts+0x1c>
    18ba:	df ef       	ldi	r29, 0xFF	; 255
    18bc:	cf ef       	ldi	r28, 0xFF	; 255
    18be:	ec cf       	rjmp	.-40     	; 0x1898 <puts+0x1c>
    18c0:	8a e0       	ldi	r24, 0x0A	; 10
    18c2:	09 95       	icall
    18c4:	89 2b       	or	r24, r25
    18c6:	19 f0       	breq	.+6      	; 0x18ce <puts+0x52>
    18c8:	8f ef       	ldi	r24, 0xFF	; 255
    18ca:	9f ef       	ldi	r25, 0xFF	; 255
    18cc:	02 c0       	rjmp	.+4      	; 0x18d2 <puts+0x56>
    18ce:	8d 2f       	mov	r24, r29
    18d0:	9c 2f       	mov	r25, r28
    18d2:	df 91       	pop	r29
    18d4:	cf 91       	pop	r28
    18d6:	1f 91       	pop	r17
    18d8:	0f 91       	pop	r16
    18da:	08 95       	ret

000018dc <__ultoa_invert>:
    18dc:	fa 01       	movw	r30, r20
    18de:	aa 27       	eor	r26, r26
    18e0:	28 30       	cpi	r18, 0x08	; 8
    18e2:	51 f1       	breq	.+84     	; 0x1938 <__ultoa_invert+0x5c>
    18e4:	20 31       	cpi	r18, 0x10	; 16
    18e6:	81 f1       	breq	.+96     	; 0x1948 <__ultoa_invert+0x6c>
    18e8:	e8 94       	clt
    18ea:	6f 93       	push	r22
    18ec:	6e 7f       	andi	r22, 0xFE	; 254
    18ee:	6e 5f       	subi	r22, 0xFE	; 254
    18f0:	7f 4f       	sbci	r23, 0xFF	; 255
    18f2:	8f 4f       	sbci	r24, 0xFF	; 255
    18f4:	9f 4f       	sbci	r25, 0xFF	; 255
    18f6:	af 4f       	sbci	r26, 0xFF	; 255
    18f8:	b1 e0       	ldi	r27, 0x01	; 1
    18fa:	3e d0       	rcall	.+124    	; 0x1978 <__ultoa_invert+0x9c>
    18fc:	b4 e0       	ldi	r27, 0x04	; 4
    18fe:	3c d0       	rcall	.+120    	; 0x1978 <__ultoa_invert+0x9c>
    1900:	67 0f       	add	r22, r23
    1902:	78 1f       	adc	r23, r24
    1904:	89 1f       	adc	r24, r25
    1906:	9a 1f       	adc	r25, r26
    1908:	a1 1d       	adc	r26, r1
    190a:	68 0f       	add	r22, r24
    190c:	79 1f       	adc	r23, r25
    190e:	8a 1f       	adc	r24, r26
    1910:	91 1d       	adc	r25, r1
    1912:	a1 1d       	adc	r26, r1
    1914:	6a 0f       	add	r22, r26
    1916:	71 1d       	adc	r23, r1
    1918:	81 1d       	adc	r24, r1
    191a:	91 1d       	adc	r25, r1
    191c:	a1 1d       	adc	r26, r1
    191e:	20 d0       	rcall	.+64     	; 0x1960 <__ultoa_invert+0x84>
    1920:	09 f4       	brne	.+2      	; 0x1924 <__ultoa_invert+0x48>
    1922:	68 94       	set
    1924:	3f 91       	pop	r19
    1926:	2a e0       	ldi	r18, 0x0A	; 10
    1928:	26 9f       	mul	r18, r22
    192a:	11 24       	eor	r1, r1
    192c:	30 19       	sub	r19, r0
    192e:	30 5d       	subi	r19, 0xD0	; 208
    1930:	31 93       	st	Z+, r19
    1932:	de f6       	brtc	.-74     	; 0x18ea <__ultoa_invert+0xe>
    1934:	cf 01       	movw	r24, r30
    1936:	08 95       	ret
    1938:	46 2f       	mov	r20, r22
    193a:	47 70       	andi	r20, 0x07	; 7
    193c:	40 5d       	subi	r20, 0xD0	; 208
    193e:	41 93       	st	Z+, r20
    1940:	b3 e0       	ldi	r27, 0x03	; 3
    1942:	0f d0       	rcall	.+30     	; 0x1962 <__ultoa_invert+0x86>
    1944:	c9 f7       	brne	.-14     	; 0x1938 <__ultoa_invert+0x5c>
    1946:	f6 cf       	rjmp	.-20     	; 0x1934 <__ultoa_invert+0x58>
    1948:	46 2f       	mov	r20, r22
    194a:	4f 70       	andi	r20, 0x0F	; 15
    194c:	40 5d       	subi	r20, 0xD0	; 208
    194e:	4a 33       	cpi	r20, 0x3A	; 58
    1950:	18 f0       	brcs	.+6      	; 0x1958 <__ultoa_invert+0x7c>
    1952:	49 5d       	subi	r20, 0xD9	; 217
    1954:	31 fd       	sbrc	r19, 1
    1956:	40 52       	subi	r20, 0x20	; 32
    1958:	41 93       	st	Z+, r20
    195a:	02 d0       	rcall	.+4      	; 0x1960 <__ultoa_invert+0x84>
    195c:	a9 f7       	brne	.-22     	; 0x1948 <__ultoa_invert+0x6c>
    195e:	ea cf       	rjmp	.-44     	; 0x1934 <__ultoa_invert+0x58>
    1960:	b4 e0       	ldi	r27, 0x04	; 4
    1962:	a6 95       	lsr	r26
    1964:	97 95       	ror	r25
    1966:	87 95       	ror	r24
    1968:	77 95       	ror	r23
    196a:	67 95       	ror	r22
    196c:	ba 95       	dec	r27
    196e:	c9 f7       	brne	.-14     	; 0x1962 <__ultoa_invert+0x86>
    1970:	00 97       	sbiw	r24, 0x00	; 0
    1972:	61 05       	cpc	r22, r1
    1974:	71 05       	cpc	r23, r1
    1976:	08 95       	ret
    1978:	9b 01       	movw	r18, r22
    197a:	ac 01       	movw	r20, r24
    197c:	0a 2e       	mov	r0, r26
    197e:	06 94       	lsr	r0
    1980:	57 95       	ror	r21
    1982:	47 95       	ror	r20
    1984:	37 95       	ror	r19
    1986:	27 95       	ror	r18
    1988:	ba 95       	dec	r27
    198a:	c9 f7       	brne	.-14     	; 0x197e <__ultoa_invert+0xa2>
    198c:	62 0f       	add	r22, r18
    198e:	73 1f       	adc	r23, r19
    1990:	84 1f       	adc	r24, r20
    1992:	95 1f       	adc	r25, r21
    1994:	a0 1d       	adc	r26, r0
    1996:	08 95       	ret

00001998 <_exit>:
    1998:	f8 94       	cli

0000199a <__stop_program>:
    199a:	ff cf       	rjmp	.-2      	; 0x199a <__stop_program>
